Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    LBRACE
    NEWLINE
    RBRACE

Grammar

Rule 0     S' -> program
Rule 1     program -> KEYWORD_BEGIN statement_list KEYWORD_END
Rule 2     program -> statement_list
Rule 3     statement_list -> statement statement_list
Rule 4     statement_list -> control_statement statement_list
Rule 5     statement_list -> empty
Rule 6     statement -> assignment_statement
Rule 7     statement -> expression SEMICOLON
Rule 8     statement -> print_statement
Rule 9     statement -> natural_language
Rule 10    assignment_statement -> declaration
Rule 11    assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
Rule 12    declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
Rule 13    expression -> expression PLUS_OP term
Rule 14    expression -> expression MINUS_OP term
Rule 15    expression -> term
Rule 16    term -> term TIMES_OP factor
Rule 17    term -> term DIVIDE_OP factor
Rule 18    term -> factor
Rule 19    term -> function_call
Rule 20    factor -> INTEGER
Rule 21    factor -> FLOAT
Rule 22    factor -> STRING
Rule 23    factor -> IDENTIFIER
Rule 24    factor -> KEYWORD_TRUE
Rule 25    factor -> KEYWORD_FALSE
Rule 26    factor -> LPAREN expression RPAREN
Rule 27    factor -> PLUS_OP factor
Rule 28    factor -> MINUS_OP factor
Rule 29    control_statement -> if_statement
Rule 30    control_statement -> for_statement
Rule 31    control_statement -> while_statement
Rule 32    control_statement -> function_call SEMICOLON
Rule 33    if_statement -> KEYWORD_IF condition block else_part
Rule 34    else_part -> KEYWORD_ELSE block
Rule 35    else_part -> KEYWORD_ELSEIF condition block else_part
Rule 36    else_part -> empty
Rule 37    for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block
Rule 38    for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block
Rule 39    for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block
Rule 40    for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block
Rule 41    while_statement -> KEYWORD_WHILE condition block
Rule 42    block -> KEYWORD_BEGIN statement_list KEYWORD_END
Rule 43    block -> statement
Rule 44    condition -> expression LT_OP expression
Rule 45    condition -> expression GT_OP expression
Rule 46    condition -> expression LE_OP expression
Rule 47    condition -> expression GE_OP expression
Rule 48    condition -> expression EQ_OP expression
Rule 49    condition -> expression NE_OP expression
Rule 50    condition -> condition KEYWORD_AND condition
Rule 51    condition -> condition KEYWORD_OR condition
Rule 52    condition -> KEYWORD_NOT condition
Rule 53    condition -> expression
Rule 54    condition -> LPAREN condition RPAREN
Rule 55    natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON
Rule 56    natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON
Rule 57    natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON
Rule 58    natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
Rule 59    natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
Rule 60    natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
Rule 61    natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
Rule 62    natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
Rule 63    natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
Rule 64    natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
Rule 65    natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
Rule 66    function_call -> IDENTIFIER LPAREN parameter_list RPAREN
Rule 67    parameter_list -> expression COMMA parameter_list
Rule 68    parameter_list -> expression
Rule 69    parameter_list -> empty
Rule 70    print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON
Rule 71    print_arguments -> printable_item COMMA print_arguments
Rule 72    print_arguments -> printable_item
Rule 73    printable_item -> STRING
Rule 74    printable_item -> expression
Rule 75    function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block
Rule 76    function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block
Rule 77    parameter_declaration_list -> IDENTIFIER COMMA parameter_declaration_list
Rule 78    parameter_declaration_list -> IDENTIFIER
Rule 79    return_statement -> KEYWORD_RETURN expression SEMICOLON
Rule 80    return_statement -> KEYWORD_RETURN SEMICOLON
Rule 81    break_statement -> KEYWORD_BREAK SEMICOLON
Rule 82    continue_statement -> KEYWORD_CONTINUE SEMICOLON
Rule 83    statement -> return_statement
Rule 84    statement -> break_statement
Rule 85    statement -> continue_statement
Rule 86    statement -> function_definition
Rule 87    empty -> <empty>

Terminals, with rules where they appear

ADD_KEYWORD_NATURAL_LANG : 56
ASSIGNMENT_OP        : 11 12 37 38
BY_KEYWORD_NATURAL_LANG : 58 59
COMMA                : 67 71 77
DIVIDE_OP            : 17
DIV_KEYWORD_NATURAL_LANG : 59
EQ_OP                : 48 64
FLOAT                : 21
FROM_KEYWORD_NATURAL_LANG : 57
GE_OP                : 47 63
GT_OP                : 45 61
IDENTIFIER           : 11 12 23 37 38 55 56 57 58 59 60 61 62 63 64 65 66 75 76 77 78
INTEGER              : 20
IS_KEYWORD_NATURAL_LANG : 60 61 62 63 64 65
KEYWORD_AND          : 50
KEYWORD_BEGIN        : 1 42
KEYWORD_BREAK        : 81
KEYWORD_CONTINUE     : 82
KEYWORD_ELSE         : 34
KEYWORD_ELSEIF       : 35
KEYWORD_END          : 1 42
KEYWORD_FALSE        : 25
KEYWORD_FOR          : 37 38 39 40
KEYWORD_FUNCTION     : 75 76
KEYWORD_IF           : 33 60 61 62 63 64 65
KEYWORD_LET          : 12
KEYWORD_NOT          : 52
KEYWORD_OR           : 51
KEYWORD_PRINT        : 70
KEYWORD_RETURN       : 79 80
KEYWORD_STEP         : 38 39
KEYWORD_TO           : 37 38 39 40 55 56
KEYWORD_TRUE         : 24
KEYWORD_WHILE        : 41
LBRACE               : 
LE_OP                : 46 62
LPAREN               : 26 54 66 70 75 76
LT_OP                : 44 60
MINUS_OP             : 14 28
MULT_KEYWORD_NATURAL_LANG : 58
NEWLINE              : 
NE_OP                : 49 65
PLUS_OP              : 13 27
RBRACE               : 
RPAREN               : 26 54 66 70 75 76
SEMICOLON            : 7 11 12 32 55 56 57 58 59 70 79 80 81 82
SET_KEYWORD_NATURAL_LANG : 55
STRING               : 22 73
SUB_KEYWORD_NATURAL_LANG : 57
THEN_KEYWORD_NATURAL_LANG : 60 61 62 63 64 65
TIMES_OP             : 16
error                : 

Nonterminals, with rules where they appear

assignment_statement : 6
block                : 33 34 35 37 38 39 40 41 75 76
break_statement      : 84
condition            : 33 35 41 50 50 51 51 52 54
continue_statement   : 85
control_statement    : 4
declaration          : 10 39 40
else_part            : 33 35
empty                : 5 36 69
expression           : 7 11 12 13 14 26 37 37 38 38 38 39 39 40 44 44 45 45 46 46 47 47 48 48 49 49 53 55 56 57 58 59 60 61 62 63 64 65 67 68 74 79
factor               : 16 17 18 27 28
for_statement        : 30
function_call        : 19 32
function_definition  : 86
if_statement         : 29
natural_language     : 9
parameter_declaration_list : 75 77
parameter_list       : 66 67
print_arguments      : 70 71
print_statement      : 8
printable_item       : 71 72
program              : 0
return_statement     : 83
statement            : 3 43
statement_list       : 1 2 3 4 42 60 61 62 63 64 65
term                 : 13 14 15 16 17
while_statement      : 31

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . KEYWORD_BEGIN statement_list KEYWORD_END
    (2) program -> . statement_list
    (3) statement_list -> . statement statement_list
    (4) statement_list -> . control_statement statement_list
    (5) statement_list -> . empty
    (6) statement -> . assignment_statement
    (7) statement -> . expression SEMICOLON
    (8) statement -> . print_statement
    (9) statement -> . natural_language
    (83) statement -> . return_statement
    (84) statement -> . break_statement
    (85) statement -> . continue_statement
    (86) statement -> . function_definition
    (29) control_statement -> . if_statement
    (30) control_statement -> . for_statement
    (31) control_statement -> . while_statement
    (32) control_statement -> . function_call SEMICOLON
    (87) empty -> .
    (10) assignment_statement -> . declaration
    (11) assignment_statement -> . IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (70) print_statement -> . KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON
    (55) natural_language -> . SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON
    (56) natural_language -> . ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON
    (57) natural_language -> . SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON
    (58) natural_language -> . MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (59) natural_language -> . DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (60) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (79) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (80) return_statement -> . KEYWORD_RETURN SEMICOLON
    (81) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) continue_statement -> . KEYWORD_CONTINUE SEMICOLON
    (75) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block
    (76) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block
    (33) if_statement -> . KEYWORD_IF condition block else_part
    (37) for_statement -> . KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block
    (38) for_statement -> . KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block
    (39) for_statement -> . KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block
    (40) for_statement -> . KEYWORD_FOR declaration KEYWORD_TO expression block
    (41) while_statement -> . KEYWORD_WHILE condition block
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN
    (12) declaration -> . KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor

    KEYWORD_BEGIN   shift and go to state 2
    $end            reduce using rule 87 (empty -> .)
    IDENTIFIER      shift and go to state 20
    KEYWORD_PRINT   shift and go to state 24
    SET_KEYWORD_NATURAL_LANG shift and go to state 26
    ADD_KEYWORD_NATURAL_LANG shift and go to state 27
    SUB_KEYWORD_NATURAL_LANG shift and go to state 28
    MULT_KEYWORD_NATURAL_LANG shift and go to state 29
    DIV_KEYWORD_NATURAL_LANG shift and go to state 30
    KEYWORD_IF      shift and go to state 31
    KEYWORD_RETURN  shift and go to state 32
    KEYWORD_BREAK   shift and go to state 33
    KEYWORD_CONTINUE shift and go to state 34
    KEYWORD_FUNCTION shift and go to state 35
    KEYWORD_FOR     shift and go to state 36
    KEYWORD_WHILE   shift and go to state 37
    KEYWORD_LET     shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    program                        shift and go to state 1
    statement_list                 shift and go to state 3
    statement                      shift and go to state 4
    control_statement              shift and go to state 5
    empty                          shift and go to state 6
    assignment_statement           shift and go to state 7
    expression                     shift and go to state 8
    print_statement                shift and go to state 9
    natural_language               shift and go to state 10
    return_statement               shift and go to state 11
    break_statement                shift and go to state 12
    continue_statement             shift and go to state 13
    function_definition            shift and go to state 14
    if_statement                   shift and go to state 15
    for_statement                  shift and go to state 16
    while_statement                shift and go to state 17
    function_call                  shift and go to state 18
    declaration                    shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 39

state 1

    (0) S' -> program .



state 2

    (1) program -> KEYWORD_BEGIN . statement_list KEYWORD_END
    (3) statement_list -> . statement statement_list
    (4) statement_list -> . control_statement statement_list
    (5) statement_list -> . empty
    (6) statement -> . assignment_statement
    (7) statement -> . expression SEMICOLON
    (8) statement -> . print_statement
    (9) statement -> . natural_language
    (83) statement -> . return_statement
    (84) statement -> . break_statement
    (85) statement -> . continue_statement
    (86) statement -> . function_definition
    (29) control_statement -> . if_statement
    (30) control_statement -> . for_statement
    (31) control_statement -> . while_statement
    (32) control_statement -> . function_call SEMICOLON
    (87) empty -> .
    (10) assignment_statement -> . declaration
    (11) assignment_statement -> . IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (70) print_statement -> . KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON
    (55) natural_language -> . SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON
    (56) natural_language -> . ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON
    (57) natural_language -> . SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON
    (58) natural_language -> . MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (59) natural_language -> . DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (60) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (79) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (80) return_statement -> . KEYWORD_RETURN SEMICOLON
    (81) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) continue_statement -> . KEYWORD_CONTINUE SEMICOLON
    (75) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block
    (76) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block
    (33) if_statement -> . KEYWORD_IF condition block else_part
    (37) for_statement -> . KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block
    (38) for_statement -> . KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block
    (39) for_statement -> . KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block
    (40) for_statement -> . KEYWORD_FOR declaration KEYWORD_TO expression block
    (41) while_statement -> . KEYWORD_WHILE condition block
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN
    (12) declaration -> . KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor

    KEYWORD_END     reduce using rule 87 (empty -> .)
    IDENTIFIER      shift and go to state 20
    KEYWORD_PRINT   shift and go to state 24
    SET_KEYWORD_NATURAL_LANG shift and go to state 26
    ADD_KEYWORD_NATURAL_LANG shift and go to state 27
    SUB_KEYWORD_NATURAL_LANG shift and go to state 28
    MULT_KEYWORD_NATURAL_LANG shift and go to state 29
    DIV_KEYWORD_NATURAL_LANG shift and go to state 30
    KEYWORD_IF      shift and go to state 31
    KEYWORD_RETURN  shift and go to state 32
    KEYWORD_BREAK   shift and go to state 33
    KEYWORD_CONTINUE shift and go to state 34
    KEYWORD_FUNCTION shift and go to state 35
    KEYWORD_FOR     shift and go to state 36
    KEYWORD_WHILE   shift and go to state 37
    KEYWORD_LET     shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    statement_list                 shift and go to state 45
    statement                      shift and go to state 4
    control_statement              shift and go to state 5
    empty                          shift and go to state 6
    assignment_statement           shift and go to state 7
    expression                     shift and go to state 8
    print_statement                shift and go to state 9
    natural_language               shift and go to state 10
    return_statement               shift and go to state 11
    break_statement                shift and go to state 12
    continue_statement             shift and go to state 13
    function_definition            shift and go to state 14
    if_statement                   shift and go to state 15
    for_statement                  shift and go to state 16
    while_statement                shift and go to state 17
    function_call                  shift and go to state 18
    declaration                    shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 39

state 3

    (2) program -> statement_list .

    $end            reduce using rule 2 (program -> statement_list .)


state 4

    (3) statement_list -> statement . statement_list
    (3) statement_list -> . statement statement_list
    (4) statement_list -> . control_statement statement_list
    (5) statement_list -> . empty
    (6) statement -> . assignment_statement
    (7) statement -> . expression SEMICOLON
    (8) statement -> . print_statement
    (9) statement -> . natural_language
    (83) statement -> . return_statement
    (84) statement -> . break_statement
    (85) statement -> . continue_statement
    (86) statement -> . function_definition
    (29) control_statement -> . if_statement
    (30) control_statement -> . for_statement
    (31) control_statement -> . while_statement
    (32) control_statement -> . function_call SEMICOLON
    (87) empty -> .
    (10) assignment_statement -> . declaration
    (11) assignment_statement -> . IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (70) print_statement -> . KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON
    (55) natural_language -> . SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON
    (56) natural_language -> . ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON
    (57) natural_language -> . SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON
    (58) natural_language -> . MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (59) natural_language -> . DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (60) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (79) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (80) return_statement -> . KEYWORD_RETURN SEMICOLON
    (81) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) continue_statement -> . KEYWORD_CONTINUE SEMICOLON
    (75) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block
    (76) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block
    (33) if_statement -> . KEYWORD_IF condition block else_part
    (37) for_statement -> . KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block
    (38) for_statement -> . KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block
    (39) for_statement -> . KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block
    (40) for_statement -> . KEYWORD_FOR declaration KEYWORD_TO expression block
    (41) while_statement -> . KEYWORD_WHILE condition block
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN
    (12) declaration -> . KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for KEYWORD_PRINT resolved as shift
  ! shift/reduce conflict for SET_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for ADD_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for SUB_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for MULT_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for DIV_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for KEYWORD_IF resolved as shift
  ! shift/reduce conflict for KEYWORD_RETURN resolved as shift
  ! shift/reduce conflict for KEYWORD_BREAK resolved as shift
  ! shift/reduce conflict for KEYWORD_CONTINUE resolved as shift
  ! shift/reduce conflict for KEYWORD_FUNCTION resolved as shift
  ! shift/reduce conflict for KEYWORD_FOR resolved as shift
  ! shift/reduce conflict for KEYWORD_WHILE resolved as shift
  ! shift/reduce conflict for KEYWORD_LET resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KEYWORD_TRUE resolved as shift
  ! shift/reduce conflict for KEYWORD_FALSE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for PLUS_OP resolved as shift
  ! shift/reduce conflict for MINUS_OP resolved as shift
    $end            reduce using rule 87 (empty -> .)
    KEYWORD_END     reduce using rule 87 (empty -> .)
    KEYWORD_ELSE    reduce using rule 87 (empty -> .)
    KEYWORD_ELSEIF  reduce using rule 87 (empty -> .)
    IDENTIFIER      shift and go to state 20
    KEYWORD_PRINT   shift and go to state 24
    SET_KEYWORD_NATURAL_LANG shift and go to state 26
    ADD_KEYWORD_NATURAL_LANG shift and go to state 27
    SUB_KEYWORD_NATURAL_LANG shift and go to state 28
    MULT_KEYWORD_NATURAL_LANG shift and go to state 29
    DIV_KEYWORD_NATURAL_LANG shift and go to state 30
    KEYWORD_IF      shift and go to state 31
    KEYWORD_RETURN  shift and go to state 32
    KEYWORD_BREAK   shift and go to state 33
    KEYWORD_CONTINUE shift and go to state 34
    KEYWORD_FUNCTION shift and go to state 35
    KEYWORD_FOR     shift and go to state 36
    KEYWORD_WHILE   shift and go to state 37
    KEYWORD_LET     shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

  ! IDENTIFIER      [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_PRINT   [ reduce using rule 87 (empty -> .) ]
  ! SET_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! ADD_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! SUB_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! MULT_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! DIV_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_IF      [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_RETURN  [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_BREAK   [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_CONTINUE [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_FUNCTION [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_FOR     [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_WHILE   [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_LET     [ reduce using rule 87 (empty -> .) ]
  ! INTEGER         [ reduce using rule 87 (empty -> .) ]
  ! FLOAT           [ reduce using rule 87 (empty -> .) ]
  ! STRING          [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_TRUE    [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_FALSE   [ reduce using rule 87 (empty -> .) ]
  ! LPAREN          [ reduce using rule 87 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 87 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 87 (empty -> .) ]

    statement                      shift and go to state 4
    statement_list                 shift and go to state 46
    control_statement              shift and go to state 5
    empty                          shift and go to state 6
    assignment_statement           shift and go to state 7
    expression                     shift and go to state 8
    print_statement                shift and go to state 9
    natural_language               shift and go to state 10
    return_statement               shift and go to state 11
    break_statement                shift and go to state 12
    continue_statement             shift and go to state 13
    function_definition            shift and go to state 14
    if_statement                   shift and go to state 15
    for_statement                  shift and go to state 16
    while_statement                shift and go to state 17
    function_call                  shift and go to state 18
    declaration                    shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 39

state 5

    (4) statement_list -> control_statement . statement_list
    (3) statement_list -> . statement statement_list
    (4) statement_list -> . control_statement statement_list
    (5) statement_list -> . empty
    (6) statement -> . assignment_statement
    (7) statement -> . expression SEMICOLON
    (8) statement -> . print_statement
    (9) statement -> . natural_language
    (83) statement -> . return_statement
    (84) statement -> . break_statement
    (85) statement -> . continue_statement
    (86) statement -> . function_definition
    (29) control_statement -> . if_statement
    (30) control_statement -> . for_statement
    (31) control_statement -> . while_statement
    (32) control_statement -> . function_call SEMICOLON
    (87) empty -> .
    (10) assignment_statement -> . declaration
    (11) assignment_statement -> . IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (70) print_statement -> . KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON
    (55) natural_language -> . SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON
    (56) natural_language -> . ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON
    (57) natural_language -> . SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON
    (58) natural_language -> . MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (59) natural_language -> . DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (60) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (79) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (80) return_statement -> . KEYWORD_RETURN SEMICOLON
    (81) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) continue_statement -> . KEYWORD_CONTINUE SEMICOLON
    (75) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block
    (76) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block
    (33) if_statement -> . KEYWORD_IF condition block else_part
    (37) for_statement -> . KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block
    (38) for_statement -> . KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block
    (39) for_statement -> . KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block
    (40) for_statement -> . KEYWORD_FOR declaration KEYWORD_TO expression block
    (41) while_statement -> . KEYWORD_WHILE condition block
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN
    (12) declaration -> . KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for KEYWORD_PRINT resolved as shift
  ! shift/reduce conflict for SET_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for ADD_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for SUB_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for MULT_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for DIV_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for KEYWORD_IF resolved as shift
  ! shift/reduce conflict for KEYWORD_RETURN resolved as shift
  ! shift/reduce conflict for KEYWORD_BREAK resolved as shift
  ! shift/reduce conflict for KEYWORD_CONTINUE resolved as shift
  ! shift/reduce conflict for KEYWORD_FUNCTION resolved as shift
  ! shift/reduce conflict for KEYWORD_FOR resolved as shift
  ! shift/reduce conflict for KEYWORD_WHILE resolved as shift
  ! shift/reduce conflict for KEYWORD_LET resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KEYWORD_TRUE resolved as shift
  ! shift/reduce conflict for KEYWORD_FALSE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for PLUS_OP resolved as shift
  ! shift/reduce conflict for MINUS_OP resolved as shift
    $end            reduce using rule 87 (empty -> .)
    KEYWORD_END     reduce using rule 87 (empty -> .)
    KEYWORD_ELSE    reduce using rule 87 (empty -> .)
    KEYWORD_ELSEIF  reduce using rule 87 (empty -> .)
    IDENTIFIER      shift and go to state 20
    KEYWORD_PRINT   shift and go to state 24
    SET_KEYWORD_NATURAL_LANG shift and go to state 26
    ADD_KEYWORD_NATURAL_LANG shift and go to state 27
    SUB_KEYWORD_NATURAL_LANG shift and go to state 28
    MULT_KEYWORD_NATURAL_LANG shift and go to state 29
    DIV_KEYWORD_NATURAL_LANG shift and go to state 30
    KEYWORD_IF      shift and go to state 31
    KEYWORD_RETURN  shift and go to state 32
    KEYWORD_BREAK   shift and go to state 33
    KEYWORD_CONTINUE shift and go to state 34
    KEYWORD_FUNCTION shift and go to state 35
    KEYWORD_FOR     shift and go to state 36
    KEYWORD_WHILE   shift and go to state 37
    KEYWORD_LET     shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

  ! IDENTIFIER      [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_PRINT   [ reduce using rule 87 (empty -> .) ]
  ! SET_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! ADD_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! SUB_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! MULT_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! DIV_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_IF      [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_RETURN  [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_BREAK   [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_CONTINUE [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_FUNCTION [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_FOR     [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_WHILE   [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_LET     [ reduce using rule 87 (empty -> .) ]
  ! INTEGER         [ reduce using rule 87 (empty -> .) ]
  ! FLOAT           [ reduce using rule 87 (empty -> .) ]
  ! STRING          [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_TRUE    [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_FALSE   [ reduce using rule 87 (empty -> .) ]
  ! LPAREN          [ reduce using rule 87 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 87 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 87 (empty -> .) ]

    control_statement              shift and go to state 5
    statement_list                 shift and go to state 47
    statement                      shift and go to state 4
    empty                          shift and go to state 6
    assignment_statement           shift and go to state 7
    expression                     shift and go to state 8
    print_statement                shift and go to state 9
    natural_language               shift and go to state 10
    return_statement               shift and go to state 11
    break_statement                shift and go to state 12
    continue_statement             shift and go to state 13
    function_definition            shift and go to state 14
    if_statement                   shift and go to state 15
    for_statement                  shift and go to state 16
    while_statement                shift and go to state 17
    function_call                  shift and go to state 18
    declaration                    shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 39

state 6

    (5) statement_list -> empty .

    $end            reduce using rule 5 (statement_list -> empty .)
    KEYWORD_END     reduce using rule 5 (statement_list -> empty .)
    IDENTIFIER      reduce using rule 5 (statement_list -> empty .)
    KEYWORD_PRINT   reduce using rule 5 (statement_list -> empty .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 5 (statement_list -> empty .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 5 (statement_list -> empty .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 5 (statement_list -> empty .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 5 (statement_list -> empty .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 5 (statement_list -> empty .)
    KEYWORD_IF      reduce using rule 5 (statement_list -> empty .)
    KEYWORD_RETURN  reduce using rule 5 (statement_list -> empty .)
    KEYWORD_BREAK   reduce using rule 5 (statement_list -> empty .)
    KEYWORD_CONTINUE reduce using rule 5 (statement_list -> empty .)
    KEYWORD_FUNCTION reduce using rule 5 (statement_list -> empty .)
    KEYWORD_FOR     reduce using rule 5 (statement_list -> empty .)
    KEYWORD_WHILE   reduce using rule 5 (statement_list -> empty .)
    KEYWORD_LET     reduce using rule 5 (statement_list -> empty .)
    INTEGER         reduce using rule 5 (statement_list -> empty .)
    FLOAT           reduce using rule 5 (statement_list -> empty .)
    STRING          reduce using rule 5 (statement_list -> empty .)
    KEYWORD_TRUE    reduce using rule 5 (statement_list -> empty .)
    KEYWORD_FALSE   reduce using rule 5 (statement_list -> empty .)
    LPAREN          reduce using rule 5 (statement_list -> empty .)
    PLUS_OP         reduce using rule 5 (statement_list -> empty .)
    MINUS_OP        reduce using rule 5 (statement_list -> empty .)
    KEYWORD_ELSE    reduce using rule 5 (statement_list -> empty .)
    KEYWORD_ELSEIF  reduce using rule 5 (statement_list -> empty .)


state 7

    (6) statement -> assignment_statement .

    IDENTIFIER      reduce using rule 6 (statement -> assignment_statement .)
    KEYWORD_PRINT   reduce using rule 6 (statement -> assignment_statement .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 6 (statement -> assignment_statement .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 6 (statement -> assignment_statement .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 6 (statement -> assignment_statement .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 6 (statement -> assignment_statement .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 6 (statement -> assignment_statement .)
    KEYWORD_IF      reduce using rule 6 (statement -> assignment_statement .)
    KEYWORD_RETURN  reduce using rule 6 (statement -> assignment_statement .)
    KEYWORD_BREAK   reduce using rule 6 (statement -> assignment_statement .)
    KEYWORD_CONTINUE reduce using rule 6 (statement -> assignment_statement .)
    KEYWORD_FUNCTION reduce using rule 6 (statement -> assignment_statement .)
    KEYWORD_FOR     reduce using rule 6 (statement -> assignment_statement .)
    KEYWORD_WHILE   reduce using rule 6 (statement -> assignment_statement .)
    KEYWORD_LET     reduce using rule 6 (statement -> assignment_statement .)
    INTEGER         reduce using rule 6 (statement -> assignment_statement .)
    FLOAT           reduce using rule 6 (statement -> assignment_statement .)
    STRING          reduce using rule 6 (statement -> assignment_statement .)
    KEYWORD_TRUE    reduce using rule 6 (statement -> assignment_statement .)
    KEYWORD_FALSE   reduce using rule 6 (statement -> assignment_statement .)
    LPAREN          reduce using rule 6 (statement -> assignment_statement .)
    PLUS_OP         reduce using rule 6 (statement -> assignment_statement .)
    MINUS_OP        reduce using rule 6 (statement -> assignment_statement .)
    $end            reduce using rule 6 (statement -> assignment_statement .)
    KEYWORD_END     reduce using rule 6 (statement -> assignment_statement .)
    KEYWORD_ELSE    reduce using rule 6 (statement -> assignment_statement .)
    KEYWORD_ELSEIF  reduce using rule 6 (statement -> assignment_statement .)


state 8

    (7) statement -> expression . SEMICOLON
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    SEMICOLON       shift and go to state 48
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50


state 9

    (8) statement -> print_statement .

    IDENTIFIER      reduce using rule 8 (statement -> print_statement .)
    KEYWORD_PRINT   reduce using rule 8 (statement -> print_statement .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 8 (statement -> print_statement .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 8 (statement -> print_statement .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 8 (statement -> print_statement .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 8 (statement -> print_statement .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 8 (statement -> print_statement .)
    KEYWORD_IF      reduce using rule 8 (statement -> print_statement .)
    KEYWORD_RETURN  reduce using rule 8 (statement -> print_statement .)
    KEYWORD_BREAK   reduce using rule 8 (statement -> print_statement .)
    KEYWORD_CONTINUE reduce using rule 8 (statement -> print_statement .)
    KEYWORD_FUNCTION reduce using rule 8 (statement -> print_statement .)
    KEYWORD_FOR     reduce using rule 8 (statement -> print_statement .)
    KEYWORD_WHILE   reduce using rule 8 (statement -> print_statement .)
    KEYWORD_LET     reduce using rule 8 (statement -> print_statement .)
    INTEGER         reduce using rule 8 (statement -> print_statement .)
    FLOAT           reduce using rule 8 (statement -> print_statement .)
    STRING          reduce using rule 8 (statement -> print_statement .)
    KEYWORD_TRUE    reduce using rule 8 (statement -> print_statement .)
    KEYWORD_FALSE   reduce using rule 8 (statement -> print_statement .)
    LPAREN          reduce using rule 8 (statement -> print_statement .)
    PLUS_OP         reduce using rule 8 (statement -> print_statement .)
    MINUS_OP        reduce using rule 8 (statement -> print_statement .)
    $end            reduce using rule 8 (statement -> print_statement .)
    KEYWORD_END     reduce using rule 8 (statement -> print_statement .)
    KEYWORD_ELSE    reduce using rule 8 (statement -> print_statement .)
    KEYWORD_ELSEIF  reduce using rule 8 (statement -> print_statement .)


state 10

    (9) statement -> natural_language .

    IDENTIFIER      reduce using rule 9 (statement -> natural_language .)
    KEYWORD_PRINT   reduce using rule 9 (statement -> natural_language .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 9 (statement -> natural_language .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 9 (statement -> natural_language .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 9 (statement -> natural_language .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 9 (statement -> natural_language .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 9 (statement -> natural_language .)
    KEYWORD_IF      reduce using rule 9 (statement -> natural_language .)
    KEYWORD_RETURN  reduce using rule 9 (statement -> natural_language .)
    KEYWORD_BREAK   reduce using rule 9 (statement -> natural_language .)
    KEYWORD_CONTINUE reduce using rule 9 (statement -> natural_language .)
    KEYWORD_FUNCTION reduce using rule 9 (statement -> natural_language .)
    KEYWORD_FOR     reduce using rule 9 (statement -> natural_language .)
    KEYWORD_WHILE   reduce using rule 9 (statement -> natural_language .)
    KEYWORD_LET     reduce using rule 9 (statement -> natural_language .)
    INTEGER         reduce using rule 9 (statement -> natural_language .)
    FLOAT           reduce using rule 9 (statement -> natural_language .)
    STRING          reduce using rule 9 (statement -> natural_language .)
    KEYWORD_TRUE    reduce using rule 9 (statement -> natural_language .)
    KEYWORD_FALSE   reduce using rule 9 (statement -> natural_language .)
    LPAREN          reduce using rule 9 (statement -> natural_language .)
    PLUS_OP         reduce using rule 9 (statement -> natural_language .)
    MINUS_OP        reduce using rule 9 (statement -> natural_language .)
    $end            reduce using rule 9 (statement -> natural_language .)
    KEYWORD_END     reduce using rule 9 (statement -> natural_language .)
    KEYWORD_ELSE    reduce using rule 9 (statement -> natural_language .)
    KEYWORD_ELSEIF  reduce using rule 9 (statement -> natural_language .)


state 11

    (83) statement -> return_statement .

    IDENTIFIER      reduce using rule 83 (statement -> return_statement .)
    KEYWORD_PRINT   reduce using rule 83 (statement -> return_statement .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 83 (statement -> return_statement .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 83 (statement -> return_statement .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 83 (statement -> return_statement .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 83 (statement -> return_statement .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 83 (statement -> return_statement .)
    KEYWORD_IF      reduce using rule 83 (statement -> return_statement .)
    KEYWORD_RETURN  reduce using rule 83 (statement -> return_statement .)
    KEYWORD_BREAK   reduce using rule 83 (statement -> return_statement .)
    KEYWORD_CONTINUE reduce using rule 83 (statement -> return_statement .)
    KEYWORD_FUNCTION reduce using rule 83 (statement -> return_statement .)
    KEYWORD_FOR     reduce using rule 83 (statement -> return_statement .)
    KEYWORD_WHILE   reduce using rule 83 (statement -> return_statement .)
    KEYWORD_LET     reduce using rule 83 (statement -> return_statement .)
    INTEGER         reduce using rule 83 (statement -> return_statement .)
    FLOAT           reduce using rule 83 (statement -> return_statement .)
    STRING          reduce using rule 83 (statement -> return_statement .)
    KEYWORD_TRUE    reduce using rule 83 (statement -> return_statement .)
    KEYWORD_FALSE   reduce using rule 83 (statement -> return_statement .)
    LPAREN          reduce using rule 83 (statement -> return_statement .)
    PLUS_OP         reduce using rule 83 (statement -> return_statement .)
    MINUS_OP        reduce using rule 83 (statement -> return_statement .)
    $end            reduce using rule 83 (statement -> return_statement .)
    KEYWORD_END     reduce using rule 83 (statement -> return_statement .)
    KEYWORD_ELSE    reduce using rule 83 (statement -> return_statement .)
    KEYWORD_ELSEIF  reduce using rule 83 (statement -> return_statement .)


state 12

    (84) statement -> break_statement .

    IDENTIFIER      reduce using rule 84 (statement -> break_statement .)
    KEYWORD_PRINT   reduce using rule 84 (statement -> break_statement .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 84 (statement -> break_statement .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 84 (statement -> break_statement .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 84 (statement -> break_statement .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 84 (statement -> break_statement .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 84 (statement -> break_statement .)
    KEYWORD_IF      reduce using rule 84 (statement -> break_statement .)
    KEYWORD_RETURN  reduce using rule 84 (statement -> break_statement .)
    KEYWORD_BREAK   reduce using rule 84 (statement -> break_statement .)
    KEYWORD_CONTINUE reduce using rule 84 (statement -> break_statement .)
    KEYWORD_FUNCTION reduce using rule 84 (statement -> break_statement .)
    KEYWORD_FOR     reduce using rule 84 (statement -> break_statement .)
    KEYWORD_WHILE   reduce using rule 84 (statement -> break_statement .)
    KEYWORD_LET     reduce using rule 84 (statement -> break_statement .)
    INTEGER         reduce using rule 84 (statement -> break_statement .)
    FLOAT           reduce using rule 84 (statement -> break_statement .)
    STRING          reduce using rule 84 (statement -> break_statement .)
    KEYWORD_TRUE    reduce using rule 84 (statement -> break_statement .)
    KEYWORD_FALSE   reduce using rule 84 (statement -> break_statement .)
    LPAREN          reduce using rule 84 (statement -> break_statement .)
    PLUS_OP         reduce using rule 84 (statement -> break_statement .)
    MINUS_OP        reduce using rule 84 (statement -> break_statement .)
    $end            reduce using rule 84 (statement -> break_statement .)
    KEYWORD_END     reduce using rule 84 (statement -> break_statement .)
    KEYWORD_ELSE    reduce using rule 84 (statement -> break_statement .)
    KEYWORD_ELSEIF  reduce using rule 84 (statement -> break_statement .)


state 13

    (85) statement -> continue_statement .

    IDENTIFIER      reduce using rule 85 (statement -> continue_statement .)
    KEYWORD_PRINT   reduce using rule 85 (statement -> continue_statement .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 85 (statement -> continue_statement .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 85 (statement -> continue_statement .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 85 (statement -> continue_statement .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 85 (statement -> continue_statement .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 85 (statement -> continue_statement .)
    KEYWORD_IF      reduce using rule 85 (statement -> continue_statement .)
    KEYWORD_RETURN  reduce using rule 85 (statement -> continue_statement .)
    KEYWORD_BREAK   reduce using rule 85 (statement -> continue_statement .)
    KEYWORD_CONTINUE reduce using rule 85 (statement -> continue_statement .)
    KEYWORD_FUNCTION reduce using rule 85 (statement -> continue_statement .)
    KEYWORD_FOR     reduce using rule 85 (statement -> continue_statement .)
    KEYWORD_WHILE   reduce using rule 85 (statement -> continue_statement .)
    KEYWORD_LET     reduce using rule 85 (statement -> continue_statement .)
    INTEGER         reduce using rule 85 (statement -> continue_statement .)
    FLOAT           reduce using rule 85 (statement -> continue_statement .)
    STRING          reduce using rule 85 (statement -> continue_statement .)
    KEYWORD_TRUE    reduce using rule 85 (statement -> continue_statement .)
    KEYWORD_FALSE   reduce using rule 85 (statement -> continue_statement .)
    LPAREN          reduce using rule 85 (statement -> continue_statement .)
    PLUS_OP         reduce using rule 85 (statement -> continue_statement .)
    MINUS_OP        reduce using rule 85 (statement -> continue_statement .)
    $end            reduce using rule 85 (statement -> continue_statement .)
    KEYWORD_END     reduce using rule 85 (statement -> continue_statement .)
    KEYWORD_ELSE    reduce using rule 85 (statement -> continue_statement .)
    KEYWORD_ELSEIF  reduce using rule 85 (statement -> continue_statement .)


state 14

    (86) statement -> function_definition .

    IDENTIFIER      reduce using rule 86 (statement -> function_definition .)
    KEYWORD_PRINT   reduce using rule 86 (statement -> function_definition .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 86 (statement -> function_definition .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 86 (statement -> function_definition .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 86 (statement -> function_definition .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 86 (statement -> function_definition .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 86 (statement -> function_definition .)
    KEYWORD_IF      reduce using rule 86 (statement -> function_definition .)
    KEYWORD_RETURN  reduce using rule 86 (statement -> function_definition .)
    KEYWORD_BREAK   reduce using rule 86 (statement -> function_definition .)
    KEYWORD_CONTINUE reduce using rule 86 (statement -> function_definition .)
    KEYWORD_FUNCTION reduce using rule 86 (statement -> function_definition .)
    KEYWORD_FOR     reduce using rule 86 (statement -> function_definition .)
    KEYWORD_WHILE   reduce using rule 86 (statement -> function_definition .)
    KEYWORD_LET     reduce using rule 86 (statement -> function_definition .)
    INTEGER         reduce using rule 86 (statement -> function_definition .)
    FLOAT           reduce using rule 86 (statement -> function_definition .)
    STRING          reduce using rule 86 (statement -> function_definition .)
    KEYWORD_TRUE    reduce using rule 86 (statement -> function_definition .)
    KEYWORD_FALSE   reduce using rule 86 (statement -> function_definition .)
    LPAREN          reduce using rule 86 (statement -> function_definition .)
    PLUS_OP         reduce using rule 86 (statement -> function_definition .)
    MINUS_OP        reduce using rule 86 (statement -> function_definition .)
    $end            reduce using rule 86 (statement -> function_definition .)
    KEYWORD_END     reduce using rule 86 (statement -> function_definition .)
    KEYWORD_ELSE    reduce using rule 86 (statement -> function_definition .)
    KEYWORD_ELSEIF  reduce using rule 86 (statement -> function_definition .)


state 15

    (29) control_statement -> if_statement .

    IDENTIFIER      reduce using rule 29 (control_statement -> if_statement .)
    KEYWORD_PRINT   reduce using rule 29 (control_statement -> if_statement .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 29 (control_statement -> if_statement .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 29 (control_statement -> if_statement .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 29 (control_statement -> if_statement .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 29 (control_statement -> if_statement .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 29 (control_statement -> if_statement .)
    KEYWORD_IF      reduce using rule 29 (control_statement -> if_statement .)
    KEYWORD_RETURN  reduce using rule 29 (control_statement -> if_statement .)
    KEYWORD_BREAK   reduce using rule 29 (control_statement -> if_statement .)
    KEYWORD_CONTINUE reduce using rule 29 (control_statement -> if_statement .)
    KEYWORD_FUNCTION reduce using rule 29 (control_statement -> if_statement .)
    KEYWORD_FOR     reduce using rule 29 (control_statement -> if_statement .)
    KEYWORD_WHILE   reduce using rule 29 (control_statement -> if_statement .)
    KEYWORD_LET     reduce using rule 29 (control_statement -> if_statement .)
    INTEGER         reduce using rule 29 (control_statement -> if_statement .)
    FLOAT           reduce using rule 29 (control_statement -> if_statement .)
    STRING          reduce using rule 29 (control_statement -> if_statement .)
    KEYWORD_TRUE    reduce using rule 29 (control_statement -> if_statement .)
    KEYWORD_FALSE   reduce using rule 29 (control_statement -> if_statement .)
    LPAREN          reduce using rule 29 (control_statement -> if_statement .)
    PLUS_OP         reduce using rule 29 (control_statement -> if_statement .)
    MINUS_OP        reduce using rule 29 (control_statement -> if_statement .)
    $end            reduce using rule 29 (control_statement -> if_statement .)
    KEYWORD_END     reduce using rule 29 (control_statement -> if_statement .)
    KEYWORD_ELSE    reduce using rule 29 (control_statement -> if_statement .)
    KEYWORD_ELSEIF  reduce using rule 29 (control_statement -> if_statement .)


state 16

    (30) control_statement -> for_statement .

    IDENTIFIER      reduce using rule 30 (control_statement -> for_statement .)
    KEYWORD_PRINT   reduce using rule 30 (control_statement -> for_statement .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 30 (control_statement -> for_statement .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 30 (control_statement -> for_statement .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 30 (control_statement -> for_statement .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 30 (control_statement -> for_statement .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 30 (control_statement -> for_statement .)
    KEYWORD_IF      reduce using rule 30 (control_statement -> for_statement .)
    KEYWORD_RETURN  reduce using rule 30 (control_statement -> for_statement .)
    KEYWORD_BREAK   reduce using rule 30 (control_statement -> for_statement .)
    KEYWORD_CONTINUE reduce using rule 30 (control_statement -> for_statement .)
    KEYWORD_FUNCTION reduce using rule 30 (control_statement -> for_statement .)
    KEYWORD_FOR     reduce using rule 30 (control_statement -> for_statement .)
    KEYWORD_WHILE   reduce using rule 30 (control_statement -> for_statement .)
    KEYWORD_LET     reduce using rule 30 (control_statement -> for_statement .)
    INTEGER         reduce using rule 30 (control_statement -> for_statement .)
    FLOAT           reduce using rule 30 (control_statement -> for_statement .)
    STRING          reduce using rule 30 (control_statement -> for_statement .)
    KEYWORD_TRUE    reduce using rule 30 (control_statement -> for_statement .)
    KEYWORD_FALSE   reduce using rule 30 (control_statement -> for_statement .)
    LPAREN          reduce using rule 30 (control_statement -> for_statement .)
    PLUS_OP         reduce using rule 30 (control_statement -> for_statement .)
    MINUS_OP        reduce using rule 30 (control_statement -> for_statement .)
    $end            reduce using rule 30 (control_statement -> for_statement .)
    KEYWORD_END     reduce using rule 30 (control_statement -> for_statement .)
    KEYWORD_ELSE    reduce using rule 30 (control_statement -> for_statement .)
    KEYWORD_ELSEIF  reduce using rule 30 (control_statement -> for_statement .)


state 17

    (31) control_statement -> while_statement .

    IDENTIFIER      reduce using rule 31 (control_statement -> while_statement .)
    KEYWORD_PRINT   reduce using rule 31 (control_statement -> while_statement .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 31 (control_statement -> while_statement .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 31 (control_statement -> while_statement .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 31 (control_statement -> while_statement .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 31 (control_statement -> while_statement .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 31 (control_statement -> while_statement .)
    KEYWORD_IF      reduce using rule 31 (control_statement -> while_statement .)
    KEYWORD_RETURN  reduce using rule 31 (control_statement -> while_statement .)
    KEYWORD_BREAK   reduce using rule 31 (control_statement -> while_statement .)
    KEYWORD_CONTINUE reduce using rule 31 (control_statement -> while_statement .)
    KEYWORD_FUNCTION reduce using rule 31 (control_statement -> while_statement .)
    KEYWORD_FOR     reduce using rule 31 (control_statement -> while_statement .)
    KEYWORD_WHILE   reduce using rule 31 (control_statement -> while_statement .)
    KEYWORD_LET     reduce using rule 31 (control_statement -> while_statement .)
    INTEGER         reduce using rule 31 (control_statement -> while_statement .)
    FLOAT           reduce using rule 31 (control_statement -> while_statement .)
    STRING          reduce using rule 31 (control_statement -> while_statement .)
    KEYWORD_TRUE    reduce using rule 31 (control_statement -> while_statement .)
    KEYWORD_FALSE   reduce using rule 31 (control_statement -> while_statement .)
    LPAREN          reduce using rule 31 (control_statement -> while_statement .)
    PLUS_OP         reduce using rule 31 (control_statement -> while_statement .)
    MINUS_OP        reduce using rule 31 (control_statement -> while_statement .)
    $end            reduce using rule 31 (control_statement -> while_statement .)
    KEYWORD_END     reduce using rule 31 (control_statement -> while_statement .)
    KEYWORD_ELSE    reduce using rule 31 (control_statement -> while_statement .)
    KEYWORD_ELSEIF  reduce using rule 31 (control_statement -> while_statement .)


state 18

    (32) control_statement -> function_call . SEMICOLON
    (19) term -> function_call .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 51
    TIMES_OP        reduce using rule 19 (term -> function_call .)
    DIVIDE_OP       reduce using rule 19 (term -> function_call .)
    PLUS_OP         reduce using rule 19 (term -> function_call .)
    MINUS_OP        reduce using rule 19 (term -> function_call .)

  ! SEMICOLON       [ reduce using rule 19 (term -> function_call .) ]


state 19

    (10) assignment_statement -> declaration .

    IDENTIFIER      reduce using rule 10 (assignment_statement -> declaration .)
    KEYWORD_PRINT   reduce using rule 10 (assignment_statement -> declaration .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 10 (assignment_statement -> declaration .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 10 (assignment_statement -> declaration .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 10 (assignment_statement -> declaration .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 10 (assignment_statement -> declaration .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 10 (assignment_statement -> declaration .)
    KEYWORD_IF      reduce using rule 10 (assignment_statement -> declaration .)
    KEYWORD_RETURN  reduce using rule 10 (assignment_statement -> declaration .)
    KEYWORD_BREAK   reduce using rule 10 (assignment_statement -> declaration .)
    KEYWORD_CONTINUE reduce using rule 10 (assignment_statement -> declaration .)
    KEYWORD_FUNCTION reduce using rule 10 (assignment_statement -> declaration .)
    KEYWORD_FOR     reduce using rule 10 (assignment_statement -> declaration .)
    KEYWORD_WHILE   reduce using rule 10 (assignment_statement -> declaration .)
    KEYWORD_LET     reduce using rule 10 (assignment_statement -> declaration .)
    INTEGER         reduce using rule 10 (assignment_statement -> declaration .)
    FLOAT           reduce using rule 10 (assignment_statement -> declaration .)
    STRING          reduce using rule 10 (assignment_statement -> declaration .)
    KEYWORD_TRUE    reduce using rule 10 (assignment_statement -> declaration .)
    KEYWORD_FALSE   reduce using rule 10 (assignment_statement -> declaration .)
    LPAREN          reduce using rule 10 (assignment_statement -> declaration .)
    PLUS_OP         reduce using rule 10 (assignment_statement -> declaration .)
    MINUS_OP        reduce using rule 10 (assignment_statement -> declaration .)
    $end            reduce using rule 10 (assignment_statement -> declaration .)
    KEYWORD_END     reduce using rule 10 (assignment_statement -> declaration .)
    KEYWORD_ELSE    reduce using rule 10 (assignment_statement -> declaration .)
    KEYWORD_ELSEIF  reduce using rule 10 (assignment_statement -> declaration .)


state 20

    (11) assignment_statement -> IDENTIFIER . ASSIGNMENT_OP expression SEMICOLON
    (66) function_call -> IDENTIFIER . LPAREN parameter_list RPAREN
    (23) factor -> IDENTIFIER .

    ASSIGNMENT_OP   shift and go to state 52
    LPAREN          shift and go to state 53
    TIMES_OP        reduce using rule 23 (factor -> IDENTIFIER .)
    DIVIDE_OP       reduce using rule 23 (factor -> IDENTIFIER .)
    SEMICOLON       reduce using rule 23 (factor -> IDENTIFIER .)
    PLUS_OP         reduce using rule 23 (factor -> IDENTIFIER .)
    MINUS_OP        reduce using rule 23 (factor -> IDENTIFIER .)


state 21

    (27) factor -> PLUS_OP . factor
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 55
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    factor                         shift and go to state 54

state 22

    (15) expression -> term .
    (16) term -> term . TIMES_OP factor
    (17) term -> term . DIVIDE_OP factor

    SEMICOLON       reduce using rule 15 (expression -> term .)
    PLUS_OP         reduce using rule 15 (expression -> term .)
    MINUS_OP        reduce using rule 15 (expression -> term .)
    RPAREN          reduce using rule 15 (expression -> term .)
    KEYWORD_TO      reduce using rule 15 (expression -> term .)
    FROM_KEYWORD_NATURAL_LANG reduce using rule 15 (expression -> term .)
    LT_OP           reduce using rule 15 (expression -> term .)
    GT_OP           reduce using rule 15 (expression -> term .)
    LE_OP           reduce using rule 15 (expression -> term .)
    GE_OP           reduce using rule 15 (expression -> term .)
    EQ_OP           reduce using rule 15 (expression -> term .)
    NE_OP           reduce using rule 15 (expression -> term .)
    KEYWORD_AND     reduce using rule 15 (expression -> term .)
    KEYWORD_OR      reduce using rule 15 (expression -> term .)
    KEYWORD_BEGIN   reduce using rule 15 (expression -> term .)
    IDENTIFIER      reduce using rule 15 (expression -> term .)
    KEYWORD_PRINT   reduce using rule 15 (expression -> term .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 15 (expression -> term .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 15 (expression -> term .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 15 (expression -> term .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 15 (expression -> term .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 15 (expression -> term .)
    KEYWORD_IF      reduce using rule 15 (expression -> term .)
    KEYWORD_RETURN  reduce using rule 15 (expression -> term .)
    KEYWORD_BREAK   reduce using rule 15 (expression -> term .)
    KEYWORD_CONTINUE reduce using rule 15 (expression -> term .)
    KEYWORD_FUNCTION reduce using rule 15 (expression -> term .)
    KEYWORD_LET     reduce using rule 15 (expression -> term .)
    INTEGER         reduce using rule 15 (expression -> term .)
    FLOAT           reduce using rule 15 (expression -> term .)
    STRING          reduce using rule 15 (expression -> term .)
    KEYWORD_TRUE    reduce using rule 15 (expression -> term .)
    KEYWORD_FALSE   reduce using rule 15 (expression -> term .)
    LPAREN          reduce using rule 15 (expression -> term .)
    COMMA           reduce using rule 15 (expression -> term .)
    KEYWORD_STEP    reduce using rule 15 (expression -> term .)
    THEN_KEYWORD_NATURAL_LANG reduce using rule 15 (expression -> term .)
    TIMES_OP        shift and go to state 56
    DIVIDE_OP       shift and go to state 57


state 23

    (28) factor -> MINUS_OP . factor
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 55
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    factor                         shift and go to state 58

state 24

    (70) print_statement -> KEYWORD_PRINT . LPAREN print_arguments RPAREN SEMICOLON

    LPAREN          shift and go to state 59


state 25

    (26) factor -> LPAREN . expression RPAREN
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 60
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 26

    (55) natural_language -> SET_KEYWORD_NATURAL_LANG . IDENTIFIER KEYWORD_TO expression SEMICOLON

    IDENTIFIER      shift and go to state 63


state 27

    (56) natural_language -> ADD_KEYWORD_NATURAL_LANG . expression KEYWORD_TO IDENTIFIER SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 64
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 28

    (57) natural_language -> SUB_KEYWORD_NATURAL_LANG . expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 65
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 29

    (58) natural_language -> MULT_KEYWORD_NATURAL_LANG . IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON

    IDENTIFIER      shift and go to state 66


state 30

    (59) natural_language -> DIV_KEYWORD_NATURAL_LANG . IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON

    IDENTIFIER      shift and go to state 67


state 31

    (60) natural_language -> KEYWORD_IF . IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> KEYWORD_IF . IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> KEYWORD_IF . IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> KEYWORD_IF . IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> KEYWORD_IF . IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> KEYWORD_IF . IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (33) if_statement -> KEYWORD_IF . condition block else_part
    (44) condition -> . expression LT_OP expression
    (45) condition -> . expression GT_OP expression
    (46) condition -> . expression LE_OP expression
    (47) condition -> . expression GE_OP expression
    (48) condition -> . expression EQ_OP expression
    (49) condition -> . expression NE_OP expression
    (50) condition -> . condition KEYWORD_AND condition
    (51) condition -> . condition KEYWORD_OR condition
    (52) condition -> . KEYWORD_NOT condition
    (53) condition -> . expression
    (54) condition -> . LPAREN condition RPAREN
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    IDENTIFIER      shift and go to state 68
    KEYWORD_NOT     shift and go to state 71
    LPAREN          shift and go to state 72
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 69
    condition                      shift and go to state 70
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 32

    (79) return_statement -> KEYWORD_RETURN . expression SEMICOLON
    (80) return_statement -> KEYWORD_RETURN . SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    SEMICOLON       shift and go to state 74
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 73
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 33

    (81) break_statement -> KEYWORD_BREAK . SEMICOLON

    SEMICOLON       shift and go to state 75


state 34

    (82) continue_statement -> KEYWORD_CONTINUE . SEMICOLON

    SEMICOLON       shift and go to state 76


state 35

    (75) function_definition -> KEYWORD_FUNCTION . IDENTIFIER LPAREN parameter_declaration_list RPAREN block
    (76) function_definition -> KEYWORD_FUNCTION . IDENTIFIER LPAREN RPAREN block

    IDENTIFIER      shift and go to state 77


state 36

    (37) for_statement -> KEYWORD_FOR . IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block
    (38) for_statement -> KEYWORD_FOR . IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block
    (39) for_statement -> KEYWORD_FOR . declaration KEYWORD_TO expression KEYWORD_STEP expression block
    (40) for_statement -> KEYWORD_FOR . declaration KEYWORD_TO expression block
    (12) declaration -> . KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON

    IDENTIFIER      shift and go to state 78
    KEYWORD_LET     shift and go to state 38

    declaration                    shift and go to state 79

state 37

    (41) while_statement -> KEYWORD_WHILE . condition block
    (44) condition -> . expression LT_OP expression
    (45) condition -> . expression GT_OP expression
    (46) condition -> . expression LE_OP expression
    (47) condition -> . expression GE_OP expression
    (48) condition -> . expression EQ_OP expression
    (49) condition -> . expression NE_OP expression
    (50) condition -> . condition KEYWORD_AND condition
    (51) condition -> . condition KEYWORD_OR condition
    (52) condition -> . KEYWORD_NOT condition
    (53) condition -> . expression
    (54) condition -> . LPAREN condition RPAREN
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    KEYWORD_NOT     shift and go to state 71
    LPAREN          shift and go to state 72
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    condition                      shift and go to state 80
    expression                     shift and go to state 69
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 38

    (12) declaration -> KEYWORD_LET . IDENTIFIER ASSIGNMENT_OP expression SEMICOLON

    IDENTIFIER      shift and go to state 81


state 39

    (18) term -> factor .

    TIMES_OP        reduce using rule 18 (term -> factor .)
    DIVIDE_OP       reduce using rule 18 (term -> factor .)
    SEMICOLON       reduce using rule 18 (term -> factor .)
    PLUS_OP         reduce using rule 18 (term -> factor .)
    MINUS_OP        reduce using rule 18 (term -> factor .)
    RPAREN          reduce using rule 18 (term -> factor .)
    KEYWORD_TO      reduce using rule 18 (term -> factor .)
    FROM_KEYWORD_NATURAL_LANG reduce using rule 18 (term -> factor .)
    LT_OP           reduce using rule 18 (term -> factor .)
    GT_OP           reduce using rule 18 (term -> factor .)
    LE_OP           reduce using rule 18 (term -> factor .)
    GE_OP           reduce using rule 18 (term -> factor .)
    EQ_OP           reduce using rule 18 (term -> factor .)
    NE_OP           reduce using rule 18 (term -> factor .)
    KEYWORD_AND     reduce using rule 18 (term -> factor .)
    KEYWORD_OR      reduce using rule 18 (term -> factor .)
    KEYWORD_BEGIN   reduce using rule 18 (term -> factor .)
    IDENTIFIER      reduce using rule 18 (term -> factor .)
    KEYWORD_PRINT   reduce using rule 18 (term -> factor .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 18 (term -> factor .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 18 (term -> factor .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 18 (term -> factor .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 18 (term -> factor .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 18 (term -> factor .)
    KEYWORD_IF      reduce using rule 18 (term -> factor .)
    KEYWORD_RETURN  reduce using rule 18 (term -> factor .)
    KEYWORD_BREAK   reduce using rule 18 (term -> factor .)
    KEYWORD_CONTINUE reduce using rule 18 (term -> factor .)
    KEYWORD_FUNCTION reduce using rule 18 (term -> factor .)
    KEYWORD_LET     reduce using rule 18 (term -> factor .)
    INTEGER         reduce using rule 18 (term -> factor .)
    FLOAT           reduce using rule 18 (term -> factor .)
    STRING          reduce using rule 18 (term -> factor .)
    KEYWORD_TRUE    reduce using rule 18 (term -> factor .)
    KEYWORD_FALSE   reduce using rule 18 (term -> factor .)
    LPAREN          reduce using rule 18 (term -> factor .)
    COMMA           reduce using rule 18 (term -> factor .)
    THEN_KEYWORD_NATURAL_LANG reduce using rule 18 (term -> factor .)
    KEYWORD_STEP    reduce using rule 18 (term -> factor .)


state 40

    (20) factor -> INTEGER .

    TIMES_OP        reduce using rule 20 (factor -> INTEGER .)
    DIVIDE_OP       reduce using rule 20 (factor -> INTEGER .)
    SEMICOLON       reduce using rule 20 (factor -> INTEGER .)
    PLUS_OP         reduce using rule 20 (factor -> INTEGER .)
    MINUS_OP        reduce using rule 20 (factor -> INTEGER .)
    RPAREN          reduce using rule 20 (factor -> INTEGER .)
    KEYWORD_TO      reduce using rule 20 (factor -> INTEGER .)
    FROM_KEYWORD_NATURAL_LANG reduce using rule 20 (factor -> INTEGER .)
    LT_OP           reduce using rule 20 (factor -> INTEGER .)
    GT_OP           reduce using rule 20 (factor -> INTEGER .)
    LE_OP           reduce using rule 20 (factor -> INTEGER .)
    GE_OP           reduce using rule 20 (factor -> INTEGER .)
    EQ_OP           reduce using rule 20 (factor -> INTEGER .)
    NE_OP           reduce using rule 20 (factor -> INTEGER .)
    KEYWORD_AND     reduce using rule 20 (factor -> INTEGER .)
    KEYWORD_OR      reduce using rule 20 (factor -> INTEGER .)
    KEYWORD_BEGIN   reduce using rule 20 (factor -> INTEGER .)
    IDENTIFIER      reduce using rule 20 (factor -> INTEGER .)
    KEYWORD_PRINT   reduce using rule 20 (factor -> INTEGER .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 20 (factor -> INTEGER .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 20 (factor -> INTEGER .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 20 (factor -> INTEGER .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 20 (factor -> INTEGER .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 20 (factor -> INTEGER .)
    KEYWORD_IF      reduce using rule 20 (factor -> INTEGER .)
    KEYWORD_RETURN  reduce using rule 20 (factor -> INTEGER .)
    KEYWORD_BREAK   reduce using rule 20 (factor -> INTEGER .)
    KEYWORD_CONTINUE reduce using rule 20 (factor -> INTEGER .)
    KEYWORD_FUNCTION reduce using rule 20 (factor -> INTEGER .)
    KEYWORD_LET     reduce using rule 20 (factor -> INTEGER .)
    INTEGER         reduce using rule 20 (factor -> INTEGER .)
    FLOAT           reduce using rule 20 (factor -> INTEGER .)
    STRING          reduce using rule 20 (factor -> INTEGER .)
    KEYWORD_TRUE    reduce using rule 20 (factor -> INTEGER .)
    KEYWORD_FALSE   reduce using rule 20 (factor -> INTEGER .)
    LPAREN          reduce using rule 20 (factor -> INTEGER .)
    COMMA           reduce using rule 20 (factor -> INTEGER .)
    THEN_KEYWORD_NATURAL_LANG reduce using rule 20 (factor -> INTEGER .)
    KEYWORD_STEP    reduce using rule 20 (factor -> INTEGER .)


state 41

    (21) factor -> FLOAT .

    TIMES_OP        reduce using rule 21 (factor -> FLOAT .)
    DIVIDE_OP       reduce using rule 21 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 21 (factor -> FLOAT .)
    PLUS_OP         reduce using rule 21 (factor -> FLOAT .)
    MINUS_OP        reduce using rule 21 (factor -> FLOAT .)
    RPAREN          reduce using rule 21 (factor -> FLOAT .)
    KEYWORD_TO      reduce using rule 21 (factor -> FLOAT .)
    FROM_KEYWORD_NATURAL_LANG reduce using rule 21 (factor -> FLOAT .)
    LT_OP           reduce using rule 21 (factor -> FLOAT .)
    GT_OP           reduce using rule 21 (factor -> FLOAT .)
    LE_OP           reduce using rule 21 (factor -> FLOAT .)
    GE_OP           reduce using rule 21 (factor -> FLOAT .)
    EQ_OP           reduce using rule 21 (factor -> FLOAT .)
    NE_OP           reduce using rule 21 (factor -> FLOAT .)
    KEYWORD_AND     reduce using rule 21 (factor -> FLOAT .)
    KEYWORD_OR      reduce using rule 21 (factor -> FLOAT .)
    KEYWORD_BEGIN   reduce using rule 21 (factor -> FLOAT .)
    IDENTIFIER      reduce using rule 21 (factor -> FLOAT .)
    KEYWORD_PRINT   reduce using rule 21 (factor -> FLOAT .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 21 (factor -> FLOAT .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 21 (factor -> FLOAT .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 21 (factor -> FLOAT .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 21 (factor -> FLOAT .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 21 (factor -> FLOAT .)
    KEYWORD_IF      reduce using rule 21 (factor -> FLOAT .)
    KEYWORD_RETURN  reduce using rule 21 (factor -> FLOAT .)
    KEYWORD_BREAK   reduce using rule 21 (factor -> FLOAT .)
    KEYWORD_CONTINUE reduce using rule 21 (factor -> FLOAT .)
    KEYWORD_FUNCTION reduce using rule 21 (factor -> FLOAT .)
    KEYWORD_LET     reduce using rule 21 (factor -> FLOAT .)
    INTEGER         reduce using rule 21 (factor -> FLOAT .)
    FLOAT           reduce using rule 21 (factor -> FLOAT .)
    STRING          reduce using rule 21 (factor -> FLOAT .)
    KEYWORD_TRUE    reduce using rule 21 (factor -> FLOAT .)
    KEYWORD_FALSE   reduce using rule 21 (factor -> FLOAT .)
    LPAREN          reduce using rule 21 (factor -> FLOAT .)
    COMMA           reduce using rule 21 (factor -> FLOAT .)
    THEN_KEYWORD_NATURAL_LANG reduce using rule 21 (factor -> FLOAT .)
    KEYWORD_STEP    reduce using rule 21 (factor -> FLOAT .)


state 42

    (22) factor -> STRING .

    TIMES_OP        reduce using rule 22 (factor -> STRING .)
    DIVIDE_OP       reduce using rule 22 (factor -> STRING .)
    SEMICOLON       reduce using rule 22 (factor -> STRING .)
    PLUS_OP         reduce using rule 22 (factor -> STRING .)
    MINUS_OP        reduce using rule 22 (factor -> STRING .)
    RPAREN          reduce using rule 22 (factor -> STRING .)
    KEYWORD_TO      reduce using rule 22 (factor -> STRING .)
    FROM_KEYWORD_NATURAL_LANG reduce using rule 22 (factor -> STRING .)
    LT_OP           reduce using rule 22 (factor -> STRING .)
    GT_OP           reduce using rule 22 (factor -> STRING .)
    LE_OP           reduce using rule 22 (factor -> STRING .)
    GE_OP           reduce using rule 22 (factor -> STRING .)
    EQ_OP           reduce using rule 22 (factor -> STRING .)
    NE_OP           reduce using rule 22 (factor -> STRING .)
    KEYWORD_AND     reduce using rule 22 (factor -> STRING .)
    KEYWORD_OR      reduce using rule 22 (factor -> STRING .)
    KEYWORD_BEGIN   reduce using rule 22 (factor -> STRING .)
    IDENTIFIER      reduce using rule 22 (factor -> STRING .)
    KEYWORD_PRINT   reduce using rule 22 (factor -> STRING .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 22 (factor -> STRING .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 22 (factor -> STRING .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 22 (factor -> STRING .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 22 (factor -> STRING .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 22 (factor -> STRING .)
    KEYWORD_IF      reduce using rule 22 (factor -> STRING .)
    KEYWORD_RETURN  reduce using rule 22 (factor -> STRING .)
    KEYWORD_BREAK   reduce using rule 22 (factor -> STRING .)
    KEYWORD_CONTINUE reduce using rule 22 (factor -> STRING .)
    KEYWORD_FUNCTION reduce using rule 22 (factor -> STRING .)
    KEYWORD_LET     reduce using rule 22 (factor -> STRING .)
    INTEGER         reduce using rule 22 (factor -> STRING .)
    FLOAT           reduce using rule 22 (factor -> STRING .)
    STRING          reduce using rule 22 (factor -> STRING .)
    KEYWORD_TRUE    reduce using rule 22 (factor -> STRING .)
    KEYWORD_FALSE   reduce using rule 22 (factor -> STRING .)
    LPAREN          reduce using rule 22 (factor -> STRING .)
    COMMA           reduce using rule 22 (factor -> STRING .)
    THEN_KEYWORD_NATURAL_LANG reduce using rule 22 (factor -> STRING .)
    KEYWORD_STEP    reduce using rule 22 (factor -> STRING .)


state 43

    (24) factor -> KEYWORD_TRUE .

    TIMES_OP        reduce using rule 24 (factor -> KEYWORD_TRUE .)
    DIVIDE_OP       reduce using rule 24 (factor -> KEYWORD_TRUE .)
    SEMICOLON       reduce using rule 24 (factor -> KEYWORD_TRUE .)
    PLUS_OP         reduce using rule 24 (factor -> KEYWORD_TRUE .)
    MINUS_OP        reduce using rule 24 (factor -> KEYWORD_TRUE .)
    RPAREN          reduce using rule 24 (factor -> KEYWORD_TRUE .)
    KEYWORD_TO      reduce using rule 24 (factor -> KEYWORD_TRUE .)
    FROM_KEYWORD_NATURAL_LANG reduce using rule 24 (factor -> KEYWORD_TRUE .)
    LT_OP           reduce using rule 24 (factor -> KEYWORD_TRUE .)
    GT_OP           reduce using rule 24 (factor -> KEYWORD_TRUE .)
    LE_OP           reduce using rule 24 (factor -> KEYWORD_TRUE .)
    GE_OP           reduce using rule 24 (factor -> KEYWORD_TRUE .)
    EQ_OP           reduce using rule 24 (factor -> KEYWORD_TRUE .)
    NE_OP           reduce using rule 24 (factor -> KEYWORD_TRUE .)
    KEYWORD_AND     reduce using rule 24 (factor -> KEYWORD_TRUE .)
    KEYWORD_OR      reduce using rule 24 (factor -> KEYWORD_TRUE .)
    KEYWORD_BEGIN   reduce using rule 24 (factor -> KEYWORD_TRUE .)
    IDENTIFIER      reduce using rule 24 (factor -> KEYWORD_TRUE .)
    KEYWORD_PRINT   reduce using rule 24 (factor -> KEYWORD_TRUE .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 24 (factor -> KEYWORD_TRUE .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 24 (factor -> KEYWORD_TRUE .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 24 (factor -> KEYWORD_TRUE .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 24 (factor -> KEYWORD_TRUE .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 24 (factor -> KEYWORD_TRUE .)
    KEYWORD_IF      reduce using rule 24 (factor -> KEYWORD_TRUE .)
    KEYWORD_RETURN  reduce using rule 24 (factor -> KEYWORD_TRUE .)
    KEYWORD_BREAK   reduce using rule 24 (factor -> KEYWORD_TRUE .)
    KEYWORD_CONTINUE reduce using rule 24 (factor -> KEYWORD_TRUE .)
    KEYWORD_FUNCTION reduce using rule 24 (factor -> KEYWORD_TRUE .)
    KEYWORD_LET     reduce using rule 24 (factor -> KEYWORD_TRUE .)
    INTEGER         reduce using rule 24 (factor -> KEYWORD_TRUE .)
    FLOAT           reduce using rule 24 (factor -> KEYWORD_TRUE .)
    STRING          reduce using rule 24 (factor -> KEYWORD_TRUE .)
    KEYWORD_TRUE    reduce using rule 24 (factor -> KEYWORD_TRUE .)
    KEYWORD_FALSE   reduce using rule 24 (factor -> KEYWORD_TRUE .)
    LPAREN          reduce using rule 24 (factor -> KEYWORD_TRUE .)
    COMMA           reduce using rule 24 (factor -> KEYWORD_TRUE .)
    THEN_KEYWORD_NATURAL_LANG reduce using rule 24 (factor -> KEYWORD_TRUE .)
    KEYWORD_STEP    reduce using rule 24 (factor -> KEYWORD_TRUE .)


state 44

    (25) factor -> KEYWORD_FALSE .

    TIMES_OP        reduce using rule 25 (factor -> KEYWORD_FALSE .)
    DIVIDE_OP       reduce using rule 25 (factor -> KEYWORD_FALSE .)
    SEMICOLON       reduce using rule 25 (factor -> KEYWORD_FALSE .)
    PLUS_OP         reduce using rule 25 (factor -> KEYWORD_FALSE .)
    MINUS_OP        reduce using rule 25 (factor -> KEYWORD_FALSE .)
    RPAREN          reduce using rule 25 (factor -> KEYWORD_FALSE .)
    KEYWORD_TO      reduce using rule 25 (factor -> KEYWORD_FALSE .)
    FROM_KEYWORD_NATURAL_LANG reduce using rule 25 (factor -> KEYWORD_FALSE .)
    LT_OP           reduce using rule 25 (factor -> KEYWORD_FALSE .)
    GT_OP           reduce using rule 25 (factor -> KEYWORD_FALSE .)
    LE_OP           reduce using rule 25 (factor -> KEYWORD_FALSE .)
    GE_OP           reduce using rule 25 (factor -> KEYWORD_FALSE .)
    EQ_OP           reduce using rule 25 (factor -> KEYWORD_FALSE .)
    NE_OP           reduce using rule 25 (factor -> KEYWORD_FALSE .)
    KEYWORD_AND     reduce using rule 25 (factor -> KEYWORD_FALSE .)
    KEYWORD_OR      reduce using rule 25 (factor -> KEYWORD_FALSE .)
    KEYWORD_BEGIN   reduce using rule 25 (factor -> KEYWORD_FALSE .)
    IDENTIFIER      reduce using rule 25 (factor -> KEYWORD_FALSE .)
    KEYWORD_PRINT   reduce using rule 25 (factor -> KEYWORD_FALSE .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 25 (factor -> KEYWORD_FALSE .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 25 (factor -> KEYWORD_FALSE .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 25 (factor -> KEYWORD_FALSE .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 25 (factor -> KEYWORD_FALSE .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 25 (factor -> KEYWORD_FALSE .)
    KEYWORD_IF      reduce using rule 25 (factor -> KEYWORD_FALSE .)
    KEYWORD_RETURN  reduce using rule 25 (factor -> KEYWORD_FALSE .)
    KEYWORD_BREAK   reduce using rule 25 (factor -> KEYWORD_FALSE .)
    KEYWORD_CONTINUE reduce using rule 25 (factor -> KEYWORD_FALSE .)
    KEYWORD_FUNCTION reduce using rule 25 (factor -> KEYWORD_FALSE .)
    KEYWORD_LET     reduce using rule 25 (factor -> KEYWORD_FALSE .)
    INTEGER         reduce using rule 25 (factor -> KEYWORD_FALSE .)
    FLOAT           reduce using rule 25 (factor -> KEYWORD_FALSE .)
    STRING          reduce using rule 25 (factor -> KEYWORD_FALSE .)
    KEYWORD_TRUE    reduce using rule 25 (factor -> KEYWORD_FALSE .)
    KEYWORD_FALSE   reduce using rule 25 (factor -> KEYWORD_FALSE .)
    LPAREN          reduce using rule 25 (factor -> KEYWORD_FALSE .)
    COMMA           reduce using rule 25 (factor -> KEYWORD_FALSE .)
    THEN_KEYWORD_NATURAL_LANG reduce using rule 25 (factor -> KEYWORD_FALSE .)
    KEYWORD_STEP    reduce using rule 25 (factor -> KEYWORD_FALSE .)


state 45

    (1) program -> KEYWORD_BEGIN statement_list . KEYWORD_END

    KEYWORD_END     shift and go to state 82


state 46

    (3) statement_list -> statement statement_list .

    $end            reduce using rule 3 (statement_list -> statement statement_list .)
    KEYWORD_END     reduce using rule 3 (statement_list -> statement statement_list .)
    IDENTIFIER      reduce using rule 3 (statement_list -> statement statement_list .)
    KEYWORD_PRINT   reduce using rule 3 (statement_list -> statement statement_list .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 3 (statement_list -> statement statement_list .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 3 (statement_list -> statement statement_list .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 3 (statement_list -> statement statement_list .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 3 (statement_list -> statement statement_list .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 3 (statement_list -> statement statement_list .)
    KEYWORD_IF      reduce using rule 3 (statement_list -> statement statement_list .)
    KEYWORD_RETURN  reduce using rule 3 (statement_list -> statement statement_list .)
    KEYWORD_BREAK   reduce using rule 3 (statement_list -> statement statement_list .)
    KEYWORD_CONTINUE reduce using rule 3 (statement_list -> statement statement_list .)
    KEYWORD_FUNCTION reduce using rule 3 (statement_list -> statement statement_list .)
    KEYWORD_FOR     reduce using rule 3 (statement_list -> statement statement_list .)
    KEYWORD_WHILE   reduce using rule 3 (statement_list -> statement statement_list .)
    KEYWORD_LET     reduce using rule 3 (statement_list -> statement statement_list .)
    INTEGER         reduce using rule 3 (statement_list -> statement statement_list .)
    FLOAT           reduce using rule 3 (statement_list -> statement statement_list .)
    STRING          reduce using rule 3 (statement_list -> statement statement_list .)
    KEYWORD_TRUE    reduce using rule 3 (statement_list -> statement statement_list .)
    KEYWORD_FALSE   reduce using rule 3 (statement_list -> statement statement_list .)
    LPAREN          reduce using rule 3 (statement_list -> statement statement_list .)
    PLUS_OP         reduce using rule 3 (statement_list -> statement statement_list .)
    MINUS_OP        reduce using rule 3 (statement_list -> statement statement_list .)
    KEYWORD_ELSE    reduce using rule 3 (statement_list -> statement statement_list .)
    KEYWORD_ELSEIF  reduce using rule 3 (statement_list -> statement statement_list .)


state 47

    (4) statement_list -> control_statement statement_list .

    $end            reduce using rule 4 (statement_list -> control_statement statement_list .)
    KEYWORD_END     reduce using rule 4 (statement_list -> control_statement statement_list .)
    IDENTIFIER      reduce using rule 4 (statement_list -> control_statement statement_list .)
    KEYWORD_PRINT   reduce using rule 4 (statement_list -> control_statement statement_list .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 4 (statement_list -> control_statement statement_list .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 4 (statement_list -> control_statement statement_list .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 4 (statement_list -> control_statement statement_list .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 4 (statement_list -> control_statement statement_list .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 4 (statement_list -> control_statement statement_list .)
    KEYWORD_IF      reduce using rule 4 (statement_list -> control_statement statement_list .)
    KEYWORD_RETURN  reduce using rule 4 (statement_list -> control_statement statement_list .)
    KEYWORD_BREAK   reduce using rule 4 (statement_list -> control_statement statement_list .)
    KEYWORD_CONTINUE reduce using rule 4 (statement_list -> control_statement statement_list .)
    KEYWORD_FUNCTION reduce using rule 4 (statement_list -> control_statement statement_list .)
    KEYWORD_FOR     reduce using rule 4 (statement_list -> control_statement statement_list .)
    KEYWORD_WHILE   reduce using rule 4 (statement_list -> control_statement statement_list .)
    KEYWORD_LET     reduce using rule 4 (statement_list -> control_statement statement_list .)
    INTEGER         reduce using rule 4 (statement_list -> control_statement statement_list .)
    FLOAT           reduce using rule 4 (statement_list -> control_statement statement_list .)
    STRING          reduce using rule 4 (statement_list -> control_statement statement_list .)
    KEYWORD_TRUE    reduce using rule 4 (statement_list -> control_statement statement_list .)
    KEYWORD_FALSE   reduce using rule 4 (statement_list -> control_statement statement_list .)
    LPAREN          reduce using rule 4 (statement_list -> control_statement statement_list .)
    PLUS_OP         reduce using rule 4 (statement_list -> control_statement statement_list .)
    MINUS_OP        reduce using rule 4 (statement_list -> control_statement statement_list .)
    KEYWORD_ELSE    reduce using rule 4 (statement_list -> control_statement statement_list .)
    KEYWORD_ELSEIF  reduce using rule 4 (statement_list -> control_statement statement_list .)


state 48

    (7) statement -> expression SEMICOLON .

    IDENTIFIER      reduce using rule 7 (statement -> expression SEMICOLON .)
    KEYWORD_PRINT   reduce using rule 7 (statement -> expression SEMICOLON .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 7 (statement -> expression SEMICOLON .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 7 (statement -> expression SEMICOLON .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 7 (statement -> expression SEMICOLON .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 7 (statement -> expression SEMICOLON .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 7 (statement -> expression SEMICOLON .)
    KEYWORD_IF      reduce using rule 7 (statement -> expression SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 7 (statement -> expression SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 7 (statement -> expression SEMICOLON .)
    KEYWORD_CONTINUE reduce using rule 7 (statement -> expression SEMICOLON .)
    KEYWORD_FUNCTION reduce using rule 7 (statement -> expression SEMICOLON .)
    KEYWORD_FOR     reduce using rule 7 (statement -> expression SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 7 (statement -> expression SEMICOLON .)
    KEYWORD_LET     reduce using rule 7 (statement -> expression SEMICOLON .)
    INTEGER         reduce using rule 7 (statement -> expression SEMICOLON .)
    FLOAT           reduce using rule 7 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 7 (statement -> expression SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 7 (statement -> expression SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 7 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 7 (statement -> expression SEMICOLON .)
    PLUS_OP         reduce using rule 7 (statement -> expression SEMICOLON .)
    MINUS_OP        reduce using rule 7 (statement -> expression SEMICOLON .)
    $end            reduce using rule 7 (statement -> expression SEMICOLON .)
    KEYWORD_END     reduce using rule 7 (statement -> expression SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 7 (statement -> expression SEMICOLON .)
    KEYWORD_ELSEIF  reduce using rule 7 (statement -> expression SEMICOLON .)


state 49

    (13) expression -> expression PLUS_OP . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    term                           shift and go to state 83
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 50

    (14) expression -> expression MINUS_OP . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    term                           shift and go to state 84
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 51

    (32) control_statement -> function_call SEMICOLON .

    IDENTIFIER      reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    KEYWORD_PRINT   reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    KEYWORD_IF      reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    KEYWORD_CONTINUE reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    KEYWORD_FUNCTION reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    KEYWORD_FOR     reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    KEYWORD_LET     reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    INTEGER         reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    FLOAT           reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    STRING          reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    LPAREN          reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    PLUS_OP         reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    MINUS_OP        reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    $end            reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    KEYWORD_END     reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 32 (control_statement -> function_call SEMICOLON .)
    KEYWORD_ELSEIF  reduce using rule 32 (control_statement -> function_call SEMICOLON .)


state 52

    (11) assignment_statement -> IDENTIFIER ASSIGNMENT_OP . expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 85
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 53

    (66) function_call -> IDENTIFIER LPAREN . parameter_list RPAREN
    (67) parameter_list -> . expression COMMA parameter_list
    (68) parameter_list -> . expression
    (69) parameter_list -> . empty
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (87) empty -> .
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    RPAREN          reduce using rule 87 (empty -> .)
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    parameter_list                 shift and go to state 86
    expression                     shift and go to state 87
    empty                          shift and go to state 88
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 54

    (27) factor -> PLUS_OP factor .

    TIMES_OP        reduce using rule 27 (factor -> PLUS_OP factor .)
    DIVIDE_OP       reduce using rule 27 (factor -> PLUS_OP factor .)
    SEMICOLON       reduce using rule 27 (factor -> PLUS_OP factor .)
    PLUS_OP         reduce using rule 27 (factor -> PLUS_OP factor .)
    MINUS_OP        reduce using rule 27 (factor -> PLUS_OP factor .)
    RPAREN          reduce using rule 27 (factor -> PLUS_OP factor .)
    KEYWORD_TO      reduce using rule 27 (factor -> PLUS_OP factor .)
    FROM_KEYWORD_NATURAL_LANG reduce using rule 27 (factor -> PLUS_OP factor .)
    LT_OP           reduce using rule 27 (factor -> PLUS_OP factor .)
    GT_OP           reduce using rule 27 (factor -> PLUS_OP factor .)
    LE_OP           reduce using rule 27 (factor -> PLUS_OP factor .)
    GE_OP           reduce using rule 27 (factor -> PLUS_OP factor .)
    EQ_OP           reduce using rule 27 (factor -> PLUS_OP factor .)
    NE_OP           reduce using rule 27 (factor -> PLUS_OP factor .)
    KEYWORD_AND     reduce using rule 27 (factor -> PLUS_OP factor .)
    KEYWORD_OR      reduce using rule 27 (factor -> PLUS_OP factor .)
    KEYWORD_BEGIN   reduce using rule 27 (factor -> PLUS_OP factor .)
    IDENTIFIER      reduce using rule 27 (factor -> PLUS_OP factor .)
    KEYWORD_PRINT   reduce using rule 27 (factor -> PLUS_OP factor .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 27 (factor -> PLUS_OP factor .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 27 (factor -> PLUS_OP factor .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 27 (factor -> PLUS_OP factor .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 27 (factor -> PLUS_OP factor .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 27 (factor -> PLUS_OP factor .)
    KEYWORD_IF      reduce using rule 27 (factor -> PLUS_OP factor .)
    KEYWORD_RETURN  reduce using rule 27 (factor -> PLUS_OP factor .)
    KEYWORD_BREAK   reduce using rule 27 (factor -> PLUS_OP factor .)
    KEYWORD_CONTINUE reduce using rule 27 (factor -> PLUS_OP factor .)
    KEYWORD_FUNCTION reduce using rule 27 (factor -> PLUS_OP factor .)
    KEYWORD_LET     reduce using rule 27 (factor -> PLUS_OP factor .)
    INTEGER         reduce using rule 27 (factor -> PLUS_OP factor .)
    FLOAT           reduce using rule 27 (factor -> PLUS_OP factor .)
    STRING          reduce using rule 27 (factor -> PLUS_OP factor .)
    KEYWORD_TRUE    reduce using rule 27 (factor -> PLUS_OP factor .)
    KEYWORD_FALSE   reduce using rule 27 (factor -> PLUS_OP factor .)
    LPAREN          reduce using rule 27 (factor -> PLUS_OP factor .)
    COMMA           reduce using rule 27 (factor -> PLUS_OP factor .)
    THEN_KEYWORD_NATURAL_LANG reduce using rule 27 (factor -> PLUS_OP factor .)
    KEYWORD_STEP    reduce using rule 27 (factor -> PLUS_OP factor .)


state 55

    (23) factor -> IDENTIFIER .

    TIMES_OP        reduce using rule 23 (factor -> IDENTIFIER .)
    DIVIDE_OP       reduce using rule 23 (factor -> IDENTIFIER .)
    SEMICOLON       reduce using rule 23 (factor -> IDENTIFIER .)
    PLUS_OP         reduce using rule 23 (factor -> IDENTIFIER .)
    MINUS_OP        reduce using rule 23 (factor -> IDENTIFIER .)
    RPAREN          reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_TO      reduce using rule 23 (factor -> IDENTIFIER .)
    FROM_KEYWORD_NATURAL_LANG reduce using rule 23 (factor -> IDENTIFIER .)
    LT_OP           reduce using rule 23 (factor -> IDENTIFIER .)
    GT_OP           reduce using rule 23 (factor -> IDENTIFIER .)
    LE_OP           reduce using rule 23 (factor -> IDENTIFIER .)
    GE_OP           reduce using rule 23 (factor -> IDENTIFIER .)
    EQ_OP           reduce using rule 23 (factor -> IDENTIFIER .)
    NE_OP           reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_AND     reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_OR      reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_BEGIN   reduce using rule 23 (factor -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_PRINT   reduce using rule 23 (factor -> IDENTIFIER .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 23 (factor -> IDENTIFIER .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 23 (factor -> IDENTIFIER .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 23 (factor -> IDENTIFIER .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 23 (factor -> IDENTIFIER .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_IF      reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_RETURN  reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_BREAK   reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_CONTINUE reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_FUNCTION reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_LET     reduce using rule 23 (factor -> IDENTIFIER .)
    INTEGER         reduce using rule 23 (factor -> IDENTIFIER .)
    FLOAT           reduce using rule 23 (factor -> IDENTIFIER .)
    STRING          reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_TRUE    reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_FALSE   reduce using rule 23 (factor -> IDENTIFIER .)
    LPAREN          reduce using rule 23 (factor -> IDENTIFIER .)
    COMMA           reduce using rule 23 (factor -> IDENTIFIER .)
    THEN_KEYWORD_NATURAL_LANG reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_STEP    reduce using rule 23 (factor -> IDENTIFIER .)


state 56

    (16) term -> term TIMES_OP . factor
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 55
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    factor                         shift and go to state 89

state 57

    (17) term -> term DIVIDE_OP . factor
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 55
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    factor                         shift and go to state 90

state 58

    (28) factor -> MINUS_OP factor .

    TIMES_OP        reduce using rule 28 (factor -> MINUS_OP factor .)
    DIVIDE_OP       reduce using rule 28 (factor -> MINUS_OP factor .)
    SEMICOLON       reduce using rule 28 (factor -> MINUS_OP factor .)
    PLUS_OP         reduce using rule 28 (factor -> MINUS_OP factor .)
    MINUS_OP        reduce using rule 28 (factor -> MINUS_OP factor .)
    RPAREN          reduce using rule 28 (factor -> MINUS_OP factor .)
    KEYWORD_TO      reduce using rule 28 (factor -> MINUS_OP factor .)
    FROM_KEYWORD_NATURAL_LANG reduce using rule 28 (factor -> MINUS_OP factor .)
    LT_OP           reduce using rule 28 (factor -> MINUS_OP factor .)
    GT_OP           reduce using rule 28 (factor -> MINUS_OP factor .)
    LE_OP           reduce using rule 28 (factor -> MINUS_OP factor .)
    GE_OP           reduce using rule 28 (factor -> MINUS_OP factor .)
    EQ_OP           reduce using rule 28 (factor -> MINUS_OP factor .)
    NE_OP           reduce using rule 28 (factor -> MINUS_OP factor .)
    KEYWORD_AND     reduce using rule 28 (factor -> MINUS_OP factor .)
    KEYWORD_OR      reduce using rule 28 (factor -> MINUS_OP factor .)
    KEYWORD_BEGIN   reduce using rule 28 (factor -> MINUS_OP factor .)
    IDENTIFIER      reduce using rule 28 (factor -> MINUS_OP factor .)
    KEYWORD_PRINT   reduce using rule 28 (factor -> MINUS_OP factor .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 28 (factor -> MINUS_OP factor .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 28 (factor -> MINUS_OP factor .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 28 (factor -> MINUS_OP factor .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 28 (factor -> MINUS_OP factor .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 28 (factor -> MINUS_OP factor .)
    KEYWORD_IF      reduce using rule 28 (factor -> MINUS_OP factor .)
    KEYWORD_RETURN  reduce using rule 28 (factor -> MINUS_OP factor .)
    KEYWORD_BREAK   reduce using rule 28 (factor -> MINUS_OP factor .)
    KEYWORD_CONTINUE reduce using rule 28 (factor -> MINUS_OP factor .)
    KEYWORD_FUNCTION reduce using rule 28 (factor -> MINUS_OP factor .)
    KEYWORD_LET     reduce using rule 28 (factor -> MINUS_OP factor .)
    INTEGER         reduce using rule 28 (factor -> MINUS_OP factor .)
    FLOAT           reduce using rule 28 (factor -> MINUS_OP factor .)
    STRING          reduce using rule 28 (factor -> MINUS_OP factor .)
    KEYWORD_TRUE    reduce using rule 28 (factor -> MINUS_OP factor .)
    KEYWORD_FALSE   reduce using rule 28 (factor -> MINUS_OP factor .)
    LPAREN          reduce using rule 28 (factor -> MINUS_OP factor .)
    COMMA           reduce using rule 28 (factor -> MINUS_OP factor .)
    THEN_KEYWORD_NATURAL_LANG reduce using rule 28 (factor -> MINUS_OP factor .)
    KEYWORD_STEP    reduce using rule 28 (factor -> MINUS_OP factor .)


state 59

    (70) print_statement -> KEYWORD_PRINT LPAREN . print_arguments RPAREN SEMICOLON
    (71) print_arguments -> . printable_item COMMA print_arguments
    (72) print_arguments -> . printable_item
    (73) printable_item -> . STRING
    (74) printable_item -> . expression
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    STRING          shift and go to state 93
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    print_arguments                shift and go to state 91
    printable_item                 shift and go to state 92
    expression                     shift and go to state 94
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 60

    (26) factor -> LPAREN expression . RPAREN
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    RPAREN          shift and go to state 95
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50


state 61

    (19) term -> function_call .

    TIMES_OP        reduce using rule 19 (term -> function_call .)
    DIVIDE_OP       reduce using rule 19 (term -> function_call .)
    RPAREN          reduce using rule 19 (term -> function_call .)
    PLUS_OP         reduce using rule 19 (term -> function_call .)
    MINUS_OP        reduce using rule 19 (term -> function_call .)
    KEYWORD_TO      reduce using rule 19 (term -> function_call .)
    FROM_KEYWORD_NATURAL_LANG reduce using rule 19 (term -> function_call .)
    LT_OP           reduce using rule 19 (term -> function_call .)
    GT_OP           reduce using rule 19 (term -> function_call .)
    LE_OP           reduce using rule 19 (term -> function_call .)
    GE_OP           reduce using rule 19 (term -> function_call .)
    EQ_OP           reduce using rule 19 (term -> function_call .)
    NE_OP           reduce using rule 19 (term -> function_call .)
    KEYWORD_AND     reduce using rule 19 (term -> function_call .)
    KEYWORD_OR      reduce using rule 19 (term -> function_call .)
    KEYWORD_BEGIN   reduce using rule 19 (term -> function_call .)
    IDENTIFIER      reduce using rule 19 (term -> function_call .)
    KEYWORD_PRINT   reduce using rule 19 (term -> function_call .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 19 (term -> function_call .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 19 (term -> function_call .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 19 (term -> function_call .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 19 (term -> function_call .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 19 (term -> function_call .)
    KEYWORD_IF      reduce using rule 19 (term -> function_call .)
    KEYWORD_RETURN  reduce using rule 19 (term -> function_call .)
    KEYWORD_BREAK   reduce using rule 19 (term -> function_call .)
    KEYWORD_CONTINUE reduce using rule 19 (term -> function_call .)
    KEYWORD_FUNCTION reduce using rule 19 (term -> function_call .)
    KEYWORD_LET     reduce using rule 19 (term -> function_call .)
    INTEGER         reduce using rule 19 (term -> function_call .)
    FLOAT           reduce using rule 19 (term -> function_call .)
    STRING          reduce using rule 19 (term -> function_call .)
    KEYWORD_TRUE    reduce using rule 19 (term -> function_call .)
    KEYWORD_FALSE   reduce using rule 19 (term -> function_call .)
    LPAREN          reduce using rule 19 (term -> function_call .)
    SEMICOLON       reduce using rule 19 (term -> function_call .)
    COMMA           reduce using rule 19 (term -> function_call .)
    THEN_KEYWORD_NATURAL_LANG reduce using rule 19 (term -> function_call .)
    KEYWORD_STEP    reduce using rule 19 (term -> function_call .)


state 62

    (23) factor -> IDENTIFIER .
    (66) function_call -> IDENTIFIER . LPAREN parameter_list RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    TIMES_OP        reduce using rule 23 (factor -> IDENTIFIER .)
    DIVIDE_OP       reduce using rule 23 (factor -> IDENTIFIER .)
    RPAREN          reduce using rule 23 (factor -> IDENTIFIER .)
    PLUS_OP         reduce using rule 23 (factor -> IDENTIFIER .)
    MINUS_OP        reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_TO      reduce using rule 23 (factor -> IDENTIFIER .)
    FROM_KEYWORD_NATURAL_LANG reduce using rule 23 (factor -> IDENTIFIER .)
    SEMICOLON       reduce using rule 23 (factor -> IDENTIFIER .)
    LT_OP           reduce using rule 23 (factor -> IDENTIFIER .)
    GT_OP           reduce using rule 23 (factor -> IDENTIFIER .)
    LE_OP           reduce using rule 23 (factor -> IDENTIFIER .)
    GE_OP           reduce using rule 23 (factor -> IDENTIFIER .)
    EQ_OP           reduce using rule 23 (factor -> IDENTIFIER .)
    NE_OP           reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_AND     reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_OR      reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_BEGIN   reduce using rule 23 (factor -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_PRINT   reduce using rule 23 (factor -> IDENTIFIER .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 23 (factor -> IDENTIFIER .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 23 (factor -> IDENTIFIER .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 23 (factor -> IDENTIFIER .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 23 (factor -> IDENTIFIER .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_IF      reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_RETURN  reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_BREAK   reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_CONTINUE reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_FUNCTION reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_LET     reduce using rule 23 (factor -> IDENTIFIER .)
    INTEGER         reduce using rule 23 (factor -> IDENTIFIER .)
    FLOAT           reduce using rule 23 (factor -> IDENTIFIER .)
    STRING          reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_TRUE    reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_FALSE   reduce using rule 23 (factor -> IDENTIFIER .)
    COMMA           reduce using rule 23 (factor -> IDENTIFIER .)
    THEN_KEYWORD_NATURAL_LANG reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_STEP    reduce using rule 23 (factor -> IDENTIFIER .)
    LPAREN          shift and go to state 53

  ! LPAREN          [ reduce using rule 23 (factor -> IDENTIFIER .) ]


state 63

    (55) natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER . KEYWORD_TO expression SEMICOLON

    KEYWORD_TO      shift and go to state 96


state 64

    (56) natural_language -> ADD_KEYWORD_NATURAL_LANG expression . KEYWORD_TO IDENTIFIER SEMICOLON
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    KEYWORD_TO      shift and go to state 97
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50


state 65

    (57) natural_language -> SUB_KEYWORD_NATURAL_LANG expression . FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    FROM_KEYWORD_NATURAL_LANG shift and go to state 98
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50


state 66

    (58) natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER . BY_KEYWORD_NATURAL_LANG expression SEMICOLON

    BY_KEYWORD_NATURAL_LANG shift and go to state 99


state 67

    (59) natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER . BY_KEYWORD_NATURAL_LANG expression SEMICOLON

    BY_KEYWORD_NATURAL_LANG shift and go to state 100


state 68

    (60) natural_language -> KEYWORD_IF IDENTIFIER . IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> KEYWORD_IF IDENTIFIER . IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> KEYWORD_IF IDENTIFIER . IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> KEYWORD_IF IDENTIFIER . IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> KEYWORD_IF IDENTIFIER . IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> KEYWORD_IF IDENTIFIER . IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (23) factor -> IDENTIFIER .
    (66) function_call -> IDENTIFIER . LPAREN parameter_list RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    IS_KEYWORD_NATURAL_LANG shift and go to state 101
    TIMES_OP        reduce using rule 23 (factor -> IDENTIFIER .)
    DIVIDE_OP       reduce using rule 23 (factor -> IDENTIFIER .)
    LT_OP           reduce using rule 23 (factor -> IDENTIFIER .)
    GT_OP           reduce using rule 23 (factor -> IDENTIFIER .)
    LE_OP           reduce using rule 23 (factor -> IDENTIFIER .)
    GE_OP           reduce using rule 23 (factor -> IDENTIFIER .)
    EQ_OP           reduce using rule 23 (factor -> IDENTIFIER .)
    NE_OP           reduce using rule 23 (factor -> IDENTIFIER .)
    PLUS_OP         reduce using rule 23 (factor -> IDENTIFIER .)
    MINUS_OP        reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_AND     reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_OR      reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_BEGIN   reduce using rule 23 (factor -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_PRINT   reduce using rule 23 (factor -> IDENTIFIER .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 23 (factor -> IDENTIFIER .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 23 (factor -> IDENTIFIER .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 23 (factor -> IDENTIFIER .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 23 (factor -> IDENTIFIER .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_IF      reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_RETURN  reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_BREAK   reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_CONTINUE reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_FUNCTION reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_LET     reduce using rule 23 (factor -> IDENTIFIER .)
    INTEGER         reduce using rule 23 (factor -> IDENTIFIER .)
    FLOAT           reduce using rule 23 (factor -> IDENTIFIER .)
    STRING          reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_TRUE    reduce using rule 23 (factor -> IDENTIFIER .)
    KEYWORD_FALSE   reduce using rule 23 (factor -> IDENTIFIER .)
    LPAREN          shift and go to state 53

  ! LPAREN          [ reduce using rule 23 (factor -> IDENTIFIER .) ]


state 69

    (44) condition -> expression . LT_OP expression
    (45) condition -> expression . GT_OP expression
    (46) condition -> expression . LE_OP expression
    (47) condition -> expression . GE_OP expression
    (48) condition -> expression . EQ_OP expression
    (49) condition -> expression . NE_OP expression
    (53) condition -> expression .
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

  ! shift/reduce conflict for PLUS_OP resolved as shift
  ! shift/reduce conflict for MINUS_OP resolved as shift
    LT_OP           shift and go to state 102
    GT_OP           shift and go to state 103
    LE_OP           shift and go to state 104
    GE_OP           shift and go to state 105
    EQ_OP           shift and go to state 106
    NE_OP           shift and go to state 107
    KEYWORD_AND     reduce using rule 53 (condition -> expression .)
    KEYWORD_OR      reduce using rule 53 (condition -> expression .)
    KEYWORD_BEGIN   reduce using rule 53 (condition -> expression .)
    IDENTIFIER      reduce using rule 53 (condition -> expression .)
    KEYWORD_PRINT   reduce using rule 53 (condition -> expression .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 53 (condition -> expression .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 53 (condition -> expression .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 53 (condition -> expression .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 53 (condition -> expression .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 53 (condition -> expression .)
    KEYWORD_IF      reduce using rule 53 (condition -> expression .)
    KEYWORD_RETURN  reduce using rule 53 (condition -> expression .)
    KEYWORD_BREAK   reduce using rule 53 (condition -> expression .)
    KEYWORD_CONTINUE reduce using rule 53 (condition -> expression .)
    KEYWORD_FUNCTION reduce using rule 53 (condition -> expression .)
    KEYWORD_LET     reduce using rule 53 (condition -> expression .)
    INTEGER         reduce using rule 53 (condition -> expression .)
    FLOAT           reduce using rule 53 (condition -> expression .)
    STRING          reduce using rule 53 (condition -> expression .)
    KEYWORD_TRUE    reduce using rule 53 (condition -> expression .)
    KEYWORD_FALSE   reduce using rule 53 (condition -> expression .)
    LPAREN          reduce using rule 53 (condition -> expression .)
    RPAREN          reduce using rule 53 (condition -> expression .)
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50

  ! PLUS_OP         [ reduce using rule 53 (condition -> expression .) ]
  ! MINUS_OP        [ reduce using rule 53 (condition -> expression .) ]


state 70

    (33) if_statement -> KEYWORD_IF condition . block else_part
    (50) condition -> condition . KEYWORD_AND condition
    (51) condition -> condition . KEYWORD_OR condition
    (42) block -> . KEYWORD_BEGIN statement_list KEYWORD_END
    (43) block -> . statement
    (6) statement -> . assignment_statement
    (7) statement -> . expression SEMICOLON
    (8) statement -> . print_statement
    (9) statement -> . natural_language
    (83) statement -> . return_statement
    (84) statement -> . break_statement
    (85) statement -> . continue_statement
    (86) statement -> . function_definition
    (10) assignment_statement -> . declaration
    (11) assignment_statement -> . IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (70) print_statement -> . KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON
    (55) natural_language -> . SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON
    (56) natural_language -> . ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON
    (57) natural_language -> . SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON
    (58) natural_language -> . MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (59) natural_language -> . DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (60) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (79) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (80) return_statement -> . KEYWORD_RETURN SEMICOLON
    (81) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) continue_statement -> . KEYWORD_CONTINUE SEMICOLON
    (75) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block
    (76) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block
    (12) declaration -> . KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    KEYWORD_AND     shift and go to state 110
    KEYWORD_OR      shift and go to state 111
    KEYWORD_BEGIN   shift and go to state 112
    IDENTIFIER      shift and go to state 114
    KEYWORD_PRINT   shift and go to state 24
    SET_KEYWORD_NATURAL_LANG shift and go to state 26
    ADD_KEYWORD_NATURAL_LANG shift and go to state 27
    SUB_KEYWORD_NATURAL_LANG shift and go to state 28
    MULT_KEYWORD_NATURAL_LANG shift and go to state 29
    DIV_KEYWORD_NATURAL_LANG shift and go to state 30
    KEYWORD_IF      shift and go to state 108
    KEYWORD_RETURN  shift and go to state 32
    KEYWORD_BREAK   shift and go to state 33
    KEYWORD_CONTINUE shift and go to state 34
    KEYWORD_FUNCTION shift and go to state 35
    KEYWORD_LET     shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    block                          shift and go to state 109
    statement                      shift and go to state 113
    assignment_statement           shift and go to state 7
    expression                     shift and go to state 8
    print_statement                shift and go to state 9
    natural_language               shift and go to state 10
    return_statement               shift and go to state 11
    break_statement                shift and go to state 12
    continue_statement             shift and go to state 13
    function_definition            shift and go to state 14
    declaration                    shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 71

    (52) condition -> KEYWORD_NOT . condition
    (44) condition -> . expression LT_OP expression
    (45) condition -> . expression GT_OP expression
    (46) condition -> . expression LE_OP expression
    (47) condition -> . expression GE_OP expression
    (48) condition -> . expression EQ_OP expression
    (49) condition -> . expression NE_OP expression
    (50) condition -> . condition KEYWORD_AND condition
    (51) condition -> . condition KEYWORD_OR condition
    (52) condition -> . KEYWORD_NOT condition
    (53) condition -> . expression
    (54) condition -> . LPAREN condition RPAREN
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    KEYWORD_NOT     shift and go to state 71
    LPAREN          shift and go to state 72
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    condition                      shift and go to state 115
    expression                     shift and go to state 69
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 72

    (54) condition -> LPAREN . condition RPAREN
    (26) factor -> LPAREN . expression RPAREN
    (44) condition -> . expression LT_OP expression
    (45) condition -> . expression GT_OP expression
    (46) condition -> . expression LE_OP expression
    (47) condition -> . expression GE_OP expression
    (48) condition -> . expression EQ_OP expression
    (49) condition -> . expression NE_OP expression
    (50) condition -> . condition KEYWORD_AND condition
    (51) condition -> . condition KEYWORD_OR condition
    (52) condition -> . KEYWORD_NOT condition
    (53) condition -> . expression
    (54) condition -> . LPAREN condition RPAREN
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    KEYWORD_NOT     shift and go to state 71
    LPAREN          shift and go to state 72
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    condition                      shift and go to state 116
    expression                     shift and go to state 117
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 73

    (79) return_statement -> KEYWORD_RETURN expression . SEMICOLON
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    SEMICOLON       shift and go to state 118
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50


state 74

    (80) return_statement -> KEYWORD_RETURN SEMICOLON .

    IDENTIFIER      reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_PRINT   reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_IF      reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_CONTINUE reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_FUNCTION reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_FOR     reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_LET     reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    INTEGER         reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    FLOAT           reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    STRING          reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    LPAREN          reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    PLUS_OP         reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    MINUS_OP        reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    $end            reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_END     reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_ELSEIF  reduce using rule 80 (return_statement -> KEYWORD_RETURN SEMICOLON .)


state 75

    (81) break_statement -> KEYWORD_BREAK SEMICOLON .

    IDENTIFIER      reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_PRINT   reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_IF      reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_CONTINUE reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_FUNCTION reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_FOR     reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_LET     reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    INTEGER         reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    FLOAT           reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    STRING          reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    LPAREN          reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    PLUS_OP         reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    MINUS_OP        reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    $end            reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_END     reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_ELSEIF  reduce using rule 81 (break_statement -> KEYWORD_BREAK SEMICOLON .)


state 76

    (82) continue_statement -> KEYWORD_CONTINUE SEMICOLON .

    IDENTIFIER      reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    KEYWORD_PRINT   reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    KEYWORD_IF      reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    KEYWORD_CONTINUE reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    KEYWORD_FUNCTION reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    KEYWORD_FOR     reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    KEYWORD_LET     reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    INTEGER         reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    FLOAT           reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    STRING          reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    LPAREN          reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    PLUS_OP         reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    MINUS_OP        reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    $end            reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    KEYWORD_END     reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)
    KEYWORD_ELSEIF  reduce using rule 82 (continue_statement -> KEYWORD_CONTINUE SEMICOLON .)


state 77

    (75) function_definition -> KEYWORD_FUNCTION IDENTIFIER . LPAREN parameter_declaration_list RPAREN block
    (76) function_definition -> KEYWORD_FUNCTION IDENTIFIER . LPAREN RPAREN block

    LPAREN          shift and go to state 119


state 78

    (37) for_statement -> KEYWORD_FOR IDENTIFIER . ASSIGNMENT_OP expression KEYWORD_TO expression block
    (38) for_statement -> KEYWORD_FOR IDENTIFIER . ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block

    ASSIGNMENT_OP   shift and go to state 120


state 79

    (39) for_statement -> KEYWORD_FOR declaration . KEYWORD_TO expression KEYWORD_STEP expression block
    (40) for_statement -> KEYWORD_FOR declaration . KEYWORD_TO expression block

    KEYWORD_TO      shift and go to state 121


state 80

    (41) while_statement -> KEYWORD_WHILE condition . block
    (50) condition -> condition . KEYWORD_AND condition
    (51) condition -> condition . KEYWORD_OR condition
    (42) block -> . KEYWORD_BEGIN statement_list KEYWORD_END
    (43) block -> . statement
    (6) statement -> . assignment_statement
    (7) statement -> . expression SEMICOLON
    (8) statement -> . print_statement
    (9) statement -> . natural_language
    (83) statement -> . return_statement
    (84) statement -> . break_statement
    (85) statement -> . continue_statement
    (86) statement -> . function_definition
    (10) assignment_statement -> . declaration
    (11) assignment_statement -> . IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (70) print_statement -> . KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON
    (55) natural_language -> . SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON
    (56) natural_language -> . ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON
    (57) natural_language -> . SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON
    (58) natural_language -> . MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (59) natural_language -> . DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (60) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (79) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (80) return_statement -> . KEYWORD_RETURN SEMICOLON
    (81) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) continue_statement -> . KEYWORD_CONTINUE SEMICOLON
    (75) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block
    (76) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block
    (12) declaration -> . KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    KEYWORD_AND     shift and go to state 110
    KEYWORD_OR      shift and go to state 111
    KEYWORD_BEGIN   shift and go to state 112
    IDENTIFIER      shift and go to state 114
    KEYWORD_PRINT   shift and go to state 24
    SET_KEYWORD_NATURAL_LANG shift and go to state 26
    ADD_KEYWORD_NATURAL_LANG shift and go to state 27
    SUB_KEYWORD_NATURAL_LANG shift and go to state 28
    MULT_KEYWORD_NATURAL_LANG shift and go to state 29
    DIV_KEYWORD_NATURAL_LANG shift and go to state 30
    KEYWORD_IF      shift and go to state 108
    KEYWORD_RETURN  shift and go to state 32
    KEYWORD_BREAK   shift and go to state 33
    KEYWORD_CONTINUE shift and go to state 34
    KEYWORD_FUNCTION shift and go to state 35
    KEYWORD_LET     shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    block                          shift and go to state 122
    statement                      shift and go to state 113
    assignment_statement           shift and go to state 7
    expression                     shift and go to state 8
    print_statement                shift and go to state 9
    natural_language               shift and go to state 10
    return_statement               shift and go to state 11
    break_statement                shift and go to state 12
    continue_statement             shift and go to state 13
    function_definition            shift and go to state 14
    declaration                    shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 81

    (12) declaration -> KEYWORD_LET IDENTIFIER . ASSIGNMENT_OP expression SEMICOLON

    ASSIGNMENT_OP   shift and go to state 123


state 82

    (1) program -> KEYWORD_BEGIN statement_list KEYWORD_END .

    $end            reduce using rule 1 (program -> KEYWORD_BEGIN statement_list KEYWORD_END .)


state 83

    (13) expression -> expression PLUS_OP term .
    (16) term -> term . TIMES_OP factor
    (17) term -> term . DIVIDE_OP factor

    SEMICOLON       reduce using rule 13 (expression -> expression PLUS_OP term .)
    PLUS_OP         reduce using rule 13 (expression -> expression PLUS_OP term .)
    MINUS_OP        reduce using rule 13 (expression -> expression PLUS_OP term .)
    RPAREN          reduce using rule 13 (expression -> expression PLUS_OP term .)
    KEYWORD_TO      reduce using rule 13 (expression -> expression PLUS_OP term .)
    FROM_KEYWORD_NATURAL_LANG reduce using rule 13 (expression -> expression PLUS_OP term .)
    LT_OP           reduce using rule 13 (expression -> expression PLUS_OP term .)
    GT_OP           reduce using rule 13 (expression -> expression PLUS_OP term .)
    LE_OP           reduce using rule 13 (expression -> expression PLUS_OP term .)
    GE_OP           reduce using rule 13 (expression -> expression PLUS_OP term .)
    EQ_OP           reduce using rule 13 (expression -> expression PLUS_OP term .)
    NE_OP           reduce using rule 13 (expression -> expression PLUS_OP term .)
    KEYWORD_AND     reduce using rule 13 (expression -> expression PLUS_OP term .)
    KEYWORD_OR      reduce using rule 13 (expression -> expression PLUS_OP term .)
    KEYWORD_BEGIN   reduce using rule 13 (expression -> expression PLUS_OP term .)
    IDENTIFIER      reduce using rule 13 (expression -> expression PLUS_OP term .)
    KEYWORD_PRINT   reduce using rule 13 (expression -> expression PLUS_OP term .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 13 (expression -> expression PLUS_OP term .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 13 (expression -> expression PLUS_OP term .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 13 (expression -> expression PLUS_OP term .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 13 (expression -> expression PLUS_OP term .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 13 (expression -> expression PLUS_OP term .)
    KEYWORD_IF      reduce using rule 13 (expression -> expression PLUS_OP term .)
    KEYWORD_RETURN  reduce using rule 13 (expression -> expression PLUS_OP term .)
    KEYWORD_BREAK   reduce using rule 13 (expression -> expression PLUS_OP term .)
    KEYWORD_CONTINUE reduce using rule 13 (expression -> expression PLUS_OP term .)
    KEYWORD_FUNCTION reduce using rule 13 (expression -> expression PLUS_OP term .)
    KEYWORD_LET     reduce using rule 13 (expression -> expression PLUS_OP term .)
    INTEGER         reduce using rule 13 (expression -> expression PLUS_OP term .)
    FLOAT           reduce using rule 13 (expression -> expression PLUS_OP term .)
    STRING          reduce using rule 13 (expression -> expression PLUS_OP term .)
    KEYWORD_TRUE    reduce using rule 13 (expression -> expression PLUS_OP term .)
    KEYWORD_FALSE   reduce using rule 13 (expression -> expression PLUS_OP term .)
    LPAREN          reduce using rule 13 (expression -> expression PLUS_OP term .)
    COMMA           reduce using rule 13 (expression -> expression PLUS_OP term .)
    KEYWORD_STEP    reduce using rule 13 (expression -> expression PLUS_OP term .)
    THEN_KEYWORD_NATURAL_LANG reduce using rule 13 (expression -> expression PLUS_OP term .)
    TIMES_OP        shift and go to state 56
    DIVIDE_OP       shift and go to state 57


state 84

    (14) expression -> expression MINUS_OP term .
    (16) term -> term . TIMES_OP factor
    (17) term -> term . DIVIDE_OP factor

    SEMICOLON       reduce using rule 14 (expression -> expression MINUS_OP term .)
    PLUS_OP         reduce using rule 14 (expression -> expression MINUS_OP term .)
    MINUS_OP        reduce using rule 14 (expression -> expression MINUS_OP term .)
    RPAREN          reduce using rule 14 (expression -> expression MINUS_OP term .)
    KEYWORD_TO      reduce using rule 14 (expression -> expression MINUS_OP term .)
    FROM_KEYWORD_NATURAL_LANG reduce using rule 14 (expression -> expression MINUS_OP term .)
    LT_OP           reduce using rule 14 (expression -> expression MINUS_OP term .)
    GT_OP           reduce using rule 14 (expression -> expression MINUS_OP term .)
    LE_OP           reduce using rule 14 (expression -> expression MINUS_OP term .)
    GE_OP           reduce using rule 14 (expression -> expression MINUS_OP term .)
    EQ_OP           reduce using rule 14 (expression -> expression MINUS_OP term .)
    NE_OP           reduce using rule 14 (expression -> expression MINUS_OP term .)
    KEYWORD_AND     reduce using rule 14 (expression -> expression MINUS_OP term .)
    KEYWORD_OR      reduce using rule 14 (expression -> expression MINUS_OP term .)
    KEYWORD_BEGIN   reduce using rule 14 (expression -> expression MINUS_OP term .)
    IDENTIFIER      reduce using rule 14 (expression -> expression MINUS_OP term .)
    KEYWORD_PRINT   reduce using rule 14 (expression -> expression MINUS_OP term .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 14 (expression -> expression MINUS_OP term .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 14 (expression -> expression MINUS_OP term .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 14 (expression -> expression MINUS_OP term .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 14 (expression -> expression MINUS_OP term .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 14 (expression -> expression MINUS_OP term .)
    KEYWORD_IF      reduce using rule 14 (expression -> expression MINUS_OP term .)
    KEYWORD_RETURN  reduce using rule 14 (expression -> expression MINUS_OP term .)
    KEYWORD_BREAK   reduce using rule 14 (expression -> expression MINUS_OP term .)
    KEYWORD_CONTINUE reduce using rule 14 (expression -> expression MINUS_OP term .)
    KEYWORD_FUNCTION reduce using rule 14 (expression -> expression MINUS_OP term .)
    KEYWORD_LET     reduce using rule 14 (expression -> expression MINUS_OP term .)
    INTEGER         reduce using rule 14 (expression -> expression MINUS_OP term .)
    FLOAT           reduce using rule 14 (expression -> expression MINUS_OP term .)
    STRING          reduce using rule 14 (expression -> expression MINUS_OP term .)
    KEYWORD_TRUE    reduce using rule 14 (expression -> expression MINUS_OP term .)
    KEYWORD_FALSE   reduce using rule 14 (expression -> expression MINUS_OP term .)
    LPAREN          reduce using rule 14 (expression -> expression MINUS_OP term .)
    COMMA           reduce using rule 14 (expression -> expression MINUS_OP term .)
    KEYWORD_STEP    reduce using rule 14 (expression -> expression MINUS_OP term .)
    THEN_KEYWORD_NATURAL_LANG reduce using rule 14 (expression -> expression MINUS_OP term .)
    TIMES_OP        shift and go to state 56
    DIVIDE_OP       shift and go to state 57


state 85

    (11) assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression . SEMICOLON
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    SEMICOLON       shift and go to state 124
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50


state 86

    (66) function_call -> IDENTIFIER LPAREN parameter_list . RPAREN

    RPAREN          shift and go to state 125


state 87

    (67) parameter_list -> expression . COMMA parameter_list
    (68) parameter_list -> expression .
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    COMMA           shift and go to state 126
    RPAREN          reduce using rule 68 (parameter_list -> expression .)
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50


state 88

    (69) parameter_list -> empty .

    RPAREN          reduce using rule 69 (parameter_list -> empty .)


state 89

    (16) term -> term TIMES_OP factor .

    TIMES_OP        reduce using rule 16 (term -> term TIMES_OP factor .)
    DIVIDE_OP       reduce using rule 16 (term -> term TIMES_OP factor .)
    SEMICOLON       reduce using rule 16 (term -> term TIMES_OP factor .)
    PLUS_OP         reduce using rule 16 (term -> term TIMES_OP factor .)
    MINUS_OP        reduce using rule 16 (term -> term TIMES_OP factor .)
    RPAREN          reduce using rule 16 (term -> term TIMES_OP factor .)
    KEYWORD_TO      reduce using rule 16 (term -> term TIMES_OP factor .)
    FROM_KEYWORD_NATURAL_LANG reduce using rule 16 (term -> term TIMES_OP factor .)
    LT_OP           reduce using rule 16 (term -> term TIMES_OP factor .)
    GT_OP           reduce using rule 16 (term -> term TIMES_OP factor .)
    LE_OP           reduce using rule 16 (term -> term TIMES_OP factor .)
    GE_OP           reduce using rule 16 (term -> term TIMES_OP factor .)
    EQ_OP           reduce using rule 16 (term -> term TIMES_OP factor .)
    NE_OP           reduce using rule 16 (term -> term TIMES_OP factor .)
    KEYWORD_AND     reduce using rule 16 (term -> term TIMES_OP factor .)
    KEYWORD_OR      reduce using rule 16 (term -> term TIMES_OP factor .)
    KEYWORD_BEGIN   reduce using rule 16 (term -> term TIMES_OP factor .)
    IDENTIFIER      reduce using rule 16 (term -> term TIMES_OP factor .)
    KEYWORD_PRINT   reduce using rule 16 (term -> term TIMES_OP factor .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 16 (term -> term TIMES_OP factor .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 16 (term -> term TIMES_OP factor .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 16 (term -> term TIMES_OP factor .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 16 (term -> term TIMES_OP factor .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 16 (term -> term TIMES_OP factor .)
    KEYWORD_IF      reduce using rule 16 (term -> term TIMES_OP factor .)
    KEYWORD_RETURN  reduce using rule 16 (term -> term TIMES_OP factor .)
    KEYWORD_BREAK   reduce using rule 16 (term -> term TIMES_OP factor .)
    KEYWORD_CONTINUE reduce using rule 16 (term -> term TIMES_OP factor .)
    KEYWORD_FUNCTION reduce using rule 16 (term -> term TIMES_OP factor .)
    KEYWORD_LET     reduce using rule 16 (term -> term TIMES_OP factor .)
    INTEGER         reduce using rule 16 (term -> term TIMES_OP factor .)
    FLOAT           reduce using rule 16 (term -> term TIMES_OP factor .)
    STRING          reduce using rule 16 (term -> term TIMES_OP factor .)
    KEYWORD_TRUE    reduce using rule 16 (term -> term TIMES_OP factor .)
    KEYWORD_FALSE   reduce using rule 16 (term -> term TIMES_OP factor .)
    LPAREN          reduce using rule 16 (term -> term TIMES_OP factor .)
    COMMA           reduce using rule 16 (term -> term TIMES_OP factor .)
    THEN_KEYWORD_NATURAL_LANG reduce using rule 16 (term -> term TIMES_OP factor .)
    KEYWORD_STEP    reduce using rule 16 (term -> term TIMES_OP factor .)


state 90

    (17) term -> term DIVIDE_OP factor .

    TIMES_OP        reduce using rule 17 (term -> term DIVIDE_OP factor .)
    DIVIDE_OP       reduce using rule 17 (term -> term DIVIDE_OP factor .)
    SEMICOLON       reduce using rule 17 (term -> term DIVIDE_OP factor .)
    PLUS_OP         reduce using rule 17 (term -> term DIVIDE_OP factor .)
    MINUS_OP        reduce using rule 17 (term -> term DIVIDE_OP factor .)
    RPAREN          reduce using rule 17 (term -> term DIVIDE_OP factor .)
    KEYWORD_TO      reduce using rule 17 (term -> term DIVIDE_OP factor .)
    FROM_KEYWORD_NATURAL_LANG reduce using rule 17 (term -> term DIVIDE_OP factor .)
    LT_OP           reduce using rule 17 (term -> term DIVIDE_OP factor .)
    GT_OP           reduce using rule 17 (term -> term DIVIDE_OP factor .)
    LE_OP           reduce using rule 17 (term -> term DIVIDE_OP factor .)
    GE_OP           reduce using rule 17 (term -> term DIVIDE_OP factor .)
    EQ_OP           reduce using rule 17 (term -> term DIVIDE_OP factor .)
    NE_OP           reduce using rule 17 (term -> term DIVIDE_OP factor .)
    KEYWORD_AND     reduce using rule 17 (term -> term DIVIDE_OP factor .)
    KEYWORD_OR      reduce using rule 17 (term -> term DIVIDE_OP factor .)
    KEYWORD_BEGIN   reduce using rule 17 (term -> term DIVIDE_OP factor .)
    IDENTIFIER      reduce using rule 17 (term -> term DIVIDE_OP factor .)
    KEYWORD_PRINT   reduce using rule 17 (term -> term DIVIDE_OP factor .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 17 (term -> term DIVIDE_OP factor .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 17 (term -> term DIVIDE_OP factor .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 17 (term -> term DIVIDE_OP factor .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 17 (term -> term DIVIDE_OP factor .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 17 (term -> term DIVIDE_OP factor .)
    KEYWORD_IF      reduce using rule 17 (term -> term DIVIDE_OP factor .)
    KEYWORD_RETURN  reduce using rule 17 (term -> term DIVIDE_OP factor .)
    KEYWORD_BREAK   reduce using rule 17 (term -> term DIVIDE_OP factor .)
    KEYWORD_CONTINUE reduce using rule 17 (term -> term DIVIDE_OP factor .)
    KEYWORD_FUNCTION reduce using rule 17 (term -> term DIVIDE_OP factor .)
    KEYWORD_LET     reduce using rule 17 (term -> term DIVIDE_OP factor .)
    INTEGER         reduce using rule 17 (term -> term DIVIDE_OP factor .)
    FLOAT           reduce using rule 17 (term -> term DIVIDE_OP factor .)
    STRING          reduce using rule 17 (term -> term DIVIDE_OP factor .)
    KEYWORD_TRUE    reduce using rule 17 (term -> term DIVIDE_OP factor .)
    KEYWORD_FALSE   reduce using rule 17 (term -> term DIVIDE_OP factor .)
    LPAREN          reduce using rule 17 (term -> term DIVIDE_OP factor .)
    COMMA           reduce using rule 17 (term -> term DIVIDE_OP factor .)
    THEN_KEYWORD_NATURAL_LANG reduce using rule 17 (term -> term DIVIDE_OP factor .)
    KEYWORD_STEP    reduce using rule 17 (term -> term DIVIDE_OP factor .)


state 91

    (70) print_statement -> KEYWORD_PRINT LPAREN print_arguments . RPAREN SEMICOLON

    RPAREN          shift and go to state 127


state 92

    (71) print_arguments -> printable_item . COMMA print_arguments
    (72) print_arguments -> printable_item .

    COMMA           shift and go to state 128
    RPAREN          reduce using rule 72 (print_arguments -> printable_item .)


state 93

    (73) printable_item -> STRING .
    (22) factor -> STRING .

  ! reduce/reduce conflict for COMMA resolved using rule 22 (factor -> STRING .)
  ! reduce/reduce conflict for RPAREN resolved using rule 22 (factor -> STRING .)
    TIMES_OP        reduce using rule 22 (factor -> STRING .)
    DIVIDE_OP       reduce using rule 22 (factor -> STRING .)
    PLUS_OP         reduce using rule 22 (factor -> STRING .)
    MINUS_OP        reduce using rule 22 (factor -> STRING .)
    COMMA           reduce using rule 22 (factor -> STRING .)
    RPAREN          reduce using rule 22 (factor -> STRING .)

  ! COMMA           [ reduce using rule 73 (printable_item -> STRING .) ]
  ! RPAREN          [ reduce using rule 73 (printable_item -> STRING .) ]


state 94

    (74) printable_item -> expression .
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    COMMA           reduce using rule 74 (printable_item -> expression .)
    RPAREN          reduce using rule 74 (printable_item -> expression .)
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50


state 95

    (26) factor -> LPAREN expression RPAREN .

    TIMES_OP        reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    DIVIDE_OP       reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    PLUS_OP         reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    MINUS_OP        reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    KEYWORD_TO      reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    FROM_KEYWORD_NATURAL_LANG reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    LT_OP           reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    GT_OP           reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    LE_OP           reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    GE_OP           reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    EQ_OP           reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    NE_OP           reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    KEYWORD_AND     reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    KEYWORD_OR      reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    KEYWORD_BEGIN   reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    IDENTIFIER      reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    KEYWORD_PRINT   reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    KEYWORD_IF      reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    KEYWORD_RETURN  reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    KEYWORD_BREAK   reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    KEYWORD_CONTINUE reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    KEYWORD_FUNCTION reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    KEYWORD_LET     reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    INTEGER         reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    STRING          reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    KEYWORD_TRUE    reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    KEYWORD_FALSE   reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    THEN_KEYWORD_NATURAL_LANG reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    KEYWORD_STEP    reduce using rule 26 (factor -> LPAREN expression RPAREN .)


state 96

    (55) natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO . expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 129
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 97

    (56) natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 130


state 98

    (57) natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 131


state 99

    (58) natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG . expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 132
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 100

    (59) natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG . expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 133
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 101

    (60) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG . LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG . GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG . LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG . GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG . EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG . NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list

    LT_OP           shift and go to state 134
    GT_OP           shift and go to state 135
    LE_OP           shift and go to state 136
    GE_OP           shift and go to state 137
    EQ_OP           shift and go to state 138
    NE_OP           shift and go to state 139


state 102

    (44) condition -> expression LT_OP . expression
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 140
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 103

    (45) condition -> expression GT_OP . expression
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 141
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 104

    (46) condition -> expression LE_OP . expression
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 142
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 105

    (47) condition -> expression GE_OP . expression
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 143
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 106

    (48) condition -> expression EQ_OP . expression
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 144
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 107

    (49) condition -> expression NE_OP . expression
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 145
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 108

    (60) natural_language -> KEYWORD_IF . IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> KEYWORD_IF . IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> KEYWORD_IF . IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> KEYWORD_IF . IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> KEYWORD_IF . IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> KEYWORD_IF . IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list

    IDENTIFIER      shift and go to state 146


state 109

    (33) if_statement -> KEYWORD_IF condition block . else_part
    (34) else_part -> . KEYWORD_ELSE block
    (35) else_part -> . KEYWORD_ELSEIF condition block else_part
    (36) else_part -> . empty
    (87) empty -> .

  ! shift/reduce conflict for KEYWORD_ELSE resolved as shift
  ! shift/reduce conflict for KEYWORD_ELSEIF resolved as shift
    KEYWORD_ELSE    shift and go to state 148
    KEYWORD_ELSEIF  shift and go to state 149
    $end            reduce using rule 87 (empty -> .)
    KEYWORD_END     reduce using rule 87 (empty -> .)
    IDENTIFIER      reduce using rule 87 (empty -> .)
    KEYWORD_PRINT   reduce using rule 87 (empty -> .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 87 (empty -> .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 87 (empty -> .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 87 (empty -> .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 87 (empty -> .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 87 (empty -> .)
    KEYWORD_IF      reduce using rule 87 (empty -> .)
    KEYWORD_RETURN  reduce using rule 87 (empty -> .)
    KEYWORD_BREAK   reduce using rule 87 (empty -> .)
    KEYWORD_CONTINUE reduce using rule 87 (empty -> .)
    KEYWORD_FUNCTION reduce using rule 87 (empty -> .)
    KEYWORD_FOR     reduce using rule 87 (empty -> .)
    KEYWORD_WHILE   reduce using rule 87 (empty -> .)
    KEYWORD_LET     reduce using rule 87 (empty -> .)
    INTEGER         reduce using rule 87 (empty -> .)
    FLOAT           reduce using rule 87 (empty -> .)
    STRING          reduce using rule 87 (empty -> .)
    KEYWORD_TRUE    reduce using rule 87 (empty -> .)
    KEYWORD_FALSE   reduce using rule 87 (empty -> .)
    LPAREN          reduce using rule 87 (empty -> .)
    PLUS_OP         reduce using rule 87 (empty -> .)
    MINUS_OP        reduce using rule 87 (empty -> .)

  ! KEYWORD_ELSE    [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_ELSEIF  [ reduce using rule 87 (empty -> .) ]

    else_part                      shift and go to state 147
    empty                          shift and go to state 150

state 110

    (50) condition -> condition KEYWORD_AND . condition
    (44) condition -> . expression LT_OP expression
    (45) condition -> . expression GT_OP expression
    (46) condition -> . expression LE_OP expression
    (47) condition -> . expression GE_OP expression
    (48) condition -> . expression EQ_OP expression
    (49) condition -> . expression NE_OP expression
    (50) condition -> . condition KEYWORD_AND condition
    (51) condition -> . condition KEYWORD_OR condition
    (52) condition -> . KEYWORD_NOT condition
    (53) condition -> . expression
    (54) condition -> . LPAREN condition RPAREN
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    KEYWORD_NOT     shift and go to state 71
    LPAREN          shift and go to state 72
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    condition                      shift and go to state 151
    expression                     shift and go to state 69
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 111

    (51) condition -> condition KEYWORD_OR . condition
    (44) condition -> . expression LT_OP expression
    (45) condition -> . expression GT_OP expression
    (46) condition -> . expression LE_OP expression
    (47) condition -> . expression GE_OP expression
    (48) condition -> . expression EQ_OP expression
    (49) condition -> . expression NE_OP expression
    (50) condition -> . condition KEYWORD_AND condition
    (51) condition -> . condition KEYWORD_OR condition
    (52) condition -> . KEYWORD_NOT condition
    (53) condition -> . expression
    (54) condition -> . LPAREN condition RPAREN
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    KEYWORD_NOT     shift and go to state 71
    LPAREN          shift and go to state 72
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    condition                      shift and go to state 152
    expression                     shift and go to state 69
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 112

    (42) block -> KEYWORD_BEGIN . statement_list KEYWORD_END
    (3) statement_list -> . statement statement_list
    (4) statement_list -> . control_statement statement_list
    (5) statement_list -> . empty
    (6) statement -> . assignment_statement
    (7) statement -> . expression SEMICOLON
    (8) statement -> . print_statement
    (9) statement -> . natural_language
    (83) statement -> . return_statement
    (84) statement -> . break_statement
    (85) statement -> . continue_statement
    (86) statement -> . function_definition
    (29) control_statement -> . if_statement
    (30) control_statement -> . for_statement
    (31) control_statement -> . while_statement
    (32) control_statement -> . function_call SEMICOLON
    (87) empty -> .
    (10) assignment_statement -> . declaration
    (11) assignment_statement -> . IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (70) print_statement -> . KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON
    (55) natural_language -> . SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON
    (56) natural_language -> . ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON
    (57) natural_language -> . SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON
    (58) natural_language -> . MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (59) natural_language -> . DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (60) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (79) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (80) return_statement -> . KEYWORD_RETURN SEMICOLON
    (81) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) continue_statement -> . KEYWORD_CONTINUE SEMICOLON
    (75) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block
    (76) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block
    (33) if_statement -> . KEYWORD_IF condition block else_part
    (37) for_statement -> . KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block
    (38) for_statement -> . KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block
    (39) for_statement -> . KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block
    (40) for_statement -> . KEYWORD_FOR declaration KEYWORD_TO expression block
    (41) while_statement -> . KEYWORD_WHILE condition block
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN
    (12) declaration -> . KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor

    KEYWORD_END     reduce using rule 87 (empty -> .)
    IDENTIFIER      shift and go to state 20
    KEYWORD_PRINT   shift and go to state 24
    SET_KEYWORD_NATURAL_LANG shift and go to state 26
    ADD_KEYWORD_NATURAL_LANG shift and go to state 27
    SUB_KEYWORD_NATURAL_LANG shift and go to state 28
    MULT_KEYWORD_NATURAL_LANG shift and go to state 29
    DIV_KEYWORD_NATURAL_LANG shift and go to state 30
    KEYWORD_IF      shift and go to state 31
    KEYWORD_RETURN  shift and go to state 32
    KEYWORD_BREAK   shift and go to state 33
    KEYWORD_CONTINUE shift and go to state 34
    KEYWORD_FUNCTION shift and go to state 35
    KEYWORD_FOR     shift and go to state 36
    KEYWORD_WHILE   shift and go to state 37
    KEYWORD_LET     shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    statement_list                 shift and go to state 153
    statement                      shift and go to state 4
    control_statement              shift and go to state 5
    empty                          shift and go to state 6
    assignment_statement           shift and go to state 7
    expression                     shift and go to state 8
    print_statement                shift and go to state 9
    natural_language               shift and go to state 10
    return_statement               shift and go to state 11
    break_statement                shift and go to state 12
    continue_statement             shift and go to state 13
    function_definition            shift and go to state 14
    if_statement                   shift and go to state 15
    for_statement                  shift and go to state 16
    while_statement                shift and go to state 17
    function_call                  shift and go to state 18
    declaration                    shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 39

state 113

    (43) block -> statement .

    $end            reduce using rule 43 (block -> statement .)
    KEYWORD_END     reduce using rule 43 (block -> statement .)
    IDENTIFIER      reduce using rule 43 (block -> statement .)
    KEYWORD_PRINT   reduce using rule 43 (block -> statement .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 43 (block -> statement .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 43 (block -> statement .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 43 (block -> statement .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 43 (block -> statement .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 43 (block -> statement .)
    KEYWORD_IF      reduce using rule 43 (block -> statement .)
    KEYWORD_RETURN  reduce using rule 43 (block -> statement .)
    KEYWORD_BREAK   reduce using rule 43 (block -> statement .)
    KEYWORD_CONTINUE reduce using rule 43 (block -> statement .)
    KEYWORD_FUNCTION reduce using rule 43 (block -> statement .)
    KEYWORD_FOR     reduce using rule 43 (block -> statement .)
    KEYWORD_WHILE   reduce using rule 43 (block -> statement .)
    KEYWORD_LET     reduce using rule 43 (block -> statement .)
    INTEGER         reduce using rule 43 (block -> statement .)
    FLOAT           reduce using rule 43 (block -> statement .)
    STRING          reduce using rule 43 (block -> statement .)
    KEYWORD_TRUE    reduce using rule 43 (block -> statement .)
    KEYWORD_FALSE   reduce using rule 43 (block -> statement .)
    LPAREN          reduce using rule 43 (block -> statement .)
    PLUS_OP         reduce using rule 43 (block -> statement .)
    MINUS_OP        reduce using rule 43 (block -> statement .)
    KEYWORD_ELSE    reduce using rule 43 (block -> statement .)
    KEYWORD_ELSEIF  reduce using rule 43 (block -> statement .)


state 114

    (11) assignment_statement -> IDENTIFIER . ASSIGNMENT_OP expression SEMICOLON
    (23) factor -> IDENTIFIER .
    (66) function_call -> IDENTIFIER . LPAREN parameter_list RPAREN

    ASSIGNMENT_OP   shift and go to state 52
    TIMES_OP        reduce using rule 23 (factor -> IDENTIFIER .)
    DIVIDE_OP       reduce using rule 23 (factor -> IDENTIFIER .)
    SEMICOLON       reduce using rule 23 (factor -> IDENTIFIER .)
    PLUS_OP         reduce using rule 23 (factor -> IDENTIFIER .)
    MINUS_OP        reduce using rule 23 (factor -> IDENTIFIER .)
    LPAREN          shift and go to state 53


state 115

    (52) condition -> KEYWORD_NOT condition .
    (50) condition -> condition . KEYWORD_AND condition
    (51) condition -> condition . KEYWORD_OR condition

    KEYWORD_AND     reduce using rule 52 (condition -> KEYWORD_NOT condition .)
    KEYWORD_OR      reduce using rule 52 (condition -> KEYWORD_NOT condition .)
    KEYWORD_BEGIN   reduce using rule 52 (condition -> KEYWORD_NOT condition .)
    IDENTIFIER      reduce using rule 52 (condition -> KEYWORD_NOT condition .)
    KEYWORD_PRINT   reduce using rule 52 (condition -> KEYWORD_NOT condition .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 52 (condition -> KEYWORD_NOT condition .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 52 (condition -> KEYWORD_NOT condition .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 52 (condition -> KEYWORD_NOT condition .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 52 (condition -> KEYWORD_NOT condition .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 52 (condition -> KEYWORD_NOT condition .)
    KEYWORD_IF      reduce using rule 52 (condition -> KEYWORD_NOT condition .)
    KEYWORD_RETURN  reduce using rule 52 (condition -> KEYWORD_NOT condition .)
    KEYWORD_BREAK   reduce using rule 52 (condition -> KEYWORD_NOT condition .)
    KEYWORD_CONTINUE reduce using rule 52 (condition -> KEYWORD_NOT condition .)
    KEYWORD_FUNCTION reduce using rule 52 (condition -> KEYWORD_NOT condition .)
    KEYWORD_LET     reduce using rule 52 (condition -> KEYWORD_NOT condition .)
    INTEGER         reduce using rule 52 (condition -> KEYWORD_NOT condition .)
    FLOAT           reduce using rule 52 (condition -> KEYWORD_NOT condition .)
    STRING          reduce using rule 52 (condition -> KEYWORD_NOT condition .)
    KEYWORD_TRUE    reduce using rule 52 (condition -> KEYWORD_NOT condition .)
    KEYWORD_FALSE   reduce using rule 52 (condition -> KEYWORD_NOT condition .)
    LPAREN          reduce using rule 52 (condition -> KEYWORD_NOT condition .)
    PLUS_OP         reduce using rule 52 (condition -> KEYWORD_NOT condition .)
    MINUS_OP        reduce using rule 52 (condition -> KEYWORD_NOT condition .)
    RPAREN          reduce using rule 52 (condition -> KEYWORD_NOT condition .)

  ! KEYWORD_AND     [ shift and go to state 110 ]
  ! KEYWORD_OR      [ shift and go to state 111 ]


state 116

    (54) condition -> LPAREN condition . RPAREN
    (50) condition -> condition . KEYWORD_AND condition
    (51) condition -> condition . KEYWORD_OR condition

    RPAREN          shift and go to state 154
    KEYWORD_AND     shift and go to state 110
    KEYWORD_OR      shift and go to state 111


state 117

    (26) factor -> LPAREN expression . RPAREN
    (44) condition -> expression . LT_OP expression
    (45) condition -> expression . GT_OP expression
    (46) condition -> expression . LE_OP expression
    (47) condition -> expression . GE_OP expression
    (48) condition -> expression . EQ_OP expression
    (49) condition -> expression . NE_OP expression
    (53) condition -> expression .
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 95
    LT_OP           shift and go to state 102
    GT_OP           shift and go to state 103
    LE_OP           shift and go to state 104
    GE_OP           shift and go to state 105
    EQ_OP           shift and go to state 106
    NE_OP           shift and go to state 107
    KEYWORD_AND     reduce using rule 53 (condition -> expression .)
    KEYWORD_OR      reduce using rule 53 (condition -> expression .)
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50

  ! RPAREN          [ reduce using rule 53 (condition -> expression .) ]


state 118

    (79) return_statement -> KEYWORD_RETURN expression SEMICOLON .

    IDENTIFIER      reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_PRINT   reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_IF      reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_CONTINUE reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_FUNCTION reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_FOR     reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_LET     reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    INTEGER         reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    STRING          reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    PLUS_OP         reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    MINUS_OP        reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    $end            reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_END     reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_ELSEIF  reduce using rule 79 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)


state 119

    (75) function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN . parameter_declaration_list RPAREN block
    (76) function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN . RPAREN block
    (77) parameter_declaration_list -> . IDENTIFIER COMMA parameter_declaration_list
    (78) parameter_declaration_list -> . IDENTIFIER

    RPAREN          shift and go to state 157
    IDENTIFIER      shift and go to state 155

    parameter_declaration_list     shift and go to state 156

state 120

    (37) for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP . expression KEYWORD_TO expression block
    (38) for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP . expression KEYWORD_TO expression KEYWORD_STEP expression block
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 158
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 121

    (39) for_statement -> KEYWORD_FOR declaration KEYWORD_TO . expression KEYWORD_STEP expression block
    (40) for_statement -> KEYWORD_FOR declaration KEYWORD_TO . expression block
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 159
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 122

    (41) while_statement -> KEYWORD_WHILE condition block .

    IDENTIFIER      reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    KEYWORD_PRINT   reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    KEYWORD_IF      reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    KEYWORD_RETURN  reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    KEYWORD_BREAK   reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    KEYWORD_CONTINUE reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    KEYWORD_FUNCTION reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    KEYWORD_FOR     reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    KEYWORD_WHILE   reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    KEYWORD_LET     reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    INTEGER         reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    FLOAT           reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    STRING          reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    KEYWORD_TRUE    reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    KEYWORD_FALSE   reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    LPAREN          reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    PLUS_OP         reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    MINUS_OP        reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    $end            reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    KEYWORD_END     reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    KEYWORD_ELSE    reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)
    KEYWORD_ELSEIF  reduce using rule 41 (while_statement -> KEYWORD_WHILE condition block .)


state 123

    (12) declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP . expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 160
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 124

    (11) assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .

    IDENTIFIER      reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_PRINT   reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_IF      reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_CONTINUE reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_FUNCTION reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_FOR     reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_LET     reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    INTEGER         reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    FLOAT           reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    STRING          reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    LPAREN          reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    PLUS_OP         reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    MINUS_OP        reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    $end            reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_END     reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_ELSEIF  reduce using rule 11 (assignment_statement -> IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)


state 125

    (66) function_call -> IDENTIFIER LPAREN parameter_list RPAREN .

    SEMICOLON       reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    TIMES_OP        reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    DIVIDE_OP       reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    PLUS_OP         reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    MINUS_OP        reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    RPAREN          reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    KEYWORD_TO      reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    FROM_KEYWORD_NATURAL_LANG reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    LT_OP           reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    GT_OP           reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    LE_OP           reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    GE_OP           reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    EQ_OP           reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    NE_OP           reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    KEYWORD_AND     reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    KEYWORD_OR      reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    KEYWORD_BEGIN   reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    IDENTIFIER      reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    KEYWORD_PRINT   reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    KEYWORD_IF      reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    KEYWORD_RETURN  reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    KEYWORD_BREAK   reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    KEYWORD_CONTINUE reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    KEYWORD_FUNCTION reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    KEYWORD_LET     reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    INTEGER         reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    FLOAT           reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    STRING          reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    KEYWORD_TRUE    reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    KEYWORD_FALSE   reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    LPAREN          reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    COMMA           reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    THEN_KEYWORD_NATURAL_LANG reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)
    KEYWORD_STEP    reduce using rule 66 (function_call -> IDENTIFIER LPAREN parameter_list RPAREN .)


state 126

    (67) parameter_list -> expression COMMA . parameter_list
    (67) parameter_list -> . expression COMMA parameter_list
    (68) parameter_list -> . expression
    (69) parameter_list -> . empty
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (87) empty -> .
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    RPAREN          reduce using rule 87 (empty -> .)
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 87
    parameter_list                 shift and go to state 161
    empty                          shift and go to state 88
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 127

    (70) print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 162


state 128

    (71) print_arguments -> printable_item COMMA . print_arguments
    (71) print_arguments -> . printable_item COMMA print_arguments
    (72) print_arguments -> . printable_item
    (73) printable_item -> . STRING
    (74) printable_item -> . expression
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    STRING          shift and go to state 93
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    printable_item                 shift and go to state 92
    print_arguments                shift and go to state 163
    expression                     shift and go to state 94
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 129

    (55) natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression . SEMICOLON
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    SEMICOLON       shift and go to state 164
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50


state 130

    (56) natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 165


state 131

    (57) natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 166


state 132

    (58) natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression . SEMICOLON
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    SEMICOLON       shift and go to state 167
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50


state 133

    (59) natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression . SEMICOLON
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    SEMICOLON       shift and go to state 168
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50


state 134

    (60) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP . expression THEN_KEYWORD_NATURAL_LANG statement_list
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 169
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 135

    (61) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP . expression THEN_KEYWORD_NATURAL_LANG statement_list
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 170
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 136

    (62) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP . expression THEN_KEYWORD_NATURAL_LANG statement_list
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 171
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 137

    (63) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP . expression THEN_KEYWORD_NATURAL_LANG statement_list
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 172
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 138

    (64) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP . expression THEN_KEYWORD_NATURAL_LANG statement_list
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 173
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 139

    (65) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP . expression THEN_KEYWORD_NATURAL_LANG statement_list
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 174
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 140

    (44) condition -> expression LT_OP expression .
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    KEYWORD_AND     reduce using rule 44 (condition -> expression LT_OP expression .)
    KEYWORD_OR      reduce using rule 44 (condition -> expression LT_OP expression .)
    KEYWORD_BEGIN   reduce using rule 44 (condition -> expression LT_OP expression .)
    IDENTIFIER      reduce using rule 44 (condition -> expression LT_OP expression .)
    KEYWORD_PRINT   reduce using rule 44 (condition -> expression LT_OP expression .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 44 (condition -> expression LT_OP expression .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 44 (condition -> expression LT_OP expression .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 44 (condition -> expression LT_OP expression .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 44 (condition -> expression LT_OP expression .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 44 (condition -> expression LT_OP expression .)
    KEYWORD_IF      reduce using rule 44 (condition -> expression LT_OP expression .)
    KEYWORD_RETURN  reduce using rule 44 (condition -> expression LT_OP expression .)
    KEYWORD_BREAK   reduce using rule 44 (condition -> expression LT_OP expression .)
    KEYWORD_CONTINUE reduce using rule 44 (condition -> expression LT_OP expression .)
    KEYWORD_FUNCTION reduce using rule 44 (condition -> expression LT_OP expression .)
    KEYWORD_LET     reduce using rule 44 (condition -> expression LT_OP expression .)
    INTEGER         reduce using rule 44 (condition -> expression LT_OP expression .)
    FLOAT           reduce using rule 44 (condition -> expression LT_OP expression .)
    STRING          reduce using rule 44 (condition -> expression LT_OP expression .)
    KEYWORD_TRUE    reduce using rule 44 (condition -> expression LT_OP expression .)
    KEYWORD_FALSE   reduce using rule 44 (condition -> expression LT_OP expression .)
    LPAREN          reduce using rule 44 (condition -> expression LT_OP expression .)
    RPAREN          reduce using rule 44 (condition -> expression LT_OP expression .)
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50

  ! PLUS_OP         [ reduce using rule 44 (condition -> expression LT_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 44 (condition -> expression LT_OP expression .) ]


state 141

    (45) condition -> expression GT_OP expression .
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    KEYWORD_AND     reduce using rule 45 (condition -> expression GT_OP expression .)
    KEYWORD_OR      reduce using rule 45 (condition -> expression GT_OP expression .)
    KEYWORD_BEGIN   reduce using rule 45 (condition -> expression GT_OP expression .)
    IDENTIFIER      reduce using rule 45 (condition -> expression GT_OP expression .)
    KEYWORD_PRINT   reduce using rule 45 (condition -> expression GT_OP expression .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 45 (condition -> expression GT_OP expression .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 45 (condition -> expression GT_OP expression .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 45 (condition -> expression GT_OP expression .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 45 (condition -> expression GT_OP expression .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 45 (condition -> expression GT_OP expression .)
    KEYWORD_IF      reduce using rule 45 (condition -> expression GT_OP expression .)
    KEYWORD_RETURN  reduce using rule 45 (condition -> expression GT_OP expression .)
    KEYWORD_BREAK   reduce using rule 45 (condition -> expression GT_OP expression .)
    KEYWORD_CONTINUE reduce using rule 45 (condition -> expression GT_OP expression .)
    KEYWORD_FUNCTION reduce using rule 45 (condition -> expression GT_OP expression .)
    KEYWORD_LET     reduce using rule 45 (condition -> expression GT_OP expression .)
    INTEGER         reduce using rule 45 (condition -> expression GT_OP expression .)
    FLOAT           reduce using rule 45 (condition -> expression GT_OP expression .)
    STRING          reduce using rule 45 (condition -> expression GT_OP expression .)
    KEYWORD_TRUE    reduce using rule 45 (condition -> expression GT_OP expression .)
    KEYWORD_FALSE   reduce using rule 45 (condition -> expression GT_OP expression .)
    LPAREN          reduce using rule 45 (condition -> expression GT_OP expression .)
    RPAREN          reduce using rule 45 (condition -> expression GT_OP expression .)
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50

  ! PLUS_OP         [ reduce using rule 45 (condition -> expression GT_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 45 (condition -> expression GT_OP expression .) ]


state 142

    (46) condition -> expression LE_OP expression .
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    KEYWORD_AND     reduce using rule 46 (condition -> expression LE_OP expression .)
    KEYWORD_OR      reduce using rule 46 (condition -> expression LE_OP expression .)
    KEYWORD_BEGIN   reduce using rule 46 (condition -> expression LE_OP expression .)
    IDENTIFIER      reduce using rule 46 (condition -> expression LE_OP expression .)
    KEYWORD_PRINT   reduce using rule 46 (condition -> expression LE_OP expression .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 46 (condition -> expression LE_OP expression .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 46 (condition -> expression LE_OP expression .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 46 (condition -> expression LE_OP expression .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 46 (condition -> expression LE_OP expression .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 46 (condition -> expression LE_OP expression .)
    KEYWORD_IF      reduce using rule 46 (condition -> expression LE_OP expression .)
    KEYWORD_RETURN  reduce using rule 46 (condition -> expression LE_OP expression .)
    KEYWORD_BREAK   reduce using rule 46 (condition -> expression LE_OP expression .)
    KEYWORD_CONTINUE reduce using rule 46 (condition -> expression LE_OP expression .)
    KEYWORD_FUNCTION reduce using rule 46 (condition -> expression LE_OP expression .)
    KEYWORD_LET     reduce using rule 46 (condition -> expression LE_OP expression .)
    INTEGER         reduce using rule 46 (condition -> expression LE_OP expression .)
    FLOAT           reduce using rule 46 (condition -> expression LE_OP expression .)
    STRING          reduce using rule 46 (condition -> expression LE_OP expression .)
    KEYWORD_TRUE    reduce using rule 46 (condition -> expression LE_OP expression .)
    KEYWORD_FALSE   reduce using rule 46 (condition -> expression LE_OP expression .)
    LPAREN          reduce using rule 46 (condition -> expression LE_OP expression .)
    RPAREN          reduce using rule 46 (condition -> expression LE_OP expression .)
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50

  ! PLUS_OP         [ reduce using rule 46 (condition -> expression LE_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 46 (condition -> expression LE_OP expression .) ]


state 143

    (47) condition -> expression GE_OP expression .
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    KEYWORD_AND     reduce using rule 47 (condition -> expression GE_OP expression .)
    KEYWORD_OR      reduce using rule 47 (condition -> expression GE_OP expression .)
    KEYWORD_BEGIN   reduce using rule 47 (condition -> expression GE_OP expression .)
    IDENTIFIER      reduce using rule 47 (condition -> expression GE_OP expression .)
    KEYWORD_PRINT   reduce using rule 47 (condition -> expression GE_OP expression .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 47 (condition -> expression GE_OP expression .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 47 (condition -> expression GE_OP expression .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 47 (condition -> expression GE_OP expression .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 47 (condition -> expression GE_OP expression .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 47 (condition -> expression GE_OP expression .)
    KEYWORD_IF      reduce using rule 47 (condition -> expression GE_OP expression .)
    KEYWORD_RETURN  reduce using rule 47 (condition -> expression GE_OP expression .)
    KEYWORD_BREAK   reduce using rule 47 (condition -> expression GE_OP expression .)
    KEYWORD_CONTINUE reduce using rule 47 (condition -> expression GE_OP expression .)
    KEYWORD_FUNCTION reduce using rule 47 (condition -> expression GE_OP expression .)
    KEYWORD_LET     reduce using rule 47 (condition -> expression GE_OP expression .)
    INTEGER         reduce using rule 47 (condition -> expression GE_OP expression .)
    FLOAT           reduce using rule 47 (condition -> expression GE_OP expression .)
    STRING          reduce using rule 47 (condition -> expression GE_OP expression .)
    KEYWORD_TRUE    reduce using rule 47 (condition -> expression GE_OP expression .)
    KEYWORD_FALSE   reduce using rule 47 (condition -> expression GE_OP expression .)
    LPAREN          reduce using rule 47 (condition -> expression GE_OP expression .)
    RPAREN          reduce using rule 47 (condition -> expression GE_OP expression .)
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50

  ! PLUS_OP         [ reduce using rule 47 (condition -> expression GE_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 47 (condition -> expression GE_OP expression .) ]


state 144

    (48) condition -> expression EQ_OP expression .
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    KEYWORD_AND     reduce using rule 48 (condition -> expression EQ_OP expression .)
    KEYWORD_OR      reduce using rule 48 (condition -> expression EQ_OP expression .)
    KEYWORD_BEGIN   reduce using rule 48 (condition -> expression EQ_OP expression .)
    IDENTIFIER      reduce using rule 48 (condition -> expression EQ_OP expression .)
    KEYWORD_PRINT   reduce using rule 48 (condition -> expression EQ_OP expression .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 48 (condition -> expression EQ_OP expression .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 48 (condition -> expression EQ_OP expression .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 48 (condition -> expression EQ_OP expression .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 48 (condition -> expression EQ_OP expression .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 48 (condition -> expression EQ_OP expression .)
    KEYWORD_IF      reduce using rule 48 (condition -> expression EQ_OP expression .)
    KEYWORD_RETURN  reduce using rule 48 (condition -> expression EQ_OP expression .)
    KEYWORD_BREAK   reduce using rule 48 (condition -> expression EQ_OP expression .)
    KEYWORD_CONTINUE reduce using rule 48 (condition -> expression EQ_OP expression .)
    KEYWORD_FUNCTION reduce using rule 48 (condition -> expression EQ_OP expression .)
    KEYWORD_LET     reduce using rule 48 (condition -> expression EQ_OP expression .)
    INTEGER         reduce using rule 48 (condition -> expression EQ_OP expression .)
    FLOAT           reduce using rule 48 (condition -> expression EQ_OP expression .)
    STRING          reduce using rule 48 (condition -> expression EQ_OP expression .)
    KEYWORD_TRUE    reduce using rule 48 (condition -> expression EQ_OP expression .)
    KEYWORD_FALSE   reduce using rule 48 (condition -> expression EQ_OP expression .)
    LPAREN          reduce using rule 48 (condition -> expression EQ_OP expression .)
    RPAREN          reduce using rule 48 (condition -> expression EQ_OP expression .)
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50

  ! PLUS_OP         [ reduce using rule 48 (condition -> expression EQ_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 48 (condition -> expression EQ_OP expression .) ]


state 145

    (49) condition -> expression NE_OP expression .
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    KEYWORD_AND     reduce using rule 49 (condition -> expression NE_OP expression .)
    KEYWORD_OR      reduce using rule 49 (condition -> expression NE_OP expression .)
    KEYWORD_BEGIN   reduce using rule 49 (condition -> expression NE_OP expression .)
    IDENTIFIER      reduce using rule 49 (condition -> expression NE_OP expression .)
    KEYWORD_PRINT   reduce using rule 49 (condition -> expression NE_OP expression .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 49 (condition -> expression NE_OP expression .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 49 (condition -> expression NE_OP expression .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 49 (condition -> expression NE_OP expression .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 49 (condition -> expression NE_OP expression .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 49 (condition -> expression NE_OP expression .)
    KEYWORD_IF      reduce using rule 49 (condition -> expression NE_OP expression .)
    KEYWORD_RETURN  reduce using rule 49 (condition -> expression NE_OP expression .)
    KEYWORD_BREAK   reduce using rule 49 (condition -> expression NE_OP expression .)
    KEYWORD_CONTINUE reduce using rule 49 (condition -> expression NE_OP expression .)
    KEYWORD_FUNCTION reduce using rule 49 (condition -> expression NE_OP expression .)
    KEYWORD_LET     reduce using rule 49 (condition -> expression NE_OP expression .)
    INTEGER         reduce using rule 49 (condition -> expression NE_OP expression .)
    FLOAT           reduce using rule 49 (condition -> expression NE_OP expression .)
    STRING          reduce using rule 49 (condition -> expression NE_OP expression .)
    KEYWORD_TRUE    reduce using rule 49 (condition -> expression NE_OP expression .)
    KEYWORD_FALSE   reduce using rule 49 (condition -> expression NE_OP expression .)
    LPAREN          reduce using rule 49 (condition -> expression NE_OP expression .)
    RPAREN          reduce using rule 49 (condition -> expression NE_OP expression .)
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50

  ! PLUS_OP         [ reduce using rule 49 (condition -> expression NE_OP expression .) ]
  ! MINUS_OP        [ reduce using rule 49 (condition -> expression NE_OP expression .) ]


state 146

    (60) natural_language -> KEYWORD_IF IDENTIFIER . IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> KEYWORD_IF IDENTIFIER . IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> KEYWORD_IF IDENTIFIER . IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> KEYWORD_IF IDENTIFIER . IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> KEYWORD_IF IDENTIFIER . IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> KEYWORD_IF IDENTIFIER . IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list

    IS_KEYWORD_NATURAL_LANG shift and go to state 101


state 147

    (33) if_statement -> KEYWORD_IF condition block else_part .

    IDENTIFIER      reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    KEYWORD_PRINT   reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    KEYWORD_IF      reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    KEYWORD_RETURN  reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    KEYWORD_BREAK   reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    KEYWORD_CONTINUE reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    KEYWORD_FUNCTION reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    KEYWORD_FOR     reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    KEYWORD_WHILE   reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    KEYWORD_LET     reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    INTEGER         reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    FLOAT           reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    STRING          reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    KEYWORD_TRUE    reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    KEYWORD_FALSE   reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    LPAREN          reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    PLUS_OP         reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    MINUS_OP        reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    $end            reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    KEYWORD_END     reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    KEYWORD_ELSE    reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)
    KEYWORD_ELSEIF  reduce using rule 33 (if_statement -> KEYWORD_IF condition block else_part .)


state 148

    (34) else_part -> KEYWORD_ELSE . block
    (42) block -> . KEYWORD_BEGIN statement_list KEYWORD_END
    (43) block -> . statement
    (6) statement -> . assignment_statement
    (7) statement -> . expression SEMICOLON
    (8) statement -> . print_statement
    (9) statement -> . natural_language
    (83) statement -> . return_statement
    (84) statement -> . break_statement
    (85) statement -> . continue_statement
    (86) statement -> . function_definition
    (10) assignment_statement -> . declaration
    (11) assignment_statement -> . IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (70) print_statement -> . KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON
    (55) natural_language -> . SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON
    (56) natural_language -> . ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON
    (57) natural_language -> . SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON
    (58) natural_language -> . MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (59) natural_language -> . DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (60) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (79) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (80) return_statement -> . KEYWORD_RETURN SEMICOLON
    (81) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) continue_statement -> . KEYWORD_CONTINUE SEMICOLON
    (75) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block
    (76) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block
    (12) declaration -> . KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    KEYWORD_BEGIN   shift and go to state 112
    IDENTIFIER      shift and go to state 114
    KEYWORD_PRINT   shift and go to state 24
    SET_KEYWORD_NATURAL_LANG shift and go to state 26
    ADD_KEYWORD_NATURAL_LANG shift and go to state 27
    SUB_KEYWORD_NATURAL_LANG shift and go to state 28
    MULT_KEYWORD_NATURAL_LANG shift and go to state 29
    DIV_KEYWORD_NATURAL_LANG shift and go to state 30
    KEYWORD_IF      shift and go to state 108
    KEYWORD_RETURN  shift and go to state 32
    KEYWORD_BREAK   shift and go to state 33
    KEYWORD_CONTINUE shift and go to state 34
    KEYWORD_FUNCTION shift and go to state 35
    KEYWORD_LET     shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    block                          shift and go to state 175
    statement                      shift and go to state 113
    assignment_statement           shift and go to state 7
    expression                     shift and go to state 8
    print_statement                shift and go to state 9
    natural_language               shift and go to state 10
    return_statement               shift and go to state 11
    break_statement                shift and go to state 12
    continue_statement             shift and go to state 13
    function_definition            shift and go to state 14
    declaration                    shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 149

    (35) else_part -> KEYWORD_ELSEIF . condition block else_part
    (44) condition -> . expression LT_OP expression
    (45) condition -> . expression GT_OP expression
    (46) condition -> . expression LE_OP expression
    (47) condition -> . expression GE_OP expression
    (48) condition -> . expression EQ_OP expression
    (49) condition -> . expression NE_OP expression
    (50) condition -> . condition KEYWORD_AND condition
    (51) condition -> . condition KEYWORD_OR condition
    (52) condition -> . KEYWORD_NOT condition
    (53) condition -> . expression
    (54) condition -> . LPAREN condition RPAREN
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    KEYWORD_NOT     shift and go to state 71
    LPAREN          shift and go to state 72
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    condition                      shift and go to state 176
    expression                     shift and go to state 69
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 150

    (36) else_part -> empty .

    $end            reduce using rule 36 (else_part -> empty .)
    KEYWORD_END     reduce using rule 36 (else_part -> empty .)
    IDENTIFIER      reduce using rule 36 (else_part -> empty .)
    KEYWORD_PRINT   reduce using rule 36 (else_part -> empty .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 36 (else_part -> empty .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 36 (else_part -> empty .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 36 (else_part -> empty .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 36 (else_part -> empty .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 36 (else_part -> empty .)
    KEYWORD_IF      reduce using rule 36 (else_part -> empty .)
    KEYWORD_RETURN  reduce using rule 36 (else_part -> empty .)
    KEYWORD_BREAK   reduce using rule 36 (else_part -> empty .)
    KEYWORD_CONTINUE reduce using rule 36 (else_part -> empty .)
    KEYWORD_FUNCTION reduce using rule 36 (else_part -> empty .)
    KEYWORD_FOR     reduce using rule 36 (else_part -> empty .)
    KEYWORD_WHILE   reduce using rule 36 (else_part -> empty .)
    KEYWORD_LET     reduce using rule 36 (else_part -> empty .)
    INTEGER         reduce using rule 36 (else_part -> empty .)
    FLOAT           reduce using rule 36 (else_part -> empty .)
    STRING          reduce using rule 36 (else_part -> empty .)
    KEYWORD_TRUE    reduce using rule 36 (else_part -> empty .)
    KEYWORD_FALSE   reduce using rule 36 (else_part -> empty .)
    LPAREN          reduce using rule 36 (else_part -> empty .)
    PLUS_OP         reduce using rule 36 (else_part -> empty .)
    MINUS_OP        reduce using rule 36 (else_part -> empty .)
    KEYWORD_ELSE    reduce using rule 36 (else_part -> empty .)
    KEYWORD_ELSEIF  reduce using rule 36 (else_part -> empty .)


state 151

    (50) condition -> condition KEYWORD_AND condition .
    (50) condition -> condition . KEYWORD_AND condition
    (51) condition -> condition . KEYWORD_OR condition

    KEYWORD_AND     reduce using rule 50 (condition -> condition KEYWORD_AND condition .)
    KEYWORD_OR      reduce using rule 50 (condition -> condition KEYWORD_AND condition .)
    KEYWORD_BEGIN   reduce using rule 50 (condition -> condition KEYWORD_AND condition .)
    IDENTIFIER      reduce using rule 50 (condition -> condition KEYWORD_AND condition .)
    KEYWORD_PRINT   reduce using rule 50 (condition -> condition KEYWORD_AND condition .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 50 (condition -> condition KEYWORD_AND condition .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 50 (condition -> condition KEYWORD_AND condition .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 50 (condition -> condition KEYWORD_AND condition .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 50 (condition -> condition KEYWORD_AND condition .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 50 (condition -> condition KEYWORD_AND condition .)
    KEYWORD_IF      reduce using rule 50 (condition -> condition KEYWORD_AND condition .)
    KEYWORD_RETURN  reduce using rule 50 (condition -> condition KEYWORD_AND condition .)
    KEYWORD_BREAK   reduce using rule 50 (condition -> condition KEYWORD_AND condition .)
    KEYWORD_CONTINUE reduce using rule 50 (condition -> condition KEYWORD_AND condition .)
    KEYWORD_FUNCTION reduce using rule 50 (condition -> condition KEYWORD_AND condition .)
    KEYWORD_LET     reduce using rule 50 (condition -> condition KEYWORD_AND condition .)
    INTEGER         reduce using rule 50 (condition -> condition KEYWORD_AND condition .)
    FLOAT           reduce using rule 50 (condition -> condition KEYWORD_AND condition .)
    STRING          reduce using rule 50 (condition -> condition KEYWORD_AND condition .)
    KEYWORD_TRUE    reduce using rule 50 (condition -> condition KEYWORD_AND condition .)
    KEYWORD_FALSE   reduce using rule 50 (condition -> condition KEYWORD_AND condition .)
    LPAREN          reduce using rule 50 (condition -> condition KEYWORD_AND condition .)
    PLUS_OP         reduce using rule 50 (condition -> condition KEYWORD_AND condition .)
    MINUS_OP        reduce using rule 50 (condition -> condition KEYWORD_AND condition .)
    RPAREN          reduce using rule 50 (condition -> condition KEYWORD_AND condition .)

  ! KEYWORD_AND     [ shift and go to state 110 ]
  ! KEYWORD_OR      [ shift and go to state 111 ]


state 152

    (51) condition -> condition KEYWORD_OR condition .
    (50) condition -> condition . KEYWORD_AND condition
    (51) condition -> condition . KEYWORD_OR condition

    KEYWORD_OR      reduce using rule 51 (condition -> condition KEYWORD_OR condition .)
    KEYWORD_BEGIN   reduce using rule 51 (condition -> condition KEYWORD_OR condition .)
    IDENTIFIER      reduce using rule 51 (condition -> condition KEYWORD_OR condition .)
    KEYWORD_PRINT   reduce using rule 51 (condition -> condition KEYWORD_OR condition .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 51 (condition -> condition KEYWORD_OR condition .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 51 (condition -> condition KEYWORD_OR condition .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 51 (condition -> condition KEYWORD_OR condition .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 51 (condition -> condition KEYWORD_OR condition .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 51 (condition -> condition KEYWORD_OR condition .)
    KEYWORD_IF      reduce using rule 51 (condition -> condition KEYWORD_OR condition .)
    KEYWORD_RETURN  reduce using rule 51 (condition -> condition KEYWORD_OR condition .)
    KEYWORD_BREAK   reduce using rule 51 (condition -> condition KEYWORD_OR condition .)
    KEYWORD_CONTINUE reduce using rule 51 (condition -> condition KEYWORD_OR condition .)
    KEYWORD_FUNCTION reduce using rule 51 (condition -> condition KEYWORD_OR condition .)
    KEYWORD_LET     reduce using rule 51 (condition -> condition KEYWORD_OR condition .)
    INTEGER         reduce using rule 51 (condition -> condition KEYWORD_OR condition .)
    FLOAT           reduce using rule 51 (condition -> condition KEYWORD_OR condition .)
    STRING          reduce using rule 51 (condition -> condition KEYWORD_OR condition .)
    KEYWORD_TRUE    reduce using rule 51 (condition -> condition KEYWORD_OR condition .)
    KEYWORD_FALSE   reduce using rule 51 (condition -> condition KEYWORD_OR condition .)
    LPAREN          reduce using rule 51 (condition -> condition KEYWORD_OR condition .)
    PLUS_OP         reduce using rule 51 (condition -> condition KEYWORD_OR condition .)
    MINUS_OP        reduce using rule 51 (condition -> condition KEYWORD_OR condition .)
    RPAREN          reduce using rule 51 (condition -> condition KEYWORD_OR condition .)
    KEYWORD_AND     shift and go to state 110

  ! KEYWORD_AND     [ reduce using rule 51 (condition -> condition KEYWORD_OR condition .) ]
  ! KEYWORD_OR      [ shift and go to state 111 ]


state 153

    (42) block -> KEYWORD_BEGIN statement_list . KEYWORD_END

    KEYWORD_END     shift and go to state 177


state 154

    (54) condition -> LPAREN condition RPAREN .

    KEYWORD_AND     reduce using rule 54 (condition -> LPAREN condition RPAREN .)
    KEYWORD_OR      reduce using rule 54 (condition -> LPAREN condition RPAREN .)
    KEYWORD_BEGIN   reduce using rule 54 (condition -> LPAREN condition RPAREN .)
    IDENTIFIER      reduce using rule 54 (condition -> LPAREN condition RPAREN .)
    KEYWORD_PRINT   reduce using rule 54 (condition -> LPAREN condition RPAREN .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 54 (condition -> LPAREN condition RPAREN .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 54 (condition -> LPAREN condition RPAREN .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 54 (condition -> LPAREN condition RPAREN .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 54 (condition -> LPAREN condition RPAREN .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 54 (condition -> LPAREN condition RPAREN .)
    KEYWORD_IF      reduce using rule 54 (condition -> LPAREN condition RPAREN .)
    KEYWORD_RETURN  reduce using rule 54 (condition -> LPAREN condition RPAREN .)
    KEYWORD_BREAK   reduce using rule 54 (condition -> LPAREN condition RPAREN .)
    KEYWORD_CONTINUE reduce using rule 54 (condition -> LPAREN condition RPAREN .)
    KEYWORD_FUNCTION reduce using rule 54 (condition -> LPAREN condition RPAREN .)
    KEYWORD_LET     reduce using rule 54 (condition -> LPAREN condition RPAREN .)
    INTEGER         reduce using rule 54 (condition -> LPAREN condition RPAREN .)
    FLOAT           reduce using rule 54 (condition -> LPAREN condition RPAREN .)
    STRING          reduce using rule 54 (condition -> LPAREN condition RPAREN .)
    KEYWORD_TRUE    reduce using rule 54 (condition -> LPAREN condition RPAREN .)
    KEYWORD_FALSE   reduce using rule 54 (condition -> LPAREN condition RPAREN .)
    LPAREN          reduce using rule 54 (condition -> LPAREN condition RPAREN .)
    PLUS_OP         reduce using rule 54 (condition -> LPAREN condition RPAREN .)
    MINUS_OP        reduce using rule 54 (condition -> LPAREN condition RPAREN .)
    RPAREN          reduce using rule 54 (condition -> LPAREN condition RPAREN .)


state 155

    (77) parameter_declaration_list -> IDENTIFIER . COMMA parameter_declaration_list
    (78) parameter_declaration_list -> IDENTIFIER .

    COMMA           shift and go to state 178
    RPAREN          reduce using rule 78 (parameter_declaration_list -> IDENTIFIER .)


state 156

    (75) function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list . RPAREN block

    RPAREN          shift and go to state 179


state 157

    (76) function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN . block
    (42) block -> . KEYWORD_BEGIN statement_list KEYWORD_END
    (43) block -> . statement
    (6) statement -> . assignment_statement
    (7) statement -> . expression SEMICOLON
    (8) statement -> . print_statement
    (9) statement -> . natural_language
    (83) statement -> . return_statement
    (84) statement -> . break_statement
    (85) statement -> . continue_statement
    (86) statement -> . function_definition
    (10) assignment_statement -> . declaration
    (11) assignment_statement -> . IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (70) print_statement -> . KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON
    (55) natural_language -> . SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON
    (56) natural_language -> . ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON
    (57) natural_language -> . SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON
    (58) natural_language -> . MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (59) natural_language -> . DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (60) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (79) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (80) return_statement -> . KEYWORD_RETURN SEMICOLON
    (81) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) continue_statement -> . KEYWORD_CONTINUE SEMICOLON
    (75) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block
    (76) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block
    (12) declaration -> . KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    KEYWORD_BEGIN   shift and go to state 112
    IDENTIFIER      shift and go to state 114
    KEYWORD_PRINT   shift and go to state 24
    SET_KEYWORD_NATURAL_LANG shift and go to state 26
    ADD_KEYWORD_NATURAL_LANG shift and go to state 27
    SUB_KEYWORD_NATURAL_LANG shift and go to state 28
    MULT_KEYWORD_NATURAL_LANG shift and go to state 29
    DIV_KEYWORD_NATURAL_LANG shift and go to state 30
    KEYWORD_IF      shift and go to state 108
    KEYWORD_RETURN  shift and go to state 32
    KEYWORD_BREAK   shift and go to state 33
    KEYWORD_CONTINUE shift and go to state 34
    KEYWORD_FUNCTION shift and go to state 35
    KEYWORD_LET     shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    block                          shift and go to state 180
    statement                      shift and go to state 113
    assignment_statement           shift and go to state 7
    expression                     shift and go to state 8
    print_statement                shift and go to state 9
    natural_language               shift and go to state 10
    return_statement               shift and go to state 11
    break_statement                shift and go to state 12
    continue_statement             shift and go to state 13
    function_definition            shift and go to state 14
    declaration                    shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 158

    (37) for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression . KEYWORD_TO expression block
    (38) for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression . KEYWORD_TO expression KEYWORD_STEP expression block
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    KEYWORD_TO      shift and go to state 181
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50


state 159

    (39) for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression . KEYWORD_STEP expression block
    (40) for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression . block
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term
    (42) block -> . KEYWORD_BEGIN statement_list KEYWORD_END
    (43) block -> . statement
    (6) statement -> . assignment_statement
    (7) statement -> . expression SEMICOLON
    (8) statement -> . print_statement
    (9) statement -> . natural_language
    (83) statement -> . return_statement
    (84) statement -> . break_statement
    (85) statement -> . continue_statement
    (86) statement -> . function_definition
    (10) assignment_statement -> . declaration
    (11) assignment_statement -> . IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (70) print_statement -> . KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON
    (55) natural_language -> . SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON
    (56) natural_language -> . ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON
    (57) natural_language -> . SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON
    (58) natural_language -> . MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (59) natural_language -> . DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (60) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (79) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (80) return_statement -> . KEYWORD_RETURN SEMICOLON
    (81) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) continue_statement -> . KEYWORD_CONTINUE SEMICOLON
    (75) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block
    (76) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block
    (12) declaration -> . KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    KEYWORD_STEP    shift and go to state 182
    PLUS_OP         shift and go to state 184
    MINUS_OP        shift and go to state 185
    KEYWORD_BEGIN   shift and go to state 112
    IDENTIFIER      shift and go to state 114
    KEYWORD_PRINT   shift and go to state 24
    SET_KEYWORD_NATURAL_LANG shift and go to state 26
    ADD_KEYWORD_NATURAL_LANG shift and go to state 27
    SUB_KEYWORD_NATURAL_LANG shift and go to state 28
    MULT_KEYWORD_NATURAL_LANG shift and go to state 29
    DIV_KEYWORD_NATURAL_LANG shift and go to state 30
    KEYWORD_IF      shift and go to state 108
    KEYWORD_RETURN  shift and go to state 32
    KEYWORD_BREAK   shift and go to state 33
    KEYWORD_CONTINUE shift and go to state 34
    KEYWORD_FUNCTION shift and go to state 35
    KEYWORD_LET     shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25

    declaration                    shift and go to state 19
    expression                     shift and go to state 8
    block                          shift and go to state 183
    term                           shift and go to state 22
    statement                      shift and go to state 113
    assignment_statement           shift and go to state 7
    print_statement                shift and go to state 9
    natural_language               shift and go to state 10
    return_statement               shift and go to state 11
    break_statement                shift and go to state 12
    continue_statement             shift and go to state 13
    function_definition            shift and go to state 14
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 160

    (12) declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression . SEMICOLON
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    SEMICOLON       shift and go to state 186
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50


state 161

    (67) parameter_list -> expression COMMA parameter_list .

    RPAREN          reduce using rule 67 (parameter_list -> expression COMMA parameter_list .)


state 162

    (70) print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .

    IDENTIFIER      reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    KEYWORD_PRINT   reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    KEYWORD_IF      reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    KEYWORD_CONTINUE reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    KEYWORD_FUNCTION reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    KEYWORD_FOR     reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    KEYWORD_LET     reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    INTEGER         reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    FLOAT           reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    STRING          reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    LPAREN          reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    PLUS_OP         reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    MINUS_OP        reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    $end            reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    KEYWORD_END     reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    KEYWORD_ELSEIF  reduce using rule 70 (print_statement -> KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON .)


state 163

    (71) print_arguments -> printable_item COMMA print_arguments .

    RPAREN          reduce using rule 71 (print_arguments -> printable_item COMMA print_arguments .)


state 164

    (55) natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .

    IDENTIFIER      reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    KEYWORD_PRINT   reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    KEYWORD_IF      reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    KEYWORD_CONTINUE reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    KEYWORD_FUNCTION reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    KEYWORD_FOR     reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    KEYWORD_LET     reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    INTEGER         reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    FLOAT           reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    STRING          reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    LPAREN          reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    PLUS_OP         reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    MINUS_OP        reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    $end            reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    KEYWORD_END     reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)
    KEYWORD_ELSEIF  reduce using rule 55 (natural_language -> SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON .)


state 165

    (56) natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .

    IDENTIFIER      reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    KEYWORD_PRINT   reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    KEYWORD_IF      reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    KEYWORD_CONTINUE reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    KEYWORD_FUNCTION reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    KEYWORD_FOR     reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    KEYWORD_LET     reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    INTEGER         reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    STRING          reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    LPAREN          reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    PLUS_OP         reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    MINUS_OP        reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    $end            reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    KEYWORD_END     reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)
    KEYWORD_ELSEIF  reduce using rule 56 (natural_language -> ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON .)


state 166

    (57) natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .

    IDENTIFIER      reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    KEYWORD_PRINT   reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    KEYWORD_IF      reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    KEYWORD_CONTINUE reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    KEYWORD_FUNCTION reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    KEYWORD_FOR     reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    KEYWORD_LET     reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    INTEGER         reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    STRING          reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    LPAREN          reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    PLUS_OP         reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    MINUS_OP        reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    $end            reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    KEYWORD_END     reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)
    KEYWORD_ELSEIF  reduce using rule 57 (natural_language -> SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON .)


state 167

    (58) natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .

    IDENTIFIER      reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_PRINT   reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_IF      reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_CONTINUE reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_FUNCTION reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_FOR     reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_LET     reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    INTEGER         reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    FLOAT           reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    STRING          reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    LPAREN          reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    PLUS_OP         reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    MINUS_OP        reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    $end            reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_END     reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_ELSEIF  reduce using rule 58 (natural_language -> MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)


state 168

    (59) natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .

    IDENTIFIER      reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_PRINT   reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_IF      reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_CONTINUE reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_FUNCTION reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_FOR     reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_LET     reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    INTEGER         reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    FLOAT           reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    STRING          reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    LPAREN          reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    PLUS_OP         reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    MINUS_OP        reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    $end            reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_END     reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)
    KEYWORD_ELSEIF  reduce using rule 59 (natural_language -> DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON .)


state 169

    (60) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression . THEN_KEYWORD_NATURAL_LANG statement_list
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    THEN_KEYWORD_NATURAL_LANG shift and go to state 187
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50


state 170

    (61) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression . THEN_KEYWORD_NATURAL_LANG statement_list
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    THEN_KEYWORD_NATURAL_LANG shift and go to state 188
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50


state 171

    (62) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression . THEN_KEYWORD_NATURAL_LANG statement_list
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    THEN_KEYWORD_NATURAL_LANG shift and go to state 189
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50


state 172

    (63) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression . THEN_KEYWORD_NATURAL_LANG statement_list
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    THEN_KEYWORD_NATURAL_LANG shift and go to state 190
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50


state 173

    (64) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression . THEN_KEYWORD_NATURAL_LANG statement_list
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    THEN_KEYWORD_NATURAL_LANG shift and go to state 191
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50


state 174

    (65) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression . THEN_KEYWORD_NATURAL_LANG statement_list
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term

    THEN_KEYWORD_NATURAL_LANG shift and go to state 192
    PLUS_OP         shift and go to state 49
    MINUS_OP        shift and go to state 50


state 175

    (34) else_part -> KEYWORD_ELSE block .

    $end            reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    KEYWORD_END     reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    IDENTIFIER      reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    KEYWORD_PRINT   reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    KEYWORD_IF      reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    KEYWORD_RETURN  reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    KEYWORD_BREAK   reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    KEYWORD_CONTINUE reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    KEYWORD_FUNCTION reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    KEYWORD_FOR     reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    KEYWORD_WHILE   reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    KEYWORD_LET     reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    INTEGER         reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    FLOAT           reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    STRING          reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    KEYWORD_TRUE    reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    KEYWORD_FALSE   reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    LPAREN          reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    PLUS_OP         reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    MINUS_OP        reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    KEYWORD_ELSE    reduce using rule 34 (else_part -> KEYWORD_ELSE block .)
    KEYWORD_ELSEIF  reduce using rule 34 (else_part -> KEYWORD_ELSE block .)


state 176

    (35) else_part -> KEYWORD_ELSEIF condition . block else_part
    (50) condition -> condition . KEYWORD_AND condition
    (51) condition -> condition . KEYWORD_OR condition
    (42) block -> . KEYWORD_BEGIN statement_list KEYWORD_END
    (43) block -> . statement
    (6) statement -> . assignment_statement
    (7) statement -> . expression SEMICOLON
    (8) statement -> . print_statement
    (9) statement -> . natural_language
    (83) statement -> . return_statement
    (84) statement -> . break_statement
    (85) statement -> . continue_statement
    (86) statement -> . function_definition
    (10) assignment_statement -> . declaration
    (11) assignment_statement -> . IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (70) print_statement -> . KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON
    (55) natural_language -> . SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON
    (56) natural_language -> . ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON
    (57) natural_language -> . SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON
    (58) natural_language -> . MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (59) natural_language -> . DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (60) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (79) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (80) return_statement -> . KEYWORD_RETURN SEMICOLON
    (81) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) continue_statement -> . KEYWORD_CONTINUE SEMICOLON
    (75) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block
    (76) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block
    (12) declaration -> . KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    KEYWORD_AND     shift and go to state 110
    KEYWORD_OR      shift and go to state 111
    KEYWORD_BEGIN   shift and go to state 112
    IDENTIFIER      shift and go to state 114
    KEYWORD_PRINT   shift and go to state 24
    SET_KEYWORD_NATURAL_LANG shift and go to state 26
    ADD_KEYWORD_NATURAL_LANG shift and go to state 27
    SUB_KEYWORD_NATURAL_LANG shift and go to state 28
    MULT_KEYWORD_NATURAL_LANG shift and go to state 29
    DIV_KEYWORD_NATURAL_LANG shift and go to state 30
    KEYWORD_IF      shift and go to state 108
    KEYWORD_RETURN  shift and go to state 32
    KEYWORD_BREAK   shift and go to state 33
    KEYWORD_CONTINUE shift and go to state 34
    KEYWORD_FUNCTION shift and go to state 35
    KEYWORD_LET     shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    block                          shift and go to state 193
    statement                      shift and go to state 113
    assignment_statement           shift and go to state 7
    expression                     shift and go to state 8
    print_statement                shift and go to state 9
    natural_language               shift and go to state 10
    return_statement               shift and go to state 11
    break_statement                shift and go to state 12
    continue_statement             shift and go to state 13
    function_definition            shift and go to state 14
    declaration                    shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 177

    (42) block -> KEYWORD_BEGIN statement_list KEYWORD_END .

    $end            reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    KEYWORD_END     reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    IDENTIFIER      reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    KEYWORD_PRINT   reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    KEYWORD_IF      reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    KEYWORD_RETURN  reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    KEYWORD_BREAK   reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    KEYWORD_CONTINUE reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    KEYWORD_FUNCTION reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    KEYWORD_FOR     reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    KEYWORD_WHILE   reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    KEYWORD_LET     reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    INTEGER         reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    FLOAT           reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    STRING          reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    KEYWORD_TRUE    reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    KEYWORD_FALSE   reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    LPAREN          reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    PLUS_OP         reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    MINUS_OP        reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    KEYWORD_ELSE    reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)
    KEYWORD_ELSEIF  reduce using rule 42 (block -> KEYWORD_BEGIN statement_list KEYWORD_END .)


state 178

    (77) parameter_declaration_list -> IDENTIFIER COMMA . parameter_declaration_list
    (77) parameter_declaration_list -> . IDENTIFIER COMMA parameter_declaration_list
    (78) parameter_declaration_list -> . IDENTIFIER

    IDENTIFIER      shift and go to state 155

    parameter_declaration_list     shift and go to state 194

state 179

    (75) function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN . block
    (42) block -> . KEYWORD_BEGIN statement_list KEYWORD_END
    (43) block -> . statement
    (6) statement -> . assignment_statement
    (7) statement -> . expression SEMICOLON
    (8) statement -> . print_statement
    (9) statement -> . natural_language
    (83) statement -> . return_statement
    (84) statement -> . break_statement
    (85) statement -> . continue_statement
    (86) statement -> . function_definition
    (10) assignment_statement -> . declaration
    (11) assignment_statement -> . IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (70) print_statement -> . KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON
    (55) natural_language -> . SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON
    (56) natural_language -> . ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON
    (57) natural_language -> . SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON
    (58) natural_language -> . MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (59) natural_language -> . DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (60) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (79) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (80) return_statement -> . KEYWORD_RETURN SEMICOLON
    (81) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) continue_statement -> . KEYWORD_CONTINUE SEMICOLON
    (75) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block
    (76) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block
    (12) declaration -> . KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    KEYWORD_BEGIN   shift and go to state 112
    IDENTIFIER      shift and go to state 114
    KEYWORD_PRINT   shift and go to state 24
    SET_KEYWORD_NATURAL_LANG shift and go to state 26
    ADD_KEYWORD_NATURAL_LANG shift and go to state 27
    SUB_KEYWORD_NATURAL_LANG shift and go to state 28
    MULT_KEYWORD_NATURAL_LANG shift and go to state 29
    DIV_KEYWORD_NATURAL_LANG shift and go to state 30
    KEYWORD_IF      shift and go to state 108
    KEYWORD_RETURN  shift and go to state 32
    KEYWORD_BREAK   shift and go to state 33
    KEYWORD_CONTINUE shift and go to state 34
    KEYWORD_FUNCTION shift and go to state 35
    KEYWORD_LET     shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    block                          shift and go to state 195
    statement                      shift and go to state 113
    assignment_statement           shift and go to state 7
    expression                     shift and go to state 8
    print_statement                shift and go to state 9
    natural_language               shift and go to state 10
    return_statement               shift and go to state 11
    break_statement                shift and go to state 12
    continue_statement             shift and go to state 13
    function_definition            shift and go to state 14
    declaration                    shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 180

    (76) function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .

    IDENTIFIER      reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    KEYWORD_PRINT   reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    KEYWORD_IF      reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    KEYWORD_RETURN  reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    KEYWORD_BREAK   reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    KEYWORD_CONTINUE reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    KEYWORD_FUNCTION reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    KEYWORD_FOR     reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    KEYWORD_WHILE   reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    KEYWORD_LET     reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    INTEGER         reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    FLOAT           reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    STRING          reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    KEYWORD_TRUE    reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    KEYWORD_FALSE   reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    LPAREN          reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    PLUS_OP         reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    MINUS_OP        reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    $end            reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    KEYWORD_END     reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    KEYWORD_ELSE    reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)
    KEYWORD_ELSEIF  reduce using rule 76 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block .)


state 181

    (37) for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO . expression block
    (38) for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO . expression KEYWORD_STEP expression block
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 196
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 182

    (39) for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP . expression block
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 197
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 183

    (40) for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .

    IDENTIFIER      reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    KEYWORD_PRINT   reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    KEYWORD_IF      reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    KEYWORD_RETURN  reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    KEYWORD_BREAK   reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    KEYWORD_CONTINUE reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    KEYWORD_FUNCTION reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    KEYWORD_FOR     reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    KEYWORD_WHILE   reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    KEYWORD_LET     reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    INTEGER         reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    FLOAT           reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    STRING          reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    KEYWORD_TRUE    reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    KEYWORD_FALSE   reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    LPAREN          reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    PLUS_OP         reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    MINUS_OP        reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    $end            reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    KEYWORD_END     reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    KEYWORD_ELSE    reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)
    KEYWORD_ELSEIF  reduce using rule 40 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression block .)


state 184

    (13) expression -> expression PLUS_OP . term
    (27) factor -> PLUS_OP . factor
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    term                           shift and go to state 83
    factor                         shift and go to state 198
    function_call                  shift and go to state 61

state 185

    (14) expression -> expression MINUS_OP . term
    (28) factor -> MINUS_OP . factor
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    term                           shift and go to state 84
    factor                         shift and go to state 199
    function_call                  shift and go to state 61

state 186

    (12) declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .

    IDENTIFIER      reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_PRINT   reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_IF      reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_CONTINUE reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_FUNCTION reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_FOR     reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_LET     reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    INTEGER         reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    FLOAT           reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    STRING          reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    LPAREN          reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    PLUS_OP         reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    MINUS_OP        reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    $end            reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_END     reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_ELSEIF  reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)
    KEYWORD_TO      reduce using rule 12 (declaration -> KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON .)


state 187

    (60) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG . statement_list
    (3) statement_list -> . statement statement_list
    (4) statement_list -> . control_statement statement_list
    (5) statement_list -> . empty
    (6) statement -> . assignment_statement
    (7) statement -> . expression SEMICOLON
    (8) statement -> . print_statement
    (9) statement -> . natural_language
    (83) statement -> . return_statement
    (84) statement -> . break_statement
    (85) statement -> . continue_statement
    (86) statement -> . function_definition
    (29) control_statement -> . if_statement
    (30) control_statement -> . for_statement
    (31) control_statement -> . while_statement
    (32) control_statement -> . function_call SEMICOLON
    (87) empty -> .
    (10) assignment_statement -> . declaration
    (11) assignment_statement -> . IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (70) print_statement -> . KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON
    (55) natural_language -> . SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON
    (56) natural_language -> . ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON
    (57) natural_language -> . SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON
    (58) natural_language -> . MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (59) natural_language -> . DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (60) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (79) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (80) return_statement -> . KEYWORD_RETURN SEMICOLON
    (81) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) continue_statement -> . KEYWORD_CONTINUE SEMICOLON
    (75) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block
    (76) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block
    (33) if_statement -> . KEYWORD_IF condition block else_part
    (37) for_statement -> . KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block
    (38) for_statement -> . KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block
    (39) for_statement -> . KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block
    (40) for_statement -> . KEYWORD_FOR declaration KEYWORD_TO expression block
    (41) while_statement -> . KEYWORD_WHILE condition block
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN
    (12) declaration -> . KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for KEYWORD_PRINT resolved as shift
  ! shift/reduce conflict for SET_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for ADD_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for SUB_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for MULT_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for DIV_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for KEYWORD_IF resolved as shift
  ! shift/reduce conflict for KEYWORD_RETURN resolved as shift
  ! shift/reduce conflict for KEYWORD_BREAK resolved as shift
  ! shift/reduce conflict for KEYWORD_CONTINUE resolved as shift
  ! shift/reduce conflict for KEYWORD_FUNCTION resolved as shift
  ! shift/reduce conflict for KEYWORD_FOR resolved as shift
  ! shift/reduce conflict for KEYWORD_WHILE resolved as shift
  ! shift/reduce conflict for KEYWORD_LET resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KEYWORD_TRUE resolved as shift
  ! shift/reduce conflict for KEYWORD_FALSE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for PLUS_OP resolved as shift
  ! shift/reduce conflict for MINUS_OP resolved as shift
    $end            reduce using rule 87 (empty -> .)
    KEYWORD_END     reduce using rule 87 (empty -> .)
    KEYWORD_ELSE    reduce using rule 87 (empty -> .)
    KEYWORD_ELSEIF  reduce using rule 87 (empty -> .)
    IDENTIFIER      shift and go to state 20
    KEYWORD_PRINT   shift and go to state 24
    SET_KEYWORD_NATURAL_LANG shift and go to state 26
    ADD_KEYWORD_NATURAL_LANG shift and go to state 27
    SUB_KEYWORD_NATURAL_LANG shift and go to state 28
    MULT_KEYWORD_NATURAL_LANG shift and go to state 29
    DIV_KEYWORD_NATURAL_LANG shift and go to state 30
    KEYWORD_IF      shift and go to state 31
    KEYWORD_RETURN  shift and go to state 32
    KEYWORD_BREAK   shift and go to state 33
    KEYWORD_CONTINUE shift and go to state 34
    KEYWORD_FUNCTION shift and go to state 35
    KEYWORD_FOR     shift and go to state 36
    KEYWORD_WHILE   shift and go to state 37
    KEYWORD_LET     shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

  ! IDENTIFIER      [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_PRINT   [ reduce using rule 87 (empty -> .) ]
  ! SET_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! ADD_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! SUB_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! MULT_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! DIV_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_IF      [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_RETURN  [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_BREAK   [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_CONTINUE [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_FUNCTION [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_FOR     [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_WHILE   [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_LET     [ reduce using rule 87 (empty -> .) ]
  ! INTEGER         [ reduce using rule 87 (empty -> .) ]
  ! FLOAT           [ reduce using rule 87 (empty -> .) ]
  ! STRING          [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_TRUE    [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_FALSE   [ reduce using rule 87 (empty -> .) ]
  ! LPAREN          [ reduce using rule 87 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 87 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 87 (empty -> .) ]

    expression                     shift and go to state 8
    statement_list                 shift and go to state 200
    statement                      shift and go to state 4
    control_statement              shift and go to state 5
    empty                          shift and go to state 6
    assignment_statement           shift and go to state 7
    print_statement                shift and go to state 9
    natural_language               shift and go to state 10
    return_statement               shift and go to state 11
    break_statement                shift and go to state 12
    continue_statement             shift and go to state 13
    function_definition            shift and go to state 14
    if_statement                   shift and go to state 15
    for_statement                  shift and go to state 16
    while_statement                shift and go to state 17
    function_call                  shift and go to state 18
    declaration                    shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 39

state 188

    (61) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG . statement_list
    (3) statement_list -> . statement statement_list
    (4) statement_list -> . control_statement statement_list
    (5) statement_list -> . empty
    (6) statement -> . assignment_statement
    (7) statement -> . expression SEMICOLON
    (8) statement -> . print_statement
    (9) statement -> . natural_language
    (83) statement -> . return_statement
    (84) statement -> . break_statement
    (85) statement -> . continue_statement
    (86) statement -> . function_definition
    (29) control_statement -> . if_statement
    (30) control_statement -> . for_statement
    (31) control_statement -> . while_statement
    (32) control_statement -> . function_call SEMICOLON
    (87) empty -> .
    (10) assignment_statement -> . declaration
    (11) assignment_statement -> . IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (70) print_statement -> . KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON
    (55) natural_language -> . SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON
    (56) natural_language -> . ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON
    (57) natural_language -> . SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON
    (58) natural_language -> . MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (59) natural_language -> . DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (60) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (79) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (80) return_statement -> . KEYWORD_RETURN SEMICOLON
    (81) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) continue_statement -> . KEYWORD_CONTINUE SEMICOLON
    (75) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block
    (76) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block
    (33) if_statement -> . KEYWORD_IF condition block else_part
    (37) for_statement -> . KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block
    (38) for_statement -> . KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block
    (39) for_statement -> . KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block
    (40) for_statement -> . KEYWORD_FOR declaration KEYWORD_TO expression block
    (41) while_statement -> . KEYWORD_WHILE condition block
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN
    (12) declaration -> . KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for KEYWORD_PRINT resolved as shift
  ! shift/reduce conflict for SET_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for ADD_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for SUB_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for MULT_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for DIV_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for KEYWORD_IF resolved as shift
  ! shift/reduce conflict for KEYWORD_RETURN resolved as shift
  ! shift/reduce conflict for KEYWORD_BREAK resolved as shift
  ! shift/reduce conflict for KEYWORD_CONTINUE resolved as shift
  ! shift/reduce conflict for KEYWORD_FUNCTION resolved as shift
  ! shift/reduce conflict for KEYWORD_FOR resolved as shift
  ! shift/reduce conflict for KEYWORD_WHILE resolved as shift
  ! shift/reduce conflict for KEYWORD_LET resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KEYWORD_TRUE resolved as shift
  ! shift/reduce conflict for KEYWORD_FALSE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for PLUS_OP resolved as shift
  ! shift/reduce conflict for MINUS_OP resolved as shift
    $end            reduce using rule 87 (empty -> .)
    KEYWORD_END     reduce using rule 87 (empty -> .)
    KEYWORD_ELSE    reduce using rule 87 (empty -> .)
    KEYWORD_ELSEIF  reduce using rule 87 (empty -> .)
    IDENTIFIER      shift and go to state 20
    KEYWORD_PRINT   shift and go to state 24
    SET_KEYWORD_NATURAL_LANG shift and go to state 26
    ADD_KEYWORD_NATURAL_LANG shift and go to state 27
    SUB_KEYWORD_NATURAL_LANG shift and go to state 28
    MULT_KEYWORD_NATURAL_LANG shift and go to state 29
    DIV_KEYWORD_NATURAL_LANG shift and go to state 30
    KEYWORD_IF      shift and go to state 31
    KEYWORD_RETURN  shift and go to state 32
    KEYWORD_BREAK   shift and go to state 33
    KEYWORD_CONTINUE shift and go to state 34
    KEYWORD_FUNCTION shift and go to state 35
    KEYWORD_FOR     shift and go to state 36
    KEYWORD_WHILE   shift and go to state 37
    KEYWORD_LET     shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

  ! IDENTIFIER      [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_PRINT   [ reduce using rule 87 (empty -> .) ]
  ! SET_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! ADD_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! SUB_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! MULT_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! DIV_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_IF      [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_RETURN  [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_BREAK   [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_CONTINUE [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_FUNCTION [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_FOR     [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_WHILE   [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_LET     [ reduce using rule 87 (empty -> .) ]
  ! INTEGER         [ reduce using rule 87 (empty -> .) ]
  ! FLOAT           [ reduce using rule 87 (empty -> .) ]
  ! STRING          [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_TRUE    [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_FALSE   [ reduce using rule 87 (empty -> .) ]
  ! LPAREN          [ reduce using rule 87 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 87 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 87 (empty -> .) ]

    expression                     shift and go to state 8
    statement_list                 shift and go to state 201
    statement                      shift and go to state 4
    control_statement              shift and go to state 5
    empty                          shift and go to state 6
    assignment_statement           shift and go to state 7
    print_statement                shift and go to state 9
    natural_language               shift and go to state 10
    return_statement               shift and go to state 11
    break_statement                shift and go to state 12
    continue_statement             shift and go to state 13
    function_definition            shift and go to state 14
    if_statement                   shift and go to state 15
    for_statement                  shift and go to state 16
    while_statement                shift and go to state 17
    function_call                  shift and go to state 18
    declaration                    shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 39

state 189

    (62) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG . statement_list
    (3) statement_list -> . statement statement_list
    (4) statement_list -> . control_statement statement_list
    (5) statement_list -> . empty
    (6) statement -> . assignment_statement
    (7) statement -> . expression SEMICOLON
    (8) statement -> . print_statement
    (9) statement -> . natural_language
    (83) statement -> . return_statement
    (84) statement -> . break_statement
    (85) statement -> . continue_statement
    (86) statement -> . function_definition
    (29) control_statement -> . if_statement
    (30) control_statement -> . for_statement
    (31) control_statement -> . while_statement
    (32) control_statement -> . function_call SEMICOLON
    (87) empty -> .
    (10) assignment_statement -> . declaration
    (11) assignment_statement -> . IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (70) print_statement -> . KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON
    (55) natural_language -> . SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON
    (56) natural_language -> . ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON
    (57) natural_language -> . SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON
    (58) natural_language -> . MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (59) natural_language -> . DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (60) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (79) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (80) return_statement -> . KEYWORD_RETURN SEMICOLON
    (81) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) continue_statement -> . KEYWORD_CONTINUE SEMICOLON
    (75) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block
    (76) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block
    (33) if_statement -> . KEYWORD_IF condition block else_part
    (37) for_statement -> . KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block
    (38) for_statement -> . KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block
    (39) for_statement -> . KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block
    (40) for_statement -> . KEYWORD_FOR declaration KEYWORD_TO expression block
    (41) while_statement -> . KEYWORD_WHILE condition block
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN
    (12) declaration -> . KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for KEYWORD_PRINT resolved as shift
  ! shift/reduce conflict for SET_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for ADD_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for SUB_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for MULT_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for DIV_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for KEYWORD_IF resolved as shift
  ! shift/reduce conflict for KEYWORD_RETURN resolved as shift
  ! shift/reduce conflict for KEYWORD_BREAK resolved as shift
  ! shift/reduce conflict for KEYWORD_CONTINUE resolved as shift
  ! shift/reduce conflict for KEYWORD_FUNCTION resolved as shift
  ! shift/reduce conflict for KEYWORD_FOR resolved as shift
  ! shift/reduce conflict for KEYWORD_WHILE resolved as shift
  ! shift/reduce conflict for KEYWORD_LET resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KEYWORD_TRUE resolved as shift
  ! shift/reduce conflict for KEYWORD_FALSE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for PLUS_OP resolved as shift
  ! shift/reduce conflict for MINUS_OP resolved as shift
    $end            reduce using rule 87 (empty -> .)
    KEYWORD_END     reduce using rule 87 (empty -> .)
    KEYWORD_ELSE    reduce using rule 87 (empty -> .)
    KEYWORD_ELSEIF  reduce using rule 87 (empty -> .)
    IDENTIFIER      shift and go to state 20
    KEYWORD_PRINT   shift and go to state 24
    SET_KEYWORD_NATURAL_LANG shift and go to state 26
    ADD_KEYWORD_NATURAL_LANG shift and go to state 27
    SUB_KEYWORD_NATURAL_LANG shift and go to state 28
    MULT_KEYWORD_NATURAL_LANG shift and go to state 29
    DIV_KEYWORD_NATURAL_LANG shift and go to state 30
    KEYWORD_IF      shift and go to state 31
    KEYWORD_RETURN  shift and go to state 32
    KEYWORD_BREAK   shift and go to state 33
    KEYWORD_CONTINUE shift and go to state 34
    KEYWORD_FUNCTION shift and go to state 35
    KEYWORD_FOR     shift and go to state 36
    KEYWORD_WHILE   shift and go to state 37
    KEYWORD_LET     shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

  ! IDENTIFIER      [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_PRINT   [ reduce using rule 87 (empty -> .) ]
  ! SET_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! ADD_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! SUB_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! MULT_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! DIV_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_IF      [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_RETURN  [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_BREAK   [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_CONTINUE [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_FUNCTION [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_FOR     [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_WHILE   [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_LET     [ reduce using rule 87 (empty -> .) ]
  ! INTEGER         [ reduce using rule 87 (empty -> .) ]
  ! FLOAT           [ reduce using rule 87 (empty -> .) ]
  ! STRING          [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_TRUE    [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_FALSE   [ reduce using rule 87 (empty -> .) ]
  ! LPAREN          [ reduce using rule 87 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 87 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 87 (empty -> .) ]

    expression                     shift and go to state 8
    statement_list                 shift and go to state 202
    statement                      shift and go to state 4
    control_statement              shift and go to state 5
    empty                          shift and go to state 6
    assignment_statement           shift and go to state 7
    print_statement                shift and go to state 9
    natural_language               shift and go to state 10
    return_statement               shift and go to state 11
    break_statement                shift and go to state 12
    continue_statement             shift and go to state 13
    function_definition            shift and go to state 14
    if_statement                   shift and go to state 15
    for_statement                  shift and go to state 16
    while_statement                shift and go to state 17
    function_call                  shift and go to state 18
    declaration                    shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 39

state 190

    (63) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG . statement_list
    (3) statement_list -> . statement statement_list
    (4) statement_list -> . control_statement statement_list
    (5) statement_list -> . empty
    (6) statement -> . assignment_statement
    (7) statement -> . expression SEMICOLON
    (8) statement -> . print_statement
    (9) statement -> . natural_language
    (83) statement -> . return_statement
    (84) statement -> . break_statement
    (85) statement -> . continue_statement
    (86) statement -> . function_definition
    (29) control_statement -> . if_statement
    (30) control_statement -> . for_statement
    (31) control_statement -> . while_statement
    (32) control_statement -> . function_call SEMICOLON
    (87) empty -> .
    (10) assignment_statement -> . declaration
    (11) assignment_statement -> . IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (70) print_statement -> . KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON
    (55) natural_language -> . SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON
    (56) natural_language -> . ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON
    (57) natural_language -> . SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON
    (58) natural_language -> . MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (59) natural_language -> . DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (60) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (79) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (80) return_statement -> . KEYWORD_RETURN SEMICOLON
    (81) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) continue_statement -> . KEYWORD_CONTINUE SEMICOLON
    (75) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block
    (76) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block
    (33) if_statement -> . KEYWORD_IF condition block else_part
    (37) for_statement -> . KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block
    (38) for_statement -> . KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block
    (39) for_statement -> . KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block
    (40) for_statement -> . KEYWORD_FOR declaration KEYWORD_TO expression block
    (41) while_statement -> . KEYWORD_WHILE condition block
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN
    (12) declaration -> . KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for KEYWORD_PRINT resolved as shift
  ! shift/reduce conflict for SET_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for ADD_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for SUB_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for MULT_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for DIV_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for KEYWORD_IF resolved as shift
  ! shift/reduce conflict for KEYWORD_RETURN resolved as shift
  ! shift/reduce conflict for KEYWORD_BREAK resolved as shift
  ! shift/reduce conflict for KEYWORD_CONTINUE resolved as shift
  ! shift/reduce conflict for KEYWORD_FUNCTION resolved as shift
  ! shift/reduce conflict for KEYWORD_FOR resolved as shift
  ! shift/reduce conflict for KEYWORD_WHILE resolved as shift
  ! shift/reduce conflict for KEYWORD_LET resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KEYWORD_TRUE resolved as shift
  ! shift/reduce conflict for KEYWORD_FALSE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for PLUS_OP resolved as shift
  ! shift/reduce conflict for MINUS_OP resolved as shift
    $end            reduce using rule 87 (empty -> .)
    KEYWORD_END     reduce using rule 87 (empty -> .)
    KEYWORD_ELSE    reduce using rule 87 (empty -> .)
    KEYWORD_ELSEIF  reduce using rule 87 (empty -> .)
    IDENTIFIER      shift and go to state 20
    KEYWORD_PRINT   shift and go to state 24
    SET_KEYWORD_NATURAL_LANG shift and go to state 26
    ADD_KEYWORD_NATURAL_LANG shift and go to state 27
    SUB_KEYWORD_NATURAL_LANG shift and go to state 28
    MULT_KEYWORD_NATURAL_LANG shift and go to state 29
    DIV_KEYWORD_NATURAL_LANG shift and go to state 30
    KEYWORD_IF      shift and go to state 31
    KEYWORD_RETURN  shift and go to state 32
    KEYWORD_BREAK   shift and go to state 33
    KEYWORD_CONTINUE shift and go to state 34
    KEYWORD_FUNCTION shift and go to state 35
    KEYWORD_FOR     shift and go to state 36
    KEYWORD_WHILE   shift and go to state 37
    KEYWORD_LET     shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

  ! IDENTIFIER      [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_PRINT   [ reduce using rule 87 (empty -> .) ]
  ! SET_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! ADD_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! SUB_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! MULT_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! DIV_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_IF      [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_RETURN  [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_BREAK   [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_CONTINUE [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_FUNCTION [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_FOR     [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_WHILE   [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_LET     [ reduce using rule 87 (empty -> .) ]
  ! INTEGER         [ reduce using rule 87 (empty -> .) ]
  ! FLOAT           [ reduce using rule 87 (empty -> .) ]
  ! STRING          [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_TRUE    [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_FALSE   [ reduce using rule 87 (empty -> .) ]
  ! LPAREN          [ reduce using rule 87 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 87 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 87 (empty -> .) ]

    expression                     shift and go to state 8
    statement_list                 shift and go to state 203
    statement                      shift and go to state 4
    control_statement              shift and go to state 5
    empty                          shift and go to state 6
    assignment_statement           shift and go to state 7
    print_statement                shift and go to state 9
    natural_language               shift and go to state 10
    return_statement               shift and go to state 11
    break_statement                shift and go to state 12
    continue_statement             shift and go to state 13
    function_definition            shift and go to state 14
    if_statement                   shift and go to state 15
    for_statement                  shift and go to state 16
    while_statement                shift and go to state 17
    function_call                  shift and go to state 18
    declaration                    shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 39

state 191

    (64) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG . statement_list
    (3) statement_list -> . statement statement_list
    (4) statement_list -> . control_statement statement_list
    (5) statement_list -> . empty
    (6) statement -> . assignment_statement
    (7) statement -> . expression SEMICOLON
    (8) statement -> . print_statement
    (9) statement -> . natural_language
    (83) statement -> . return_statement
    (84) statement -> . break_statement
    (85) statement -> . continue_statement
    (86) statement -> . function_definition
    (29) control_statement -> . if_statement
    (30) control_statement -> . for_statement
    (31) control_statement -> . while_statement
    (32) control_statement -> . function_call SEMICOLON
    (87) empty -> .
    (10) assignment_statement -> . declaration
    (11) assignment_statement -> . IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (70) print_statement -> . KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON
    (55) natural_language -> . SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON
    (56) natural_language -> . ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON
    (57) natural_language -> . SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON
    (58) natural_language -> . MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (59) natural_language -> . DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (60) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (79) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (80) return_statement -> . KEYWORD_RETURN SEMICOLON
    (81) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) continue_statement -> . KEYWORD_CONTINUE SEMICOLON
    (75) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block
    (76) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block
    (33) if_statement -> . KEYWORD_IF condition block else_part
    (37) for_statement -> . KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block
    (38) for_statement -> . KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block
    (39) for_statement -> . KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block
    (40) for_statement -> . KEYWORD_FOR declaration KEYWORD_TO expression block
    (41) while_statement -> . KEYWORD_WHILE condition block
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN
    (12) declaration -> . KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for KEYWORD_PRINT resolved as shift
  ! shift/reduce conflict for SET_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for ADD_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for SUB_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for MULT_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for DIV_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for KEYWORD_IF resolved as shift
  ! shift/reduce conflict for KEYWORD_RETURN resolved as shift
  ! shift/reduce conflict for KEYWORD_BREAK resolved as shift
  ! shift/reduce conflict for KEYWORD_CONTINUE resolved as shift
  ! shift/reduce conflict for KEYWORD_FUNCTION resolved as shift
  ! shift/reduce conflict for KEYWORD_FOR resolved as shift
  ! shift/reduce conflict for KEYWORD_WHILE resolved as shift
  ! shift/reduce conflict for KEYWORD_LET resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KEYWORD_TRUE resolved as shift
  ! shift/reduce conflict for KEYWORD_FALSE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for PLUS_OP resolved as shift
  ! shift/reduce conflict for MINUS_OP resolved as shift
    $end            reduce using rule 87 (empty -> .)
    KEYWORD_END     reduce using rule 87 (empty -> .)
    KEYWORD_ELSE    reduce using rule 87 (empty -> .)
    KEYWORD_ELSEIF  reduce using rule 87 (empty -> .)
    IDENTIFIER      shift and go to state 20
    KEYWORD_PRINT   shift and go to state 24
    SET_KEYWORD_NATURAL_LANG shift and go to state 26
    ADD_KEYWORD_NATURAL_LANG shift and go to state 27
    SUB_KEYWORD_NATURAL_LANG shift and go to state 28
    MULT_KEYWORD_NATURAL_LANG shift and go to state 29
    DIV_KEYWORD_NATURAL_LANG shift and go to state 30
    KEYWORD_IF      shift and go to state 31
    KEYWORD_RETURN  shift and go to state 32
    KEYWORD_BREAK   shift and go to state 33
    KEYWORD_CONTINUE shift and go to state 34
    KEYWORD_FUNCTION shift and go to state 35
    KEYWORD_FOR     shift and go to state 36
    KEYWORD_WHILE   shift and go to state 37
    KEYWORD_LET     shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

  ! IDENTIFIER      [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_PRINT   [ reduce using rule 87 (empty -> .) ]
  ! SET_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! ADD_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! SUB_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! MULT_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! DIV_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_IF      [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_RETURN  [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_BREAK   [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_CONTINUE [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_FUNCTION [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_FOR     [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_WHILE   [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_LET     [ reduce using rule 87 (empty -> .) ]
  ! INTEGER         [ reduce using rule 87 (empty -> .) ]
  ! FLOAT           [ reduce using rule 87 (empty -> .) ]
  ! STRING          [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_TRUE    [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_FALSE   [ reduce using rule 87 (empty -> .) ]
  ! LPAREN          [ reduce using rule 87 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 87 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 87 (empty -> .) ]

    expression                     shift and go to state 8
    statement_list                 shift and go to state 204
    statement                      shift and go to state 4
    control_statement              shift and go to state 5
    empty                          shift and go to state 6
    assignment_statement           shift and go to state 7
    print_statement                shift and go to state 9
    natural_language               shift and go to state 10
    return_statement               shift and go to state 11
    break_statement                shift and go to state 12
    continue_statement             shift and go to state 13
    function_definition            shift and go to state 14
    if_statement                   shift and go to state 15
    for_statement                  shift and go to state 16
    while_statement                shift and go to state 17
    function_call                  shift and go to state 18
    declaration                    shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 39

state 192

    (65) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG . statement_list
    (3) statement_list -> . statement statement_list
    (4) statement_list -> . control_statement statement_list
    (5) statement_list -> . empty
    (6) statement -> . assignment_statement
    (7) statement -> . expression SEMICOLON
    (8) statement -> . print_statement
    (9) statement -> . natural_language
    (83) statement -> . return_statement
    (84) statement -> . break_statement
    (85) statement -> . continue_statement
    (86) statement -> . function_definition
    (29) control_statement -> . if_statement
    (30) control_statement -> . for_statement
    (31) control_statement -> . while_statement
    (32) control_statement -> . function_call SEMICOLON
    (87) empty -> .
    (10) assignment_statement -> . declaration
    (11) assignment_statement -> . IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (70) print_statement -> . KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON
    (55) natural_language -> . SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON
    (56) natural_language -> . ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON
    (57) natural_language -> . SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON
    (58) natural_language -> . MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (59) natural_language -> . DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (60) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (79) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (80) return_statement -> . KEYWORD_RETURN SEMICOLON
    (81) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) continue_statement -> . KEYWORD_CONTINUE SEMICOLON
    (75) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block
    (76) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block
    (33) if_statement -> . KEYWORD_IF condition block else_part
    (37) for_statement -> . KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block
    (38) for_statement -> . KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block
    (39) for_statement -> . KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block
    (40) for_statement -> . KEYWORD_FOR declaration KEYWORD_TO expression block
    (41) while_statement -> . KEYWORD_WHILE condition block
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN
    (12) declaration -> . KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for KEYWORD_PRINT resolved as shift
  ! shift/reduce conflict for SET_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for ADD_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for SUB_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for MULT_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for DIV_KEYWORD_NATURAL_LANG resolved as shift
  ! shift/reduce conflict for KEYWORD_IF resolved as shift
  ! shift/reduce conflict for KEYWORD_RETURN resolved as shift
  ! shift/reduce conflict for KEYWORD_BREAK resolved as shift
  ! shift/reduce conflict for KEYWORD_CONTINUE resolved as shift
  ! shift/reduce conflict for KEYWORD_FUNCTION resolved as shift
  ! shift/reduce conflict for KEYWORD_FOR resolved as shift
  ! shift/reduce conflict for KEYWORD_WHILE resolved as shift
  ! shift/reduce conflict for KEYWORD_LET resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for KEYWORD_TRUE resolved as shift
  ! shift/reduce conflict for KEYWORD_FALSE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for PLUS_OP resolved as shift
  ! shift/reduce conflict for MINUS_OP resolved as shift
    $end            reduce using rule 87 (empty -> .)
    KEYWORD_END     reduce using rule 87 (empty -> .)
    KEYWORD_ELSE    reduce using rule 87 (empty -> .)
    KEYWORD_ELSEIF  reduce using rule 87 (empty -> .)
    IDENTIFIER      shift and go to state 20
    KEYWORD_PRINT   shift and go to state 24
    SET_KEYWORD_NATURAL_LANG shift and go to state 26
    ADD_KEYWORD_NATURAL_LANG shift and go to state 27
    SUB_KEYWORD_NATURAL_LANG shift and go to state 28
    MULT_KEYWORD_NATURAL_LANG shift and go to state 29
    DIV_KEYWORD_NATURAL_LANG shift and go to state 30
    KEYWORD_IF      shift and go to state 31
    KEYWORD_RETURN  shift and go to state 32
    KEYWORD_BREAK   shift and go to state 33
    KEYWORD_CONTINUE shift and go to state 34
    KEYWORD_FUNCTION shift and go to state 35
    KEYWORD_FOR     shift and go to state 36
    KEYWORD_WHILE   shift and go to state 37
    KEYWORD_LET     shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

  ! IDENTIFIER      [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_PRINT   [ reduce using rule 87 (empty -> .) ]
  ! SET_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! ADD_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! SUB_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! MULT_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! DIV_KEYWORD_NATURAL_LANG [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_IF      [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_RETURN  [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_BREAK   [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_CONTINUE [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_FUNCTION [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_FOR     [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_WHILE   [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_LET     [ reduce using rule 87 (empty -> .) ]
  ! INTEGER         [ reduce using rule 87 (empty -> .) ]
  ! FLOAT           [ reduce using rule 87 (empty -> .) ]
  ! STRING          [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_TRUE    [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_FALSE   [ reduce using rule 87 (empty -> .) ]
  ! LPAREN          [ reduce using rule 87 (empty -> .) ]
  ! PLUS_OP         [ reduce using rule 87 (empty -> .) ]
  ! MINUS_OP        [ reduce using rule 87 (empty -> .) ]

    expression                     shift and go to state 8
    statement_list                 shift and go to state 205
    statement                      shift and go to state 4
    control_statement              shift and go to state 5
    empty                          shift and go to state 6
    assignment_statement           shift and go to state 7
    print_statement                shift and go to state 9
    natural_language               shift and go to state 10
    return_statement               shift and go to state 11
    break_statement                shift and go to state 12
    continue_statement             shift and go to state 13
    function_definition            shift and go to state 14
    if_statement                   shift and go to state 15
    for_statement                  shift and go to state 16
    while_statement                shift and go to state 17
    function_call                  shift and go to state 18
    declaration                    shift and go to state 19
    term                           shift and go to state 22
    factor                         shift and go to state 39

state 193

    (35) else_part -> KEYWORD_ELSEIF condition block . else_part
    (34) else_part -> . KEYWORD_ELSE block
    (35) else_part -> . KEYWORD_ELSEIF condition block else_part
    (36) else_part -> . empty
    (87) empty -> .

  ! shift/reduce conflict for KEYWORD_ELSE resolved as shift
  ! shift/reduce conflict for KEYWORD_ELSEIF resolved as shift
    KEYWORD_ELSE    shift and go to state 148
    KEYWORD_ELSEIF  shift and go to state 149
    $end            reduce using rule 87 (empty -> .)
    KEYWORD_END     reduce using rule 87 (empty -> .)
    IDENTIFIER      reduce using rule 87 (empty -> .)
    KEYWORD_PRINT   reduce using rule 87 (empty -> .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 87 (empty -> .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 87 (empty -> .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 87 (empty -> .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 87 (empty -> .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 87 (empty -> .)
    KEYWORD_IF      reduce using rule 87 (empty -> .)
    KEYWORD_RETURN  reduce using rule 87 (empty -> .)
    KEYWORD_BREAK   reduce using rule 87 (empty -> .)
    KEYWORD_CONTINUE reduce using rule 87 (empty -> .)
    KEYWORD_FUNCTION reduce using rule 87 (empty -> .)
    KEYWORD_FOR     reduce using rule 87 (empty -> .)
    KEYWORD_WHILE   reduce using rule 87 (empty -> .)
    KEYWORD_LET     reduce using rule 87 (empty -> .)
    INTEGER         reduce using rule 87 (empty -> .)
    FLOAT           reduce using rule 87 (empty -> .)
    STRING          reduce using rule 87 (empty -> .)
    KEYWORD_TRUE    reduce using rule 87 (empty -> .)
    KEYWORD_FALSE   reduce using rule 87 (empty -> .)
    LPAREN          reduce using rule 87 (empty -> .)
    PLUS_OP         reduce using rule 87 (empty -> .)
    MINUS_OP        reduce using rule 87 (empty -> .)

  ! KEYWORD_ELSE    [ reduce using rule 87 (empty -> .) ]
  ! KEYWORD_ELSEIF  [ reduce using rule 87 (empty -> .) ]

    else_part                      shift and go to state 206
    empty                          shift and go to state 150

state 194

    (77) parameter_declaration_list -> IDENTIFIER COMMA parameter_declaration_list .

    RPAREN          reduce using rule 77 (parameter_declaration_list -> IDENTIFIER COMMA parameter_declaration_list .)


state 195

    (75) function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .

    IDENTIFIER      reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    KEYWORD_PRINT   reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    KEYWORD_IF      reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    KEYWORD_RETURN  reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    KEYWORD_BREAK   reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    KEYWORD_CONTINUE reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    KEYWORD_FUNCTION reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    KEYWORD_FOR     reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    KEYWORD_WHILE   reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    KEYWORD_LET     reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    INTEGER         reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    FLOAT           reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    STRING          reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    KEYWORD_TRUE    reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    KEYWORD_FALSE   reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    LPAREN          reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    PLUS_OP         reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    MINUS_OP        reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    $end            reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    KEYWORD_END     reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    KEYWORD_ELSE    reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)
    KEYWORD_ELSEIF  reduce using rule 75 (function_definition -> KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block .)


state 196

    (37) for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression . block
    (38) for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression . KEYWORD_STEP expression block
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term
    (42) block -> . KEYWORD_BEGIN statement_list KEYWORD_END
    (43) block -> . statement
    (6) statement -> . assignment_statement
    (7) statement -> . expression SEMICOLON
    (8) statement -> . print_statement
    (9) statement -> . natural_language
    (83) statement -> . return_statement
    (84) statement -> . break_statement
    (85) statement -> . continue_statement
    (86) statement -> . function_definition
    (10) assignment_statement -> . declaration
    (11) assignment_statement -> . IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (70) print_statement -> . KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON
    (55) natural_language -> . SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON
    (56) natural_language -> . ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON
    (57) natural_language -> . SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON
    (58) natural_language -> . MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (59) natural_language -> . DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (60) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (79) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (80) return_statement -> . KEYWORD_RETURN SEMICOLON
    (81) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) continue_statement -> . KEYWORD_CONTINUE SEMICOLON
    (75) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block
    (76) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block
    (12) declaration -> . KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    KEYWORD_STEP    shift and go to state 208
    PLUS_OP         shift and go to state 184
    MINUS_OP        shift and go to state 185
    KEYWORD_BEGIN   shift and go to state 112
    IDENTIFIER      shift and go to state 114
    KEYWORD_PRINT   shift and go to state 24
    SET_KEYWORD_NATURAL_LANG shift and go to state 26
    ADD_KEYWORD_NATURAL_LANG shift and go to state 27
    SUB_KEYWORD_NATURAL_LANG shift and go to state 28
    MULT_KEYWORD_NATURAL_LANG shift and go to state 29
    DIV_KEYWORD_NATURAL_LANG shift and go to state 30
    KEYWORD_IF      shift and go to state 108
    KEYWORD_RETURN  shift and go to state 32
    KEYWORD_BREAK   shift and go to state 33
    KEYWORD_CONTINUE shift and go to state 34
    KEYWORD_FUNCTION shift and go to state 35
    KEYWORD_LET     shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25

    expression                     shift and go to state 8
    block                          shift and go to state 207
    term                           shift and go to state 22
    statement                      shift and go to state 113
    assignment_statement           shift and go to state 7
    print_statement                shift and go to state 9
    natural_language               shift and go to state 10
    return_statement               shift and go to state 11
    break_statement                shift and go to state 12
    continue_statement             shift and go to state 13
    function_definition            shift and go to state 14
    declaration                    shift and go to state 19
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 197

    (39) for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression . block
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term
    (42) block -> . KEYWORD_BEGIN statement_list KEYWORD_END
    (43) block -> . statement
    (6) statement -> . assignment_statement
    (7) statement -> . expression SEMICOLON
    (8) statement -> . print_statement
    (9) statement -> . natural_language
    (83) statement -> . return_statement
    (84) statement -> . break_statement
    (85) statement -> . continue_statement
    (86) statement -> . function_definition
    (10) assignment_statement -> . declaration
    (11) assignment_statement -> . IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (70) print_statement -> . KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON
    (55) natural_language -> . SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON
    (56) natural_language -> . ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON
    (57) natural_language -> . SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON
    (58) natural_language -> . MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (59) natural_language -> . DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (60) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (79) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (80) return_statement -> . KEYWORD_RETURN SEMICOLON
    (81) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) continue_statement -> . KEYWORD_CONTINUE SEMICOLON
    (75) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block
    (76) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block
    (12) declaration -> . KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    PLUS_OP         shift and go to state 184
    MINUS_OP        shift and go to state 185
    KEYWORD_BEGIN   shift and go to state 112
    IDENTIFIER      shift and go to state 114
    KEYWORD_PRINT   shift and go to state 24
    SET_KEYWORD_NATURAL_LANG shift and go to state 26
    ADD_KEYWORD_NATURAL_LANG shift and go to state 27
    SUB_KEYWORD_NATURAL_LANG shift and go to state 28
    MULT_KEYWORD_NATURAL_LANG shift and go to state 29
    DIV_KEYWORD_NATURAL_LANG shift and go to state 30
    KEYWORD_IF      shift and go to state 108
    KEYWORD_RETURN  shift and go to state 32
    KEYWORD_BREAK   shift and go to state 33
    KEYWORD_CONTINUE shift and go to state 34
    KEYWORD_FUNCTION shift and go to state 35
    KEYWORD_LET     shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25

    declaration                    shift and go to state 19
    expression                     shift and go to state 8
    block                          shift and go to state 209
    term                           shift and go to state 22
    statement                      shift and go to state 113
    assignment_statement           shift and go to state 7
    print_statement                shift and go to state 9
    natural_language               shift and go to state 10
    return_statement               shift and go to state 11
    break_statement                shift and go to state 12
    continue_statement             shift and go to state 13
    function_definition            shift and go to state 14
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 198

    (27) factor -> PLUS_OP factor .
    (18) term -> factor .

  ! reduce/reduce conflict for TIMES_OP resolved using rule 18 (term -> factor .)
  ! reduce/reduce conflict for DIVIDE_OP resolved using rule 18 (term -> factor .)
  ! reduce/reduce conflict for PLUS_OP resolved using rule 18 (term -> factor .)
  ! reduce/reduce conflict for MINUS_OP resolved using rule 18 (term -> factor .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 18 (term -> factor .)
    TIMES_OP        reduce using rule 18 (term -> factor .)
    DIVIDE_OP       reduce using rule 18 (term -> factor .)
    KEYWORD_STEP    reduce using rule 18 (term -> factor .)
    PLUS_OP         reduce using rule 18 (term -> factor .)
    MINUS_OP        reduce using rule 18 (term -> factor .)
    KEYWORD_BEGIN   reduce using rule 18 (term -> factor .)
    IDENTIFIER      reduce using rule 18 (term -> factor .)
    KEYWORD_PRINT   reduce using rule 18 (term -> factor .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 18 (term -> factor .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 18 (term -> factor .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 18 (term -> factor .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 18 (term -> factor .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 18 (term -> factor .)
    KEYWORD_IF      reduce using rule 18 (term -> factor .)
    KEYWORD_RETURN  reduce using rule 18 (term -> factor .)
    KEYWORD_BREAK   reduce using rule 18 (term -> factor .)
    KEYWORD_CONTINUE reduce using rule 18 (term -> factor .)
    KEYWORD_FUNCTION reduce using rule 18 (term -> factor .)
    KEYWORD_LET     reduce using rule 18 (term -> factor .)
    INTEGER         reduce using rule 18 (term -> factor .)
    FLOAT           reduce using rule 18 (term -> factor .)
    STRING          reduce using rule 18 (term -> factor .)
    KEYWORD_TRUE    reduce using rule 18 (term -> factor .)
    KEYWORD_FALSE   reduce using rule 18 (term -> factor .)
    LPAREN          reduce using rule 18 (term -> factor .)
    SEMICOLON       reduce using rule 18 (term -> factor .)

  ! TIMES_OP        [ reduce using rule 27 (factor -> PLUS_OP factor .) ]
  ! DIVIDE_OP       [ reduce using rule 27 (factor -> PLUS_OP factor .) ]
  ! SEMICOLON       [ reduce using rule 27 (factor -> PLUS_OP factor .) ]
  ! PLUS_OP         [ reduce using rule 27 (factor -> PLUS_OP factor .) ]
  ! MINUS_OP        [ reduce using rule 27 (factor -> PLUS_OP factor .) ]


state 199

    (28) factor -> MINUS_OP factor .
    (18) term -> factor .

  ! reduce/reduce conflict for TIMES_OP resolved using rule 18 (term -> factor .)
  ! reduce/reduce conflict for DIVIDE_OP resolved using rule 18 (term -> factor .)
  ! reduce/reduce conflict for PLUS_OP resolved using rule 18 (term -> factor .)
  ! reduce/reduce conflict for MINUS_OP resolved using rule 18 (term -> factor .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 18 (term -> factor .)
    TIMES_OP        reduce using rule 18 (term -> factor .)
    DIVIDE_OP       reduce using rule 18 (term -> factor .)
    KEYWORD_STEP    reduce using rule 18 (term -> factor .)
    PLUS_OP         reduce using rule 18 (term -> factor .)
    MINUS_OP        reduce using rule 18 (term -> factor .)
    KEYWORD_BEGIN   reduce using rule 18 (term -> factor .)
    IDENTIFIER      reduce using rule 18 (term -> factor .)
    KEYWORD_PRINT   reduce using rule 18 (term -> factor .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 18 (term -> factor .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 18 (term -> factor .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 18 (term -> factor .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 18 (term -> factor .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 18 (term -> factor .)
    KEYWORD_IF      reduce using rule 18 (term -> factor .)
    KEYWORD_RETURN  reduce using rule 18 (term -> factor .)
    KEYWORD_BREAK   reduce using rule 18 (term -> factor .)
    KEYWORD_CONTINUE reduce using rule 18 (term -> factor .)
    KEYWORD_FUNCTION reduce using rule 18 (term -> factor .)
    KEYWORD_LET     reduce using rule 18 (term -> factor .)
    INTEGER         reduce using rule 18 (term -> factor .)
    FLOAT           reduce using rule 18 (term -> factor .)
    STRING          reduce using rule 18 (term -> factor .)
    KEYWORD_TRUE    reduce using rule 18 (term -> factor .)
    KEYWORD_FALSE   reduce using rule 18 (term -> factor .)
    LPAREN          reduce using rule 18 (term -> factor .)
    SEMICOLON       reduce using rule 18 (term -> factor .)

  ! TIMES_OP        [ reduce using rule 28 (factor -> MINUS_OP factor .) ]
  ! DIVIDE_OP       [ reduce using rule 28 (factor -> MINUS_OP factor .) ]
  ! SEMICOLON       [ reduce using rule 28 (factor -> MINUS_OP factor .) ]
  ! PLUS_OP         [ reduce using rule 28 (factor -> MINUS_OP factor .) ]
  ! MINUS_OP        [ reduce using rule 28 (factor -> MINUS_OP factor .) ]


state 200

    (60) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .

    IDENTIFIER      reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_PRINT   reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_IF      reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_RETURN  reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_BREAK   reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_CONTINUE reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_FUNCTION reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_FOR     reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_WHILE   reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_LET     reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    INTEGER         reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    FLOAT           reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    STRING          reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_TRUE    reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_FALSE   reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    LPAREN          reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    PLUS_OP         reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    MINUS_OP        reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    $end            reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_END     reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_ELSE    reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_ELSEIF  reduce using rule 60 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)


state 201

    (61) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .

    IDENTIFIER      reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_PRINT   reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_IF      reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_RETURN  reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_BREAK   reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_CONTINUE reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_FUNCTION reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_FOR     reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_WHILE   reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_LET     reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    INTEGER         reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    FLOAT           reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    STRING          reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_TRUE    reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_FALSE   reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    LPAREN          reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    PLUS_OP         reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    MINUS_OP        reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    $end            reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_END     reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_ELSE    reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_ELSEIF  reduce using rule 61 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)


state 202

    (62) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .

    IDENTIFIER      reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_PRINT   reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_IF      reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_RETURN  reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_BREAK   reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_CONTINUE reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_FUNCTION reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_FOR     reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_WHILE   reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_LET     reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    INTEGER         reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    FLOAT           reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    STRING          reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_TRUE    reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_FALSE   reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    LPAREN          reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    PLUS_OP         reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    MINUS_OP        reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    $end            reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_END     reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_ELSE    reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_ELSEIF  reduce using rule 62 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)


state 203

    (63) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .

    IDENTIFIER      reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_PRINT   reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_IF      reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_RETURN  reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_BREAK   reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_CONTINUE reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_FUNCTION reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_FOR     reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_WHILE   reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_LET     reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    INTEGER         reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    FLOAT           reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    STRING          reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_TRUE    reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_FALSE   reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    LPAREN          reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    PLUS_OP         reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    MINUS_OP        reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    $end            reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_END     reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_ELSE    reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_ELSEIF  reduce using rule 63 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)


state 204

    (64) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .

    IDENTIFIER      reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_PRINT   reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_IF      reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_RETURN  reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_BREAK   reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_CONTINUE reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_FUNCTION reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_FOR     reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_WHILE   reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_LET     reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    INTEGER         reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    FLOAT           reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    STRING          reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_TRUE    reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_FALSE   reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    LPAREN          reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    PLUS_OP         reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    MINUS_OP        reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    $end            reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_END     reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_ELSE    reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_ELSEIF  reduce using rule 64 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)


state 205

    (65) natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .

    IDENTIFIER      reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_PRINT   reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_IF      reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_RETURN  reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_BREAK   reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_CONTINUE reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_FUNCTION reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_FOR     reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_WHILE   reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_LET     reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    INTEGER         reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    FLOAT           reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    STRING          reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_TRUE    reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_FALSE   reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    LPAREN          reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    PLUS_OP         reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    MINUS_OP        reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    $end            reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_END     reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_ELSE    reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)
    KEYWORD_ELSEIF  reduce using rule 65 (natural_language -> KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list .)


state 206

    (35) else_part -> KEYWORD_ELSEIF condition block else_part .

    $end            reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    KEYWORD_END     reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    IDENTIFIER      reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    KEYWORD_PRINT   reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    KEYWORD_IF      reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    KEYWORD_RETURN  reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    KEYWORD_BREAK   reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    KEYWORD_CONTINUE reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    KEYWORD_FUNCTION reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    KEYWORD_FOR     reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    KEYWORD_WHILE   reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    KEYWORD_LET     reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    INTEGER         reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    FLOAT           reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    STRING          reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    KEYWORD_TRUE    reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    KEYWORD_FALSE   reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    LPAREN          reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    PLUS_OP         reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    MINUS_OP        reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    KEYWORD_ELSE    reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)
    KEYWORD_ELSEIF  reduce using rule 35 (else_part -> KEYWORD_ELSEIF condition block else_part .)


state 207

    (37) for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .

    IDENTIFIER      reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    KEYWORD_PRINT   reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    KEYWORD_IF      reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    KEYWORD_RETURN  reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    KEYWORD_BREAK   reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    KEYWORD_CONTINUE reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    KEYWORD_FUNCTION reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    KEYWORD_FOR     reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    KEYWORD_WHILE   reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    KEYWORD_LET     reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    INTEGER         reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    FLOAT           reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    STRING          reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    KEYWORD_TRUE    reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    KEYWORD_FALSE   reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    LPAREN          reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    PLUS_OP         reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    MINUS_OP        reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    $end            reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    KEYWORD_END     reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    KEYWORD_ELSE    reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)
    KEYWORD_ELSEIF  reduce using rule 37 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression block .)


state 208

    (38) for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP . expression block
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    IDENTIFIER      shift and go to state 62
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25
    PLUS_OP         shift and go to state 21
    MINUS_OP        shift and go to state 23

    expression                     shift and go to state 210
    term                           shift and go to state 22
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 209

    (39) for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .

    IDENTIFIER      reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_PRINT   reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_IF      reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_RETURN  reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_BREAK   reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_CONTINUE reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_FUNCTION reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_FOR     reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_WHILE   reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_LET     reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    INTEGER         reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    FLOAT           reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    STRING          reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_TRUE    reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_FALSE   reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    LPAREN          reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    PLUS_OP         reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    MINUS_OP        reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    $end            reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_END     reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_ELSE    reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_ELSEIF  reduce using rule 39 (for_statement -> KEYWORD_FOR declaration KEYWORD_TO expression KEYWORD_STEP expression block .)


state 210

    (38) for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression . block
    (13) expression -> expression . PLUS_OP term
    (14) expression -> expression . MINUS_OP term
    (42) block -> . KEYWORD_BEGIN statement_list KEYWORD_END
    (43) block -> . statement
    (6) statement -> . assignment_statement
    (7) statement -> . expression SEMICOLON
    (8) statement -> . print_statement
    (9) statement -> . natural_language
    (83) statement -> . return_statement
    (84) statement -> . break_statement
    (85) statement -> . continue_statement
    (86) statement -> . function_definition
    (10) assignment_statement -> . declaration
    (11) assignment_statement -> . IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (13) expression -> . expression PLUS_OP term
    (14) expression -> . expression MINUS_OP term
    (15) expression -> . term
    (70) print_statement -> . KEYWORD_PRINT LPAREN print_arguments RPAREN SEMICOLON
    (55) natural_language -> . SET_KEYWORD_NATURAL_LANG IDENTIFIER KEYWORD_TO expression SEMICOLON
    (56) natural_language -> . ADD_KEYWORD_NATURAL_LANG expression KEYWORD_TO IDENTIFIER SEMICOLON
    (57) natural_language -> . SUB_KEYWORD_NATURAL_LANG expression FROM_KEYWORD_NATURAL_LANG IDENTIFIER SEMICOLON
    (58) natural_language -> . MULT_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (59) natural_language -> . DIV_KEYWORD_NATURAL_LANG IDENTIFIER BY_KEYWORD_NATURAL_LANG expression SEMICOLON
    (60) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (61) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GT_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (62) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG LE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (63) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG GE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (64) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG EQ_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (65) natural_language -> . KEYWORD_IF IDENTIFIER IS_KEYWORD_NATURAL_LANG NE_OP expression THEN_KEYWORD_NATURAL_LANG statement_list
    (79) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (80) return_statement -> . KEYWORD_RETURN SEMICOLON
    (81) break_statement -> . KEYWORD_BREAK SEMICOLON
    (82) continue_statement -> . KEYWORD_CONTINUE SEMICOLON
    (75) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN parameter_declaration_list RPAREN block
    (76) function_definition -> . KEYWORD_FUNCTION IDENTIFIER LPAREN RPAREN block
    (12) declaration -> . KEYWORD_LET IDENTIFIER ASSIGNMENT_OP expression SEMICOLON
    (16) term -> . term TIMES_OP factor
    (17) term -> . term DIVIDE_OP factor
    (18) term -> . factor
    (19) term -> . function_call
    (20) factor -> . INTEGER
    (21) factor -> . FLOAT
    (22) factor -> . STRING
    (23) factor -> . IDENTIFIER
    (24) factor -> . KEYWORD_TRUE
    (25) factor -> . KEYWORD_FALSE
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . PLUS_OP factor
    (28) factor -> . MINUS_OP factor
    (66) function_call -> . IDENTIFIER LPAREN parameter_list RPAREN

    PLUS_OP         shift and go to state 184
    MINUS_OP        shift and go to state 185
    KEYWORD_BEGIN   shift and go to state 112
    IDENTIFIER      shift and go to state 114
    KEYWORD_PRINT   shift and go to state 24
    SET_KEYWORD_NATURAL_LANG shift and go to state 26
    ADD_KEYWORD_NATURAL_LANG shift and go to state 27
    SUB_KEYWORD_NATURAL_LANG shift and go to state 28
    MULT_KEYWORD_NATURAL_LANG shift and go to state 29
    DIV_KEYWORD_NATURAL_LANG shift and go to state 30
    KEYWORD_IF      shift and go to state 108
    KEYWORD_RETURN  shift and go to state 32
    KEYWORD_BREAK   shift and go to state 33
    KEYWORD_CONTINUE shift and go to state 34
    KEYWORD_FUNCTION shift and go to state 35
    KEYWORD_LET     shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    KEYWORD_TRUE    shift and go to state 43
    KEYWORD_FALSE   shift and go to state 44
    LPAREN          shift and go to state 25

    expression                     shift and go to state 8
    block                          shift and go to state 211
    term                           shift and go to state 22
    statement                      shift and go to state 113
    assignment_statement           shift and go to state 7
    print_statement                shift and go to state 9
    natural_language               shift and go to state 10
    return_statement               shift and go to state 11
    break_statement                shift and go to state 12
    continue_statement             shift and go to state 13
    function_definition            shift and go to state 14
    declaration                    shift and go to state 19
    factor                         shift and go to state 39
    function_call                  shift and go to state 61

state 211

    (38) for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .

    IDENTIFIER      reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_PRINT   reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    SET_KEYWORD_NATURAL_LANG reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    ADD_KEYWORD_NATURAL_LANG reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    SUB_KEYWORD_NATURAL_LANG reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    MULT_KEYWORD_NATURAL_LANG reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    DIV_KEYWORD_NATURAL_LANG reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_IF      reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_RETURN  reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_BREAK   reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_CONTINUE reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_FUNCTION reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_FOR     reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_WHILE   reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_LET     reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    INTEGER         reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    FLOAT           reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    STRING          reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_TRUE    reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_FALSE   reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    LPAREN          reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    PLUS_OP         reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    MINUS_OP        reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    $end            reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_END     reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_ELSE    reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)
    KEYWORD_ELSEIF  reduce using rule 38 (for_statement -> KEYWORD_FOR IDENTIFIER ASSIGNMENT_OP expression KEYWORD_TO expression KEYWORD_STEP expression block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDENTIFIER in state 4 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_PRINT in state 4 resolved as shift
WARNING: shift/reduce conflict for SET_KEYWORD_NATURAL_LANG in state 4 resolved as shift
WARNING: shift/reduce conflict for ADD_KEYWORD_NATURAL_LANG in state 4 resolved as shift
WARNING: shift/reduce conflict for SUB_KEYWORD_NATURAL_LANG in state 4 resolved as shift
WARNING: shift/reduce conflict for MULT_KEYWORD_NATURAL_LANG in state 4 resolved as shift
WARNING: shift/reduce conflict for DIV_KEYWORD_NATURAL_LANG in state 4 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_IF in state 4 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_RETURN in state 4 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_BREAK in state 4 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_CONTINUE in state 4 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_FUNCTION in state 4 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_FOR in state 4 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_WHILE in state 4 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_LET in state 4 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 4 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 4 resolved as shift
WARNING: shift/reduce conflict for STRING in state 4 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_TRUE in state 4 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_FALSE in state 4 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 4 resolved as shift
WARNING: shift/reduce conflict for PLUS_OP in state 4 resolved as shift
WARNING: shift/reduce conflict for MINUS_OP in state 4 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 5 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_PRINT in state 5 resolved as shift
WARNING: shift/reduce conflict for SET_KEYWORD_NATURAL_LANG in state 5 resolved as shift
WARNING: shift/reduce conflict for ADD_KEYWORD_NATURAL_LANG in state 5 resolved as shift
WARNING: shift/reduce conflict for SUB_KEYWORD_NATURAL_LANG in state 5 resolved as shift
WARNING: shift/reduce conflict for MULT_KEYWORD_NATURAL_LANG in state 5 resolved as shift
WARNING: shift/reduce conflict for DIV_KEYWORD_NATURAL_LANG in state 5 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_IF in state 5 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_RETURN in state 5 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_BREAK in state 5 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_CONTINUE in state 5 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_FUNCTION in state 5 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_FOR in state 5 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_WHILE in state 5 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_LET in state 5 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 5 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 5 resolved as shift
WARNING: shift/reduce conflict for STRING in state 5 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_TRUE in state 5 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_FALSE in state 5 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 5 resolved as shift
WARNING: shift/reduce conflict for PLUS_OP in state 5 resolved as shift
WARNING: shift/reduce conflict for MINUS_OP in state 5 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 18 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 62 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 68 resolved as shift
WARNING: shift/reduce conflict for PLUS_OP in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS_OP in state 69 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_ELSE in state 109 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_ELSEIF in state 109 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 117 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 187 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_PRINT in state 187 resolved as shift
WARNING: shift/reduce conflict for SET_KEYWORD_NATURAL_LANG in state 187 resolved as shift
WARNING: shift/reduce conflict for ADD_KEYWORD_NATURAL_LANG in state 187 resolved as shift
WARNING: shift/reduce conflict for SUB_KEYWORD_NATURAL_LANG in state 187 resolved as shift
WARNING: shift/reduce conflict for MULT_KEYWORD_NATURAL_LANG in state 187 resolved as shift
WARNING: shift/reduce conflict for DIV_KEYWORD_NATURAL_LANG in state 187 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_IF in state 187 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_RETURN in state 187 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_BREAK in state 187 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_CONTINUE in state 187 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_FUNCTION in state 187 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_FOR in state 187 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_WHILE in state 187 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_LET in state 187 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 187 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 187 resolved as shift
WARNING: shift/reduce conflict for STRING in state 187 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_TRUE in state 187 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_FALSE in state 187 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 187 resolved as shift
WARNING: shift/reduce conflict for PLUS_OP in state 187 resolved as shift
WARNING: shift/reduce conflict for MINUS_OP in state 187 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 188 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_PRINT in state 188 resolved as shift
WARNING: shift/reduce conflict for SET_KEYWORD_NATURAL_LANG in state 188 resolved as shift
WARNING: shift/reduce conflict for ADD_KEYWORD_NATURAL_LANG in state 188 resolved as shift
WARNING: shift/reduce conflict for SUB_KEYWORD_NATURAL_LANG in state 188 resolved as shift
WARNING: shift/reduce conflict for MULT_KEYWORD_NATURAL_LANG in state 188 resolved as shift
WARNING: shift/reduce conflict for DIV_KEYWORD_NATURAL_LANG in state 188 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_IF in state 188 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_RETURN in state 188 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_BREAK in state 188 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_CONTINUE in state 188 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_FUNCTION in state 188 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_FOR in state 188 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_WHILE in state 188 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_LET in state 188 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 188 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 188 resolved as shift
WARNING: shift/reduce conflict for STRING in state 188 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_TRUE in state 188 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_FALSE in state 188 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 188 resolved as shift
WARNING: shift/reduce conflict for PLUS_OP in state 188 resolved as shift
WARNING: shift/reduce conflict for MINUS_OP in state 188 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 189 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_PRINT in state 189 resolved as shift
WARNING: shift/reduce conflict for SET_KEYWORD_NATURAL_LANG in state 189 resolved as shift
WARNING: shift/reduce conflict for ADD_KEYWORD_NATURAL_LANG in state 189 resolved as shift
WARNING: shift/reduce conflict for SUB_KEYWORD_NATURAL_LANG in state 189 resolved as shift
WARNING: shift/reduce conflict for MULT_KEYWORD_NATURAL_LANG in state 189 resolved as shift
WARNING: shift/reduce conflict for DIV_KEYWORD_NATURAL_LANG in state 189 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_IF in state 189 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_RETURN in state 189 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_BREAK in state 189 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_CONTINUE in state 189 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_FUNCTION in state 189 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_FOR in state 189 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_WHILE in state 189 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_LET in state 189 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 189 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 189 resolved as shift
WARNING: shift/reduce conflict for STRING in state 189 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_TRUE in state 189 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_FALSE in state 189 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 189 resolved as shift
WARNING: shift/reduce conflict for PLUS_OP in state 189 resolved as shift
WARNING: shift/reduce conflict for MINUS_OP in state 189 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 190 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_PRINT in state 190 resolved as shift
WARNING: shift/reduce conflict for SET_KEYWORD_NATURAL_LANG in state 190 resolved as shift
WARNING: shift/reduce conflict for ADD_KEYWORD_NATURAL_LANG in state 190 resolved as shift
WARNING: shift/reduce conflict for SUB_KEYWORD_NATURAL_LANG in state 190 resolved as shift
WARNING: shift/reduce conflict for MULT_KEYWORD_NATURAL_LANG in state 190 resolved as shift
WARNING: shift/reduce conflict for DIV_KEYWORD_NATURAL_LANG in state 190 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_IF in state 190 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_RETURN in state 190 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_BREAK in state 190 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_CONTINUE in state 190 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_FUNCTION in state 190 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_FOR in state 190 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_WHILE in state 190 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_LET in state 190 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 190 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 190 resolved as shift
WARNING: shift/reduce conflict for STRING in state 190 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_TRUE in state 190 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_FALSE in state 190 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 190 resolved as shift
WARNING: shift/reduce conflict for PLUS_OP in state 190 resolved as shift
WARNING: shift/reduce conflict for MINUS_OP in state 190 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 191 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_PRINT in state 191 resolved as shift
WARNING: shift/reduce conflict for SET_KEYWORD_NATURAL_LANG in state 191 resolved as shift
WARNING: shift/reduce conflict for ADD_KEYWORD_NATURAL_LANG in state 191 resolved as shift
WARNING: shift/reduce conflict for SUB_KEYWORD_NATURAL_LANG in state 191 resolved as shift
WARNING: shift/reduce conflict for MULT_KEYWORD_NATURAL_LANG in state 191 resolved as shift
WARNING: shift/reduce conflict for DIV_KEYWORD_NATURAL_LANG in state 191 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_IF in state 191 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_RETURN in state 191 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_BREAK in state 191 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_CONTINUE in state 191 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_FUNCTION in state 191 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_FOR in state 191 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_WHILE in state 191 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_LET in state 191 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 191 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 191 resolved as shift
WARNING: shift/reduce conflict for STRING in state 191 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_TRUE in state 191 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_FALSE in state 191 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 191 resolved as shift
WARNING: shift/reduce conflict for PLUS_OP in state 191 resolved as shift
WARNING: shift/reduce conflict for MINUS_OP in state 191 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 192 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_PRINT in state 192 resolved as shift
WARNING: shift/reduce conflict for SET_KEYWORD_NATURAL_LANG in state 192 resolved as shift
WARNING: shift/reduce conflict for ADD_KEYWORD_NATURAL_LANG in state 192 resolved as shift
WARNING: shift/reduce conflict for SUB_KEYWORD_NATURAL_LANG in state 192 resolved as shift
WARNING: shift/reduce conflict for MULT_KEYWORD_NATURAL_LANG in state 192 resolved as shift
WARNING: shift/reduce conflict for DIV_KEYWORD_NATURAL_LANG in state 192 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_IF in state 192 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_RETURN in state 192 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_BREAK in state 192 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_CONTINUE in state 192 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_FUNCTION in state 192 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_FOR in state 192 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_WHILE in state 192 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_LET in state 192 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 192 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 192 resolved as shift
WARNING: shift/reduce conflict for STRING in state 192 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_TRUE in state 192 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_FALSE in state 192 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 192 resolved as shift
WARNING: shift/reduce conflict for PLUS_OP in state 192 resolved as shift
WARNING: shift/reduce conflict for MINUS_OP in state 192 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_ELSE in state 193 resolved as shift
WARNING: shift/reduce conflict for KEYWORD_ELSEIF in state 193 resolved as shift
WARNING: reduce/reduce conflict in state 93 resolved using rule (factor -> STRING)
WARNING: rejected rule (printable_item -> STRING) in state 93
WARNING: reduce/reduce conflict in state 198 resolved using rule (term -> factor)
WARNING: rejected rule (factor -> PLUS_OP factor) in state 198
WARNING: reduce/reduce conflict in state 199 resolved using rule (term -> factor)
WARNING: rejected rule (factor -> MINUS_OP factor) in state 199
WARNING: Rule (printable_item -> STRING) is never reduced
